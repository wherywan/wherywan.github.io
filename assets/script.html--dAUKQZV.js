import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as r,a as s,b as n,d as l,e as p}from"./app-hoN0JGLf.js";const t={},i=p('<h1 id="script" tabindex="-1"><a class="header-anchor" href="#script"><span>script</span></a></h1><h2 id="java环境下脚本的执行" tabindex="-1"><a class="header-anchor" href="#java环境下脚本的执行"><span>java环境下脚本的执行</span></a></h2><h3 id="python" tabindex="-1"><a class="header-anchor" href="#python"><span>python</span></a></h3>',3),y={href:"https://blog.csdn.net/master_hunter/article/details/127528487",target:"_blank",rel:"noopener noreferrer"},d={href:"https://jython.readthedocs.io/en/latest/JythonAndJavaIntegration/#jsr-223",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.jython.org/",target:"_blank",rel:"noopener noreferrer"},u=s("li",null,"引入jython包",-1),m=s("li",null,"使用hutool脚本工具",-1),b=s("li",null,"Jython2.7.3仅支持Python2.7",-1),F={href:"https://blog.csdn.net/qq_44648936/article/details/123593075",target:"_blank",rel:"noopener noreferrer"},h=p(`<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>&lt;dependencies&gt;</span></span>
<span class="line"><span>        &lt;dependency&gt;</span></span>
<span class="line"><span>            &lt;groupId&gt;org.python&lt;/groupId&gt;</span></span>
<span class="line"><span>            &lt;artifactId&gt;jython-standalone&lt;/artifactId&gt;</span></span>
<span class="line"><span>            &lt;version&gt;2.7.3&lt;/version&gt;</span></span>
<span class="line"><span>        &lt;/dependency&gt;</span></span>
<span class="line"><span>&lt;/dependencies&gt;</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>import org.python.util.PythonInterpreter;</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>public class HelloPython {</span></span>
<span class="line"><span>    public static void main(String[] args) {</span></span>
<span class="line"><span>        PythonInterpreter interpreter = new PythonInterpreter();</span></span>
<span class="line"><span>        interpreter.execfile(&quot;D:\\\\Jython\\\\test.py&quot;);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="php" tabindex="-1"><a class="header-anchor" href="#php"><span>php</span></a></h3>`,3),g={href:"https://www.jb51.net/article/16469_2.htm",target:"_blank",rel:"noopener noreferrer"},A={href:"https://php-java-bridge.sourceforge.net/pjb/examples.php",target:"_blank",rel:"noopener noreferrer"},E={href:"https://windows.php.net/download/",target:"_blank",rel:"noopener noreferrer"},f=s("li",null,"php-java-bridge",-1),q=p(`<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>implementation &#39;io.soluble.pjb:php-java-bridge:7.1.3&#39;</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">import</span><span style="color:#000000;"> java.io.ByteArrayOutputStream;</span></span>
<span class="line"><span style="color:#0000FF;">import</span><span style="color:#000000;"> java.io.Closeable;</span></span>
<span class="line"><span style="color:#0000FF;">import</span><span style="color:#000000;"> java.io.StringReader;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">import</span><span style="color:#000000;"> javax.script.Invocable;</span></span>
<span class="line"><span style="color:#0000FF;">import</span><span style="color:#000000;"> javax.script.ScriptEngine;</span></span>
<span class="line"><span style="color:#0000FF;">import</span><span style="color:#000000;"> javax.script.ScriptEngineManager;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">/**</span></span>
<span class="line"><span style="color:#008000;">* Create and run THREAD_COUNT PHP threads, concurrently accessing a</span></span>
<span class="line"><span style="color:#008000;">* shared resource.</span></span>
<span class="line"><span style="color:#008000;">* </span></span>
<span class="line"><span style="color:#008000;">* Create 5 script engines, passing each a shared resource allocated</span></span>
<span class="line"><span style="color:#008000;">* from Java. Each script engine has to implement Runnable.</span></span>
<span class="line"><span style="color:#008000;">*</span></span>
<span class="line"><span style="color:#008000;">* Java accesses the Runnable script engine using</span></span>
<span class="line"><span style="color:#008000;">* scriptEngine.getInterface() and calls thread.start() to invoke each</span></span>
<span class="line"><span style="color:#008000;">* PHP Runnable implementations concurrently.</span></span>
<span class="line"><span style="color:#008000;">*/</span></span>
<span class="line"><span style="color:#0000FF;">public</span><span style="color:#0000FF;"> class</span><span style="color:#267F99;"> PhpThreads</span><span style="color:#000000;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#0000FF;"> static</span><span style="color:#0000FF;"> final</span><span style="color:#267F99;"> String</span><span style="color:#001080;"> runnable</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> String</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;&lt;?php</span><span style="color:#EE0000;">\\n</span><span style="color:#A31515;">&quot;</span><span style="color:#000000;"> +</span></span>
<span class="line"><span style="color:#A31515;">            &quot;function run() {</span><span style="color:#EE0000;">\\n</span><span style="color:#A31515;">&quot;</span><span style="color:#000000;"> +</span></span>
<span class="line"><span style="color:#A31515;">            &quot; $out = java_context()-&gt;getAttribute(&#39;sharedResource&#39;, 100);</span><span style="color:#EE0000;">\\n</span><span style="color:#A31515;">&quot;</span><span style="color:#000000;"> +</span></span>
<span class="line"><span style="color:#A31515;">            &quot; $nr = (string)java_context()-&gt;getAttribute(&#39;nr&#39;, 100);</span><span style="color:#EE0000;">\\n</span><span style="color:#A31515;">&quot;</span><span style="color:#000000;"> +</span></span>
<span class="line"><span style="color:#A31515;">            &quot; echo </span><span style="color:#EE0000;">\\&quot;</span><span style="color:#A31515;">started thread: $nr</span><span style="color:#EE0000;">\\n\\&quot;</span><span style="color:#A31515;">;</span><span style="color:#EE0000;">\\n</span><span style="color:#A31515;">&quot;</span><span style="color:#000000;"> +</span></span>
<span class="line"><span style="color:#A31515;">            &quot; for($i=0; $i&lt;100; $i++) {</span><span style="color:#EE0000;">\\n</span><span style="color:#A31515;">&quot;</span><span style="color:#000000;"> +</span></span>
<span class="line"><span style="color:#A31515;">            &quot;  $out-&gt;write(ord($nr));</span><span style="color:#EE0000;">\\n</span><span style="color:#A31515;">&quot;</span><span style="color:#000000;"> +</span></span>
<span class="line"><span style="color:#A31515;">            &quot;  java(&#39;java.lang.Thread&#39;)-&gt;sleep(1);</span><span style="color:#EE0000;">\\n</span><span style="color:#A31515;">&quot;</span><span style="color:#000000;"> +</span></span>
<span class="line"><span style="color:#A31515;">            &quot; }</span><span style="color:#EE0000;">\\n</span><span style="color:#A31515;">&quot;</span><span style="color:#000000;"> +</span></span>
<span class="line"><span style="color:#A31515;">            &quot;}</span><span style="color:#EE0000;">\\n</span><span style="color:#A31515;">&quot;</span><span style="color:#000000;"> +</span></span>
<span class="line"><span style="color:#A31515;">            &quot;?&gt;</span><span style="color:#EE0000;">\\n</span><span style="color:#A31515;">&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">    </span></span>
<span class="line"><span style="color:#0000FF;">    static</span><span style="color:#0000FF;"> final</span><span style="color:#267F99;"> int</span><span style="color:#001080;"> THREAD_COUNT</span><span style="color:#000000;"> = </span><span style="color:#098658;">5</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#0000FF;"> static</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> main</span><span style="color:#000000;">(</span><span style="color:#267F99;">String</span><span style="color:#000000;">[] </span><span style="color:#001080;">args</span><span style="color:#000000;">) </span><span style="color:#0000FF;">throws</span><span style="color:#267F99;"> Exception</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#267F99;">    ScriptEngineManager</span><span style="color:#001080;"> manager</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> ScriptEngineManager</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#267F99;">    Thread</span><span style="color:#001080;"> threads</span><span style="color:#000000;">[] = </span><span style="color:#AF00DB;">new</span><span style="color:#267F99;"> Thread</span><span style="color:#000000;">[THREAD_COUNT];</span></span>
<span class="line"><span style="color:#267F99;">    ScriptEngine</span><span style="color:#001080;"> engines</span><span style="color:#000000;">[] = </span><span style="color:#AF00DB;">new</span><span style="color:#267F99;"> ScriptEngine</span><span style="color:#000000;">[THREAD_COUNT];</span></span>
<span class="line"><span style="color:#267F99;">    ByteArrayOutputStream</span><span style="color:#001080;"> sharedResource</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> ByteArrayOutputStream</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#267F99;">    StringReader</span><span style="color:#001080;"> runnableReader</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> StringReader</span><span style="color:#000000;">(runnable);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">    // create THREAD_COUNT PHP threads</span></span>
<span class="line"><span style="color:#AF00DB;">    for</span><span style="color:#000000;"> (</span><span style="color:#267F99;">int</span><span style="color:#001080;"> i</span><span style="color:#000000;">=</span><span style="color:#098658;">0</span><span style="color:#000000;">; i&lt;THREAD_COUNT; i++) {</span></span>
<span class="line"><span style="color:#000000;">        engines[i] = </span><span style="color:#001080;">manager</span><span style="color:#000000;">.</span><span style="color:#795E26;">getEngineByName</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;php-invocable&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#AF00DB;">        if</span><span style="color:#000000;"> (engines[i] == </span><span style="color:#0000FF;">null</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#AF00DB;">        throw</span><span style="color:#AF00DB;"> new</span><span style="color:#795E26;"> NullPointerException</span><span style="color:#000000;"> (</span><span style="color:#A31515;">&quot;php script engine not found&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">        </span></span>
<span class="line"><span style="color:#000000;">        engines[i].</span><span style="color:#795E26;">put</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;nr&quot;</span><span style="color:#000000;">, </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> Integer</span><span style="color:#000000;">(i+</span><span style="color:#098658;">1</span><span style="color:#000000;">));</span></span>
<span class="line"><span style="color:#000000;">        engines[i].</span><span style="color:#795E26;">put</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;sharedResource&quot;</span><span style="color:#000000;">, sharedResource);</span></span>
<span class="line"><span style="color:#000000;">        </span></span>
<span class="line"><span style="color:#000000;">        engines[i].</span><span style="color:#795E26;">eval</span><span style="color:#000000;">(runnableReader);</span></span>
<span class="line"><span style="color:#001080;">        runnableReader</span><span style="color:#000000;">.</span><span style="color:#795E26;">reset</span><span style="color:#000000;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">        // cast the whole script to Runnable; note also getInterface(specificClosure, type)</span></span>
<span class="line"><span style="color:#267F99;">        Runnable</span><span style="color:#001080;"> r</span><span style="color:#000000;"> = (Runnable) ((Invocable)engines[i]).</span><span style="color:#795E26;">getInterface</span><span style="color:#000000;">(</span><span style="color:#001080;">Runnable</span><span style="color:#000000;">.</span><span style="color:#001080;">class</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">        threads[i] = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> Thread</span><span style="color:#000000;">(r);</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">    </span></span>
<span class="line"><span style="color:#008000;">    // run the THREAD_COUNT PHP threads</span></span>
<span class="line"><span style="color:#AF00DB;">    for</span><span style="color:#000000;"> (</span><span style="color:#267F99;">int</span><span style="color:#001080;"> i</span><span style="color:#000000;">=</span><span style="color:#098658;">0</span><span style="color:#000000;">; i&lt;THREAD_COUNT; i++) {</span></span>
<span class="line"><span style="color:#000000;">        threads[i].</span><span style="color:#795E26;">start</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">    </span></span>
<span class="line"><span style="color:#008000;">    // wait for the THREAD_COUNT PHP threads to finish</span></span>
<span class="line"><span style="color:#AF00DB;">    for</span><span style="color:#000000;"> (</span><span style="color:#267F99;">int</span><span style="color:#001080;"> i</span><span style="color:#000000;">=</span><span style="color:#098658;">0</span><span style="color:#000000;">; i&lt;THREAD_COUNT; i++) {</span></span>
<span class="line"><span style="color:#000000;">        threads[i].</span><span style="color:#795E26;">join</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#000000;">        ((Closeable)engines[i]).</span><span style="color:#795E26;">close</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">    </span></span>
<span class="line"><span style="color:#008000;">    // print the output generated by the THREAD_COUNT concurrent threads</span></span>
<span class="line"><span style="color:#267F99;">    String</span><span style="color:#001080;"> result</span><span style="color:#000000;"> = </span><span style="color:#001080;">sharedResource</span><span style="color:#000000;">.</span><span style="color:#795E26;">toString</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#001080;">    System</span><span style="color:#000000;">.</span><span style="color:#001080;">out</span><span style="color:#000000;">.</span><span style="color:#795E26;">println</span><span style="color:#000000;">(result);</span></span>
<span class="line"><span style="color:#000000;">    </span></span>
<span class="line"><span style="color:#008000;">    // Check result</span></span>
<span class="line"><span style="color:#267F99;">    Object</span><span style="color:#001080;"> res</span><span style="color:#000000;">=</span><span style="color:#001080;">manager</span><span style="color:#000000;">.</span><span style="color:#795E26;">getEngineByName</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;php&quot;</span><span style="color:#000000;">).</span><span style="color:#795E26;">eval</span><span style="color:#000000;">(</span></span>
<span class="line"><span style="color:#A31515;">        &quot;&lt;?php &quot;</span><span style="color:#000000;"> +</span></span>
<span class="line"><span style="color:#A31515;">        &quot;exit((int)(&#39;10011002100310041005&#39;!=&quot;</span><span style="color:#000000;"> +</span></span>
<span class="line"><span style="color:#A31515;">        &quot;@system(</span><span style="color:#EE0000;">\\&quot;</span><span style="color:#A31515;">echo -n &quot;</span><span style="color:#000000;">+result+</span><span style="color:#A31515;">&quot;|sed &#39;s/./&amp;</span><span style="color:#EE0000;">\\\\\\n</span><span style="color:#A31515;">/g&#39;|sort|uniq -c|tr -d &#39; </span><span style="color:#EE0000;">\\\\\\n</span><span style="color:#A31515;">&#39;</span><span style="color:#EE0000;">\\&quot;</span><span style="color:#A31515;">)));&quot;</span><span style="color:#000000;"> +</span></span>
<span class="line"><span style="color:#A31515;">        &quot;?&gt;&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">    </span></span>
<span class="line"><span style="color:#001080;">    System</span><span style="color:#000000;">.</span><span style="color:#795E26;">exit</span><span style="color:#000000;">(((Number)res).</span><span style="color:#795E26;">intValue</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="groovy" tabindex="-1"><a class="header-anchor" href="#groovy"><span>groovy</span></a></h3><ul><li>引入groovy</li><li>ScriptEngine提供的eval(String)方法执行脚本内容</li><li>对json操作需使用 import groovy.json.JsonSlurper</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>implementation &#39;org.codehaus.groovy:groovy-all:3.0.16&#39;</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">package</span><span style="color:#000000;"> com.dandelion.test;</span></span>
<span class="line"><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#0000FF;">import</span><span style="color:#000000;"> com.dandelion.groovy.TestGroovy;</span></span>
<span class="line"><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#0000FF;">import</span><span style="color:#000000;"> javax.script.*;</span></span>
<span class="line"><span style="color:#0000FF;">import</span><span style="color:#000000;"> java.util.Date;</span></span>
<span class="line"><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#008000;">/**</span></span>
<span class="line"><span style="color:#008000;"> * ================================</span></span>
<span class="line"><span style="color:#008000;"> * 测试groovy脚本的执行方式</span></span>
<span class="line"><span style="color:#008000;"> * @Author Him</span></span>
<span class="line"><span style="color:#008000;"> * @Date 2021-04-21</span></span>
<span class="line"><span style="color:#008000;"> * @Time 01:12</span></span>
<span class="line"><span style="color:#008000;"> * ================================</span></span>
<span class="line"><span style="color:#008000;"> */</span></span>
<span class="line"><span style="color:#0000FF;">public</span><span style="color:#0000FF;"> class</span><span style="color:#267F99;"> TestScriptEngine</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#008000;">    // 查找并创建指定脚本引擎</span></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#267F99;"> ScriptEngine</span><span style="color:#001080;"> engine</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> ScriptEngineManager</span><span style="color:#000000;">().</span><span style="color:#795E26;">getEngineByName</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;groovy&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> testByFunction</span><span style="color:#000000;">(){</span></span>
<span class="line"><span style="color:#008000;">        // 初始化Bindings</span></span>
<span class="line"><span style="color:#267F99;">        Bindings</span><span style="color:#001080;"> bindings</span><span style="color:#000000;"> = </span><span style="color:#001080;">engine</span><span style="color:#000000;">.</span><span style="color:#795E26;">createBindings</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#008000;">        // 绑定参数</span></span>
<span class="line"><span style="color:#001080;">        bindings</span><span style="color:#000000;">.</span><span style="color:#795E26;">put</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;date&quot;</span><span style="color:#000000;">, </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> Date</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#008000;">        // 定义groovy脚本中执行方法的名称</span></span>
<span class="line"><span style="color:#0000FF;">        final</span><span style="color:#267F99;"> String</span><span style="color:#001080;"> scriptName</span><span style="color:#000000;"> = </span><span style="color:#A31515;">&quot;execute&quot;</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#008000;">        // 定义groovy脚本内容</span></span>
<span class="line"><span style="color:#0000FF;">        final</span><span style="color:#267F99;"> String</span><span style="color:#001080;"> scriptContent</span><span style="color:#000000;"> = </span><span style="color:#A31515;">&quot;def &quot;</span><span style="color:#000000;"> + scriptName +</span><span style="color:#A31515;">&quot;(){&quot;</span><span style="color:#000000;"> +</span></span>
<span class="line"><span style="color:#A31515;">                                     &quot;    println(</span><span style="color:#EE0000;">\\&quot;</span><span style="color:#A31515;">now dateTime is: \${date.getTime()}</span><span style="color:#EE0000;">\\&quot;</span><span style="color:#A31515;">);&quot;</span><span style="color:#000000;"> +</span></span>
<span class="line"><span style="color:#A31515;">                                     &quot;    return date.getTime() &gt; 0;&quot;</span><span style="color:#000000;"> +</span></span>
<span class="line"><span style="color:#A31515;">                                     &quot;}&quot;</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#AF00DB;">        try</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#008000;">            // 执行脚本</span></span>
<span class="line"><span style="color:#001080;">            engine</span><span style="color:#000000;">.</span><span style="color:#795E26;">eval</span><span style="color:#000000;">(scriptContent, bindings);</span></span>
<span class="line"><span style="color:#008000;">            // 获取执行结果</span></span>
<span class="line"><span style="color:#267F99;">            Invocable</span><span style="color:#001080;"> invocable</span><span style="color:#000000;"> = (Invocable) engine;</span></span>
<span class="line"><span style="color:#267F99;">            Boolean</span><span style="color:#001080;"> flag</span><span style="color:#000000;"> = (Boolean) </span><span style="color:#001080;">invocable</span><span style="color:#000000;">.</span><span style="color:#795E26;">invokeFunction</span><span style="color:#000000;">(scriptName);</span></span>
<span class="line"><span style="color:#001080;">            System</span><span style="color:#000000;">.</span><span style="color:#001080;">out</span><span style="color:#000000;">.</span><span style="color:#795E26;">println</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;---------------------------------------&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#001080;">            System</span><span style="color:#000000;">.</span><span style="color:#001080;">out</span><span style="color:#000000;">.</span><span style="color:#795E26;">println</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;result is: &quot;</span><span style="color:#000000;"> + flag);</span></span>
<span class="line"><span style="color:#000000;">        } </span><span style="color:#AF00DB;">catch</span><span style="color:#000000;"> (</span><span style="color:#267F99;">ScriptException</span><span style="color:#000000;"> | </span><span style="color:#267F99;">NoSuchMethodException</span><span style="color:#001080;"> e</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">            e</span><span style="color:#000000;">.</span><span style="color:#795E26;">printStackTrace</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> testByMethod</span><span style="color:#000000;">(){</span></span>
<span class="line"><span style="color:#AF00DB;">        try</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#008000;">            // 初始化groovy脚本对象</span></span>
<span class="line"><span style="color:#0000FF;">            final</span><span style="color:#267F99;"> TestGroovy</span><span style="color:#001080;"> testGroovy</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> TestGroovy</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#008000;">            // 定义groovy脚本中执行方法的名称</span></span>
<span class="line"><span style="color:#0000FF;">            final</span><span style="color:#267F99;"> String</span><span style="color:#001080;"> scriptName</span><span style="color:#000000;"> = </span><span style="color:#A31515;">&quot;execute&quot;</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#008000;">            // 定义参数</span></span>
<span class="line"><span style="color:#0000FF;">            final</span><span style="color:#267F99;"> Date</span><span style="color:#001080;"> arg_1</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> Date</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#0000FF;">            final</span><span style="color:#267F99;"> String</span><span style="color:#001080;"> arg_2</span><span style="color:#000000;"> = </span><span style="color:#A31515;">&quot;groovy&quot;</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#008000;">            // 执行脚本并获取结果</span></span>
<span class="line"><span style="color:#267F99;">            Invocable</span><span style="color:#001080;"> invocable</span><span style="color:#000000;"> = (Invocable) engine;</span></span>
<span class="line"><span style="color:#267F99;">            Boolean</span><span style="color:#001080;"> flag</span><span style="color:#000000;"> = (Boolean) </span><span style="color:#001080;">invocable</span><span style="color:#000000;">.</span><span style="color:#795E26;">invokeMethod</span><span style="color:#000000;">(testGroovy, scriptName, arg_1, arg_2);</span></span>
<span class="line"><span style="color:#001080;">            System</span><span style="color:#000000;">.</span><span style="color:#001080;">out</span><span style="color:#000000;">.</span><span style="color:#795E26;">println</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;---------------------------------------&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#001080;">            System</span><span style="color:#000000;">.</span><span style="color:#001080;">out</span><span style="color:#000000;">.</span><span style="color:#795E26;">println</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;result is: &quot;</span><span style="color:#000000;"> + flag);</span></span>
<span class="line"><span style="color:#000000;">        } </span><span style="color:#AF00DB;">catch</span><span style="color:#000000;"> (</span><span style="color:#267F99;">ScriptException</span><span style="color:#000000;"> |</span><span style="color:#267F99;">NoSuchMethodException</span><span style="color:#001080;"> e</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">            e</span><span style="color:#000000;">.</span><span style="color:#795E26;">printStackTrace</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#0000FF;"> static</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> main</span><span style="color:#000000;">(</span><span style="color:#267F99;">String</span><span style="color:#000000;">[] </span><span style="color:#001080;">args</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#267F99;">        TestScriptEngine</span><span style="color:#001080;"> engine</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> TestScriptEngine</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#001080;">        engine</span><span style="color:#000000;">.</span><span style="color:#795E26;">testByFunction</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="标准script函数库" tabindex="-1"><a class="header-anchor" href="#标准script函数库"><span>标准script函数库</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">var</span><span style="color:#001080;"> deviceIdG</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#0000FF;">var</span><span style="color:#001080;"> deviceNameG</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#0000FF;">var</span><span style="color:#001080;"> productIdG</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#0000FF;">var</span><span style="color:#001080;"> topicG</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#0000FF;">var</span><span style="color:#001080;"> payloadG</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#0000FF;">var</span><span style="color:#001080;"> resultG</span><span style="color:#000000;"> = {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">/**</span></span>
<span class="line"><span style="color:#008000;"> * 类型转换</span></span>
<span class="line"><span style="color:#008000;"> */</span></span>
<span class="line"><span style="color:#008000;">// 转为boolean</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> toBoolean</span><span style="color:#000000;">(</span><span style="color:#001080;">value</span><span style="color:#000000;">){</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> result</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#AF00DB;">    if</span><span style="color:#000000;">(</span><span style="color:#001080;">value</span><span style="color:#000000;"> === </span><span style="color:#0000FF;">null</span><span style="color:#000000;">){</span></span>
<span class="line"><span style="color:#001080;">        result</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">false</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#AF00DB;">    if</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">typeof</span><span style="color:#001080;"> value</span><span style="color:#000000;"> === </span><span style="color:#A31515;">&#39;number&#39;</span><span style="color:#000000;"> || </span><span style="color:#0000FF;">typeof</span><span style="color:#001080;"> value</span><span style="color:#000000;"> === </span><span style="color:#A31515;">&#39;string&#39;</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">        result</span><span style="color:#000000;"> =  </span><span style="color:#795E26;">Boolean</span><span style="color:#000000;">(</span><span style="color:#001080;">value</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#001080;"> result</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"><span style="color:#008000;">// 转为number</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> toNumber</span><span style="color:#000000;">(</span><span style="color:#001080;">value</span><span style="color:#000000;">){</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> result</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#AF00DB;">    if</span><span style="color:#000000;">(</span><span style="color:#001080;">value</span><span style="color:#000000;"> === </span><span style="color:#0000FF;">null</span><span style="color:#000000;">){</span></span>
<span class="line"><span style="color:#001080;">        result</span><span style="color:#000000;"> = </span><span style="color:#098658;">0</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#AF00DB;">    try</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#AF00DB;">        if</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">typeof</span><span style="color:#001080;"> value</span><span style="color:#000000;"> === </span><span style="color:#A31515;">&#39;number&#39;</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">            result</span><span style="color:#000000;"> = </span><span style="color:#001080;">value</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#AF00DB;">        if</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">typeof</span><span style="color:#001080;"> value</span><span style="color:#000000;"> === </span><span style="color:#A31515;">&#39;string&#39;</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">            result</span><span style="color:#000000;"> = </span><span style="color:#795E26;">parseFloat</span><span style="color:#000000;">(</span><span style="color:#001080;">value</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#AF00DB;">        if</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">typeof</span><span style="color:#001080;"> value</span><span style="color:#000000;"> === </span><span style="color:#A31515;">&#39;boolean&#39;</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">            result</span><span style="color:#000000;"> =  </span><span style="color:#001080;">value</span><span style="color:#000000;"> ? </span><span style="color:#098658;">1</span><span style="color:#000000;"> : </span><span style="color:#098658;">0</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#000000;">    } </span><span style="color:#AF00DB;">catch</span><span style="color:#000000;"> (</span><span style="color:#001080;">error</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">        result</span><span style="color:#000000;"> = </span><span style="color:#098658;">0</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#001080;"> result</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"><span style="color:#008000;">// 转为string</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> toString</span><span style="color:#000000;">(</span><span style="color:#001080;">value</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#AF00DB;">    if</span><span style="color:#000000;"> (</span><span style="color:#001080;">value</span><span style="color:#000000;"> === </span><span style="color:#0000FF;">null</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#AF00DB;">        return</span><span style="color:#A31515;"> &quot;&quot;</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#AF00DB;">    if</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">typeof</span><span style="color:#001080;"> value</span><span style="color:#000000;"> === </span><span style="color:#A31515;">&#39;string&#39;</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#AF00DB;">        return</span><span style="color:#001080;"> value</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    } </span><span style="color:#AF00DB;">else</span><span style="color:#AF00DB;"> if</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">typeof</span><span style="color:#001080;"> value</span><span style="color:#000000;"> === </span><span style="color:#A31515;">&#39;object&#39;</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#AF00DB;">        return</span><span style="color:#0070C1;"> JSON</span><span style="color:#000000;">.</span><span style="color:#795E26;">stringify</span><span style="color:#000000;">(</span><span style="color:#001080;">value</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">    } </span><span style="color:#AF00DB;">else</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#AF00DB;">        return</span><span style="color:#795E26;"> String</span><span style="color:#000000;">(</span><span style="color:#001080;">value</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"><span style="color:#008000;">/**</span></span>
<span class="line"><span style="color:#008000;"> * 日期转换</span></span>
<span class="line"><span style="color:#008000;"> */</span></span>
<span class="line"><span style="color:#008000;">// 根据指定格式将时间戳格式化为日期字符串</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> format_date</span><span style="color:#000000;">(</span><span style="color:#001080;">timestamp</span><span style="color:#000000;">, </span><span style="color:#001080;">pattern</span><span style="color:#000000;">, </span><span style="color:#001080;">timeZone</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#AF00DB;">    if</span><span style="color:#000000;"> (</span><span style="color:#001080;">timeZone</span><span style="color:#000000;"> === </span><span style="color:#0000FF;">undefined</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">        timeZone</span><span style="color:#000000;"> = </span><span style="color:#A31515;">&#39;GMT+8&#39;</span><span style="color:#000000;">;  </span><span style="color:#008000;">// 默认为北京时间（GMT+8）</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> date</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">new</span><span style="color:#795E26;"> Date</span><span style="color:#000000;">(</span><span style="color:#001080;">timestamp</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> utcOffset</span><span style="color:#000000;"> = </span><span style="color:#795E26;">getUTCOffset</span><span style="color:#000000;">(</span><span style="color:#001080;">timeZone</span><span style="color:#000000;">);  </span><span style="color:#008000;">// 获取时区的UTC偏移量</span></span>
<span class="line"></span>
<span class="line"><span style="color:#001080;">    date</span><span style="color:#000000;">.</span><span style="color:#795E26;">setUTCMilliseconds</span><span style="color:#000000;">(</span><span style="color:#001080;">date</span><span style="color:#000000;">.</span><span style="color:#795E26;">getUTCMilliseconds</span><span style="color:#000000;">() + </span><span style="color:#001080;">utcOffset</span><span style="color:#000000;">);  </span><span style="color:#008000;">// 调整时间为指定时区</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> year</span><span style="color:#000000;"> = </span><span style="color:#001080;">date</span><span style="color:#000000;">.</span><span style="color:#795E26;">getUTCFullYear</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> month</span><span style="color:#000000;"> = </span><span style="color:#795E26;">padZero</span><span style="color:#000000;">(</span><span style="color:#001080;">date</span><span style="color:#000000;">.</span><span style="color:#795E26;">getUTCMonth</span><span style="color:#000000;">() + </span><span style="color:#098658;">1</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> day</span><span style="color:#000000;"> = </span><span style="color:#795E26;">padZero</span><span style="color:#000000;">(</span><span style="color:#001080;">date</span><span style="color:#000000;">.</span><span style="color:#795E26;">getUTCDate</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> hours</span><span style="color:#000000;"> = </span><span style="color:#795E26;">padZero</span><span style="color:#000000;">(</span><span style="color:#001080;">date</span><span style="color:#000000;">.</span><span style="color:#795E26;">getUTCHours</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> minutes</span><span style="color:#000000;"> = </span><span style="color:#795E26;">padZero</span><span style="color:#000000;">(</span><span style="color:#001080;">date</span><span style="color:#000000;">.</span><span style="color:#795E26;">getUTCMinutes</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> seconds</span><span style="color:#000000;"> = </span><span style="color:#795E26;">padZero</span><span style="color:#000000;">(</span><span style="color:#001080;">date</span><span style="color:#000000;">.</span><span style="color:#795E26;">getUTCSeconds</span><span style="color:#000000;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> formattedDate</span><span style="color:#000000;"> = </span><span style="color:#001080;">pattern</span></span>
<span class="line"><span style="color:#000000;">        .</span><span style="color:#795E26;">replace</span><span style="color:#000000;">(</span><span style="color:#A31515;">&#39;yyyy&#39;</span><span style="color:#000000;">, </span><span style="color:#001080;">year</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#000000;">        .</span><span style="color:#795E26;">replace</span><span style="color:#000000;">(</span><span style="color:#A31515;">&#39;MM&#39;</span><span style="color:#000000;">, </span><span style="color:#001080;">month</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#000000;">        .</span><span style="color:#795E26;">replace</span><span style="color:#000000;">(</span><span style="color:#A31515;">&#39;dd&#39;</span><span style="color:#000000;">, </span><span style="color:#001080;">day</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#000000;">        .</span><span style="color:#795E26;">replace</span><span style="color:#000000;">(</span><span style="color:#A31515;">&#39;HH&#39;</span><span style="color:#000000;">, </span><span style="color:#001080;">hours</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#000000;">        .</span><span style="color:#795E26;">replace</span><span style="color:#000000;">(</span><span style="color:#A31515;">&#39;mm&#39;</span><span style="color:#000000;">, </span><span style="color:#001080;">minutes</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#000000;">        .</span><span style="color:#795E26;">replace</span><span style="color:#000000;">(</span><span style="color:#A31515;">&#39;ss&#39;</span><span style="color:#000000;">, </span><span style="color:#001080;">seconds</span><span style="color:#000000;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#001080;"> formattedDate</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">// 获取时区的UTC偏移量</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> getUTCOffset</span><span style="color:#000000;">(</span><span style="color:#001080;">timeZone</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> offset</span><span style="color:#000000;"> = </span><span style="color:#098658;">0</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AF00DB;">    if</span><span style="color:#000000;"> (</span><span style="color:#001080;">timeZone</span><span style="color:#000000;"> === </span><span style="color:#A31515;">&#39;GMT&#39;</span><span style="color:#000000;"> || </span><span style="color:#001080;">timeZone</span><span style="color:#000000;"> === </span><span style="color:#A31515;">&#39;UTC&#39;</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#AF00DB;">        return</span><span style="color:#001080;"> offset</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> timeZoneOffset</span><span style="color:#000000;"> = </span><span style="color:#001080;">timeZone</span><span style="color:#000000;">.</span><span style="color:#795E26;">substring</span><span style="color:#000000;">(</span><span style="color:#098658;">3</span><span style="color:#000000;">);  </span><span style="color:#008000;">// 去除前缀，获取时区偏移量</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> sign</span><span style="color:#000000;"> = </span><span style="color:#001080;">timeZoneOffset</span><span style="color:#000000;">.</span><span style="color:#795E26;">charAt</span><span style="color:#000000;">(</span><span style="color:#098658;">0</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> hours</span><span style="color:#000000;"> = </span><span style="color:#795E26;">parseInt</span><span style="color:#000000;">(</span><span style="color:#001080;">timeZoneOffset</span><span style="color:#000000;">.</span><span style="color:#795E26;">substring</span><span style="color:#000000;">(</span><span style="color:#098658;">1</span><span style="color:#000000;">, </span><span style="color:#098658;">3</span><span style="color:#000000;">));</span></span>
<span class="line"><span style="color:#008000;">    // var minutes = parseInt(timeZoneOffset.substring(4));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#001080;">    offset</span><span style="color:#000000;"> = (</span><span style="color:#001080;">hours</span><span style="color:#000000;"> * </span><span style="color:#098658;">60</span><span style="color:#000000;">) * </span><span style="color:#098658;">60</span><span style="color:#000000;"> * </span><span style="color:#098658;">1000</span><span style="color:#000000;">;  </span><span style="color:#008000;">// 转换为毫秒</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AF00DB;">    if</span><span style="color:#000000;"> (</span><span style="color:#001080;">sign</span><span style="color:#000000;"> === </span><span style="color:#A31515;">&#39;-&#39;</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">        offset</span><span style="color:#000000;"> = -</span><span style="color:#001080;">offset</span><span style="color:#000000;">;  </span><span style="color:#008000;">// 处理负时区偏移</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#001080;"> offset</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">// 补零函数</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> padZero</span><span style="color:#000000;">(</span><span style="color:#001080;">value</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#001080;"> value</span><span style="color:#000000;"> &lt; </span><span style="color:#098658;">10</span><span style="color:#000000;"> ? </span><span style="color:#A31515;">&#39;0&#39;</span><span style="color:#000000;"> + </span><span style="color:#001080;">value</span><span style="color:#000000;"> : </span><span style="color:#001080;">value</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">/**</span></span>
<span class="line"><span style="color:#008000;"> * 业务相关</span></span>
<span class="line"><span style="color:#008000;"> */</span></span>
<span class="line"><span style="color:#008000;">// 根据级联key获取指定对象中的value值</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> getOrNull</span><span style="color:#000000;">(</span><span style="color:#001080;">obj</span><span style="color:#000000;">, </span><span style="color:#001080;">keys</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#AF00DB;">    if</span><span style="color:#000000;"> (</span><span style="color:#001080;">keys</span><span style="color:#0000FF;"> instanceof</span><span style="color:#267F99;"> Array</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#AF00DB;">        for</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">var</span><span style="color:#001080;"> i</span><span style="color:#000000;"> = </span><span style="color:#098658;">0</span><span style="color:#000000;">; </span><span style="color:#001080;">i</span><span style="color:#000000;"> &lt; </span><span style="color:#001080;">keys</span><span style="color:#000000;">.</span><span style="color:#001080;">length</span><span style="color:#000000;">; </span><span style="color:#001080;">i</span><span style="color:#000000;">++) {</span></span>
<span class="line"><span style="color:#AF00DB;">            if</span><span style="color:#000000;"> (</span><span style="color:#001080;">obj</span><span style="color:#000000;"> === </span><span style="color:#0000FF;">null</span><span style="color:#000000;"> || </span><span style="color:#0000FF;">typeof</span><span style="color:#001080;"> obj</span><span style="color:#000000;"> !== </span><span style="color:#A31515;">&#39;object&#39;</span><span style="color:#000000;"> || !(</span><span style="color:#001080;">keys</span><span style="color:#000000;">[</span><span style="color:#001080;">i</span><span style="color:#000000;">] </span><span style="color:#0000FF;">in</span><span style="color:#001080;"> obj</span><span style="color:#000000;">)) {</span></span>
<span class="line"><span style="color:#AF00DB;">                return</span><span style="color:#0000FF;"> null</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">            }</span></span>
<span class="line"><span style="color:#001080;">            obj</span><span style="color:#000000;"> = </span><span style="color:#001080;">obj</span><span style="color:#000000;">[</span><span style="color:#001080;">keys</span><span style="color:#000000;">[</span><span style="color:#001080;">i</span><span style="color:#000000;">]];</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#000000;">    } </span><span style="color:#AF00DB;">else</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#001080;">        obj</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">null</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#001080;"> obj</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">// 获取时间戳</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> timestamp</span><span style="color:#000000;">(</span><span style="color:#001080;">format</span><span style="color:#000000;">){</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> result</span><span style="color:#000000;"> = </span><span style="color:#001080;">Date</span><span style="color:#000000;">.</span><span style="color:#795E26;">now</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#AF00DB;">    if</span><span style="color:#000000;"> (</span><span style="color:#001080;">format</span><span style="color:#000000;"> != </span><span style="color:#0000FF;">null</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">        result</span><span style="color:#000000;"> = </span><span style="color:#795E26;">format_date</span><span style="color:#000000;">(</span><span style="color:#001080;">result</span><span style="color:#000000;">, </span><span style="color:#001080;">format</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#001080;"> result</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">//设备信息</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> deviceId</span><span style="color:#000000;">(){</span></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#001080;"> deviceIdG</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">//获取设备名称</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> deviceName</span><span style="color:#000000;">(){</span></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#001080;"> deviceNameG</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">//产品id</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> productId</span><span style="color:#000000;">(){</span></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#001080;"> productIdG</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"><span style="color:#008000;">//获取topic 可顺序获取对应元素</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> topic</span><span style="color:#000000;">(</span><span style="color:#001080;">index</span><span style="color:#000000;">){</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> result</span><span style="color:#000000;"> = </span><span style="color:#001080;">topicG</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#AF00DB;">    if</span><span style="color:#000000;"> ( </span><span style="color:#0000FF;">typeof</span><span style="color:#001080;"> result</span><span style="color:#000000;"> === </span><span style="color:#A31515;">&#39;string&#39;</span><span style="color:#000000;"> &amp;&amp; </span><span style="color:#001080;">index</span><span style="color:#000000;"> !== </span><span style="color:#0000FF;">undefined</span><span style="color:#000000;"> &amp;&amp; </span><span style="color:#001080;">index</span><span style="color:#000000;"> !== </span><span style="color:#0000FF;">null</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#AF00DB;">        if</span><span style="color:#000000;"> (</span><span style="color:#001080;">result</span><span style="color:#000000;">.</span><span style="color:#795E26;">charAt</span><span style="color:#000000;">(</span><span style="color:#098658;">0</span><span style="color:#000000;">) !== </span><span style="color:#A31515;">&#39;/&#39;</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">            result</span><span style="color:#000000;"> = </span><span style="color:#A31515;">&quot;/&quot;</span><span style="color:#000000;"> + </span><span style="color:#001080;">result</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#001080;">        result</span><span style="color:#000000;"> = </span><span style="color:#001080;">result</span><span style="color:#000000;">.</span><span style="color:#795E26;">split</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;/&quot;</span><span style="color:#000000;">)[</span><span style="color:#001080;">index</span><span style="color:#000000;">];</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#001080;"> result</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">//获取标准物模型属性值</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> things_property</span><span style="color:#000000;">(</span><span style="color:#001080;">name</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> data</span><span style="color:#000000;"> = </span><span style="color:#795E26;">payload</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;json&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#795E26;">    print</span><span style="color:#000000;">(</span><span style="color:#001080;">data</span><span style="color:#000000;">.</span><span style="color:#001080;">params</span><span style="color:#000000;">[</span><span style="color:#A31515;">&#39;Temperature&#39;</span><span style="color:#000000;">].</span><span style="color:#001080;">value</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#795E26;"> getOrNull</span><span style="color:#000000;">(</span><span style="color:#001080;">data</span><span style="color:#000000;">.</span><span style="color:#001080;">params</span><span style="color:#000000;">, [</span><span style="color:#001080;">name</span><span style="color:#000000;">,</span><span style="color:#A31515;">&quot;value&quot;</span><span style="color:#000000;">]);</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"><span style="color:#008000;">//获取标准物模型属性Map</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> things_propertyMap</span><span style="color:#000000;">() {</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> result</span><span style="color:#000000;"> = {};</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> data</span><span style="color:#000000;"> = </span><span style="color:#795E26;">payload</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;json&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> params</span><span style="color:#000000;"> = </span><span style="color:#001080;">data</span><span style="color:#000000;">.</span><span style="color:#001080;">params</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#AF00DB;">    for</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">var</span><span style="color:#001080;"> key</span><span style="color:#0000FF;"> in</span><span style="color:#001080;"> params</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">        result</span><span style="color:#000000;">[</span><span style="color:#001080;">key</span><span style="color:#000000;">] = </span><span style="color:#001080;">params</span><span style="color:#000000;">[</span><span style="color:#001080;">key</span><span style="color:#000000;">].</span><span style="color:#001080;">value</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#001080;"> result</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">//获取上报javascript对象</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> payload</span><span style="color:#000000;">(</span><span style="color:#001080;">type</span><span style="color:#000000;">){</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> result</span><span style="color:#000000;"> = {};</span></span>
<span class="line"><span style="color:#AF00DB;">    try</span><span style="color:#000000;">{</span></span>
<span class="line"><span style="color:#AF00DB;">        if</span><span style="color:#000000;">(</span><span style="color:#001080;">type</span><span style="color:#000000;"> === </span><span style="color:#A31515;">&#39;json&#39;</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#008000;">            //转为json</span></span>
<span class="line"><span style="color:#001080;">            result</span><span style="color:#000000;"> = </span><span style="color:#0070C1;">JSON</span><span style="color:#000000;">.</span><span style="color:#795E26;">parse</span><span style="color:#000000;">(</span><span style="color:#001080;">payloadG</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#000000;">    } </span><span style="color:#AF00DB;">catch</span><span style="color:#000000;"> (</span><span style="color:#001080;">error</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#001080;"> result</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">//写入函数</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> writeTFDB</span><span style="color:#000000;">(</span><span style="color:#001080;">destinationId</span><span style="color:#000000;">,</span><span style="color:#001080;">ts</span><span style="color:#000000;">,</span><span style="color:#001080;">data</span><span style="color:#000000;">){</span></span>
<span class="line"><span style="color:#008000;">    //拼凑参数对象</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> result</span><span style="color:#000000;"> = {};</span></span>
<span class="line"><span style="color:#001080;">    result</span><span style="color:#000000;">.</span><span style="color:#001080;">destinationId</span><span style="color:#000000;"> = </span><span style="color:#001080;">destinationId</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#001080;">    result</span><span style="color:#000000;">.</span><span style="color:#001080;">ts</span><span style="color:#000000;"> = </span><span style="color:#001080;">ts</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#001080;">    result</span><span style="color:#000000;">.</span><span style="color:#001080;">data</span><span style="color:#000000;"> = </span><span style="color:#001080;">data</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#008000;">    //设置全局变量</span></span>
<span class="line"><span style="color:#001080;">    resultG</span><span style="color:#000000;">.</span><span style="color:#001080;">tfdb</span><span style="color:#000000;"> = </span><span style="color:#001080;">result</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#001080;"> result</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> writeRds</span><span style="color:#000000;">(</span><span style="color:#001080;">destinationId</span><span style="color:#000000;">,</span><span style="color:#001080;">data</span><span style="color:#000000;">){</span></span>
<span class="line"><span style="color:#008000;">    //拼凑参数对象</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"><span style="color:#008000;">//写入另一topic</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> writeIotTopic</span><span style="color:#000000;">(</span><span style="color:#001080;">destinationId</span><span style="color:#000000;">,</span><span style="color:#001080;">topic</span><span style="color:#000000;">,</span><span style="color:#001080;">data</span><span style="color:#000000;">){</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> result</span><span style="color:#000000;"> = {};</span></span>
<span class="line"><span style="color:#001080;">    result</span><span style="color:#000000;">.</span><span style="color:#001080;">destinationId</span><span style="color:#000000;"> = </span><span style="color:#001080;">destinationId</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#001080;">    result</span><span style="color:#000000;">.</span><span style="color:#001080;">topic</span><span style="color:#000000;"> = </span><span style="color:#001080;">topic</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#001080;">    result</span><span style="color:#000000;">.</span><span style="color:#001080;">data</span><span style="color:#000000;"> = </span><span style="color:#001080;">data</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#008000;">    //设置全局变量</span></span>
<span class="line"><span style="color:#001080;">    resultG</span><span style="color:#000000;">.</span><span style="color:#001080;">iotTopic</span><span style="color:#000000;"> = </span><span style="color:#001080;">result</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#001080;"> result</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> reset</span><span style="color:#000000;">() {</span></span>
<span class="line"><span style="color:#001080;">    deviceIdG</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">undefined</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#001080;">    deviceNameG</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">undefined</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#001080;">    productIdG</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">undefined</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#001080;">    topicG</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">undefined</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#001080;">    payloadG</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">undefined</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#001080;">    resultG</span><span style="color:#000000;"> = {};</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"><span style="color:#008000;">//设置上下文</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> setContext</span><span style="color:#000000;">(</span><span style="color:#001080;">context</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#795E26;">    reset</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#0000FF;">    var</span><span style="color:#001080;"> contextObject</span><span style="color:#000000;"> = </span><span style="color:#0070C1;">JSON</span><span style="color:#000000;">.</span><span style="color:#795E26;">parse</span><span style="color:#000000;">(</span><span style="color:#001080;">context</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#001080;">    deviceIdG</span><span style="color:#000000;"> = </span><span style="color:#001080;">contextObject</span><span style="color:#000000;">[</span><span style="color:#A31515;">&quot;deviceId&quot;</span><span style="color:#000000;">];</span></span>
<span class="line"><span style="color:#001080;">    deviceNameG</span><span style="color:#000000;"> = </span><span style="color:#001080;">contextObject</span><span style="color:#000000;">[</span><span style="color:#A31515;">&quot;deviceName&quot;</span><span style="color:#000000;">];</span></span>
<span class="line"><span style="color:#001080;">    productIdG</span><span style="color:#000000;"> = </span><span style="color:#001080;">contextObject</span><span style="color:#000000;">[</span><span style="color:#A31515;">&quot;productId&quot;</span><span style="color:#000000;">];</span></span>
<span class="line"><span style="color:#001080;">    topicG</span><span style="color:#000000;"> = </span><span style="color:#001080;">contextObject</span><span style="color:#000000;">[</span><span style="color:#A31515;">&quot;topic&quot;</span><span style="color:#000000;">];</span></span>
<span class="line"><span style="color:#001080;">    payloadG</span><span style="color:#000000;"> = </span><span style="color:#001080;">contextObject</span><span style="color:#000000;">[</span><span style="color:#A31515;">&quot;payload&quot;</span><span style="color:#000000;">];</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">//转换函数</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#795E26;"> transform</span><span style="color:#000000;">(</span><span style="color:#001080;">context</span><span style="color:#000000;">){</span></span>
<span class="line"><span style="color:#795E26;">    setContext</span><span style="color:#000000;">(</span><span style="color:#001080;">context</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#001080;">    $</span><span style="color:#000000;">{</span><span style="color:#001080;">script</span><span style="color:#000000;">}</span></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#0070C1;"> JSON</span><span style="color:#000000;">.</span><span style="color:#795E26;">stringify</span><span style="color:#000000;">(</span><span style="color:#001080;">resultG</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function D(B,j){const a=o("ExternalLinkIcon");return c(),r("div",null,[i,s("p",null,[s("a",y,[n("使用参考"),l(a)])]),s("p",null,[s("a",d,[n("jython参考"),l(a)])]),s("p",null,[s("a",v,[n("参考"),l(a)])]),s("ul",null,[u,m,b,s("li",null,[n("java runtime直接调用python命令执行脚本，并获取执行结果"),s("a",F,[n("参考"),l(a)])])]),h,s("p",null,[s("a",g,[n("参考"),l(a)])]),s("p",null,[s("a",A,[n("参考"),l(a)])]),s("ul",null,[s("li",null,[n("php下载"),s("a",E,[n("链接"),l(a)])]),f]),q])}const T=e(t,[["render",D],["__file","script.html.vue"]]),S=JSON.parse('{"path":"/note/web/script.html","title":"script","lang":"zh-CN","frontmatter":{"description":"script java环境下脚本的执行 python 使用参考 jython参考 参考 引入jython包 使用hutool脚本工具 Jython2.7.3仅支持Python2.7 java runtime直接调用python命令执行脚本，并获取执行结果参考 php 参考 参考 php下载链接 php-java-bridge groovy 引入groo...","head":[["meta",{"property":"og:url","content":"https://wherywan.github.io/note/web/script.html"}],["meta",{"property":"og:site_name","content":"HONG_JI"}],["meta",{"property":"og:title","content":"script"}],["meta",{"property":"og:description","content":"script java环境下脚本的执行 python 使用参考 jython参考 参考 引入jython包 使用hutool脚本工具 Jython2.7.3仅支持Python2.7 java runtime直接调用python命令执行脚本，并获取执行结果参考 php 参考 参考 php下载链接 php-java-bridge groovy 引入groo..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-01T14:08:40.000Z"}],["meta",{"property":"article:author","content":"wanhongji"}],["meta",{"property":"article:modified_time","content":"2023-11-01T14:08:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"script\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-01T14:08:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wanhongji\\"}]}"]]},"headers":[{"level":2,"title":"java环境下脚本的执行","slug":"java环境下脚本的执行","link":"#java环境下脚本的执行","children":[{"level":3,"title":"python","slug":"python","link":"#python","children":[]},{"level":3,"title":"php","slug":"php","link":"#php","children":[]},{"level":3,"title":"groovy","slug":"groovy","link":"#groovy","children":[]}]},{"level":2,"title":"标准script函数库","slug":"标准script函数库","link":"#标准script函数库","children":[]}],"git":{"createdTime":1686901030000,"updatedTime":1698847720000,"contributors":[{"name":"wanhongji","email":"wherywan@163.com","commits":2}]},"readingTime":{"minutes":4.74,"words":1421},"filePathRelative":"note/web/script.md","localizedDate":"2023年6月16日","excerpt":"\\n<h2>java环境下脚本的执行</h2>\\n<h3>python</h3>\\n<p><a href=\\"https://blog.csdn.net/master_hunter/article/details/127528487\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">使用参考</a></p>\\n<p><a href=\\"https://jython.readthedocs.io/en/latest/JythonAndJavaIntegration/#jsr-223\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">jython参考</a></p>","autoDesc":true}');export{T as comp,S as data};
