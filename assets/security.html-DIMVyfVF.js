import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as a,e as l}from"./app-hoN0JGLf.js";const e={},p=l(`<h1 id="spring-security" tabindex="-1"><a class="header-anchor" href="#spring-security"><span>spring security</span></a></h1><h2 id="疑问" tabindex="-1"><a class="header-anchor" href="#疑问"><span>疑问</span></a></h2><h3 id="登录成功后-如何重定向到缓存的请求" tabindex="-1"><a class="header-anchor" href="#登录成功后-如何重定向到缓存的请求"><span>登录成功后，如何重定向到缓存的请求</span></a></h3><ul><li>经验证，一定是响应到前端，让浏览器再次发送授权请求，auth再进行处理</li><li>重定向并不是，从后端直接发起，而是后端返回响应数据，前端取到重定向url,发起重定向</li></ul><h2 id="version-feature" tabindex="-1"><a class="header-anchor" href="#version-feature"><span>version feature</span></a></h2><blockquote><p>security 5.7版本</p></blockquote><p>Use a org.springframework.security.web.<code>SecurityFilterChain</code> Bean to configure HttpSecurity</p><p>or a <code>WebSecurityCustomizer</code> Bean to configure WebSecurity</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span> @Bean</span></span>
<span class="line"><span>    SecurityFilterChain webSecurityFilterChain(HttpSecurity http) throws Exception {</span></span>
<span class="line"><span>        return http.build();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span> @Bean</span></span>
<span class="line"><span>  public WebSecurityCustomizer ignoringCustomizer() {</span></span>
<span class="line"><span>  	return (web) -&gt; web.ignoring().antMatchers(&quot;/ignore1&quot;, &quot;/ignore2&quot;);</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="persistence" tabindex="-1"><a class="header-anchor" href="#persistence"><span>persistence</span></a></h2><p>可使用<code>redis</code>,也可使用<code>session</code></p><blockquote><p>securityContextRepository</p></blockquote><p>HttpSessionSecurityContextRepository</p><blockquote><p>RequestCache</p></blockquote><p>HttpSessionRequestCache</p><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>configuration</span></a></h2><h3 id="websecurityconfiguration" tabindex="-1"><a class="header-anchor" href="#websecurityconfiguration"><span>WebSecurityConfiguration</span></a></h3><p>配置<code>WebSecurity</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#000000;">@</span><span style="color:#267F99;">Configuration</span><span style="color:#000000;">(proxyBeanMethods = </span><span style="color:#0000FF;">false</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#0000FF;">public</span><span style="color:#0000FF;"> class</span><span style="color:#267F99;"> WebSecurityConfiguration</span><span style="color:#0000FF;"> implements</span><span style="color:#267F99;"> ImportAware</span><span style="color:#000000;">, </span><span style="color:#267F99;">BeanClassLoaderAware</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">    </span></span>
<span class="line"><span style="color:#000000;">    </span></span>
<span class="line"><span style="color:#000000;">  @</span><span style="color:#267F99;">Bean</span><span style="color:#000000;">(name = </span><span style="color:#001080;">AbstractSecurityWebApplicationInitializer</span><span style="color:#000000;">.</span><span style="color:#001080;">DEFAULT_FILTER_NAME</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#0000FF;">  public</span><span style="color:#267F99;"> Filter</span><span style="color:#795E26;"> springSecurityFilterChain</span><span style="color:#000000;">() </span><span style="color:#0000FF;">throws</span><span style="color:#267F99;"> Exception</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#267F99;">    boolean</span><span style="color:#001080;"> hasConfigurers</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">webSecurityConfigurers</span><span style="color:#000000;"> != </span><span style="color:#0000FF;">null</span><span style="color:#000000;"> &amp;&amp; !</span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">webSecurityConfigurers</span><span style="color:#000000;">.</span><span style="color:#795E26;">isEmpty</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#267F99;">    boolean</span><span style="color:#001080;"> hasFilterChain</span><span style="color:#000000;"> = !</span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">securityFilterChains</span><span style="color:#000000;">.</span><span style="color:#795E26;">isEmpty</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#008000;">    // 适配器和安全过滤器链配置方式不能同时使用</span></span>
<span class="line"><span style="color:#001080;">    Assert</span><span style="color:#000000;">.</span><span style="color:#795E26;">state</span><span style="color:#000000;">(!(hasConfigurers &amp;&amp; hasFilterChain),</span></span>
<span class="line"><span style="color:#A31515;">            &quot;Found WebSecurityConfigurerAdapter as well as SecurityFilterChain. Please select just one.&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#AF00DB;">    if</span><span style="color:#000000;"> (!hasConfigurers &amp;&amp; !hasFilterChain) {</span></span>
<span class="line"><span style="color:#267F99;">      WebSecurityConfigurerAdapter</span><span style="color:#001080;"> adapter</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">objectObjectPostProcessor</span></span>
<span class="line"><span style="color:#000000;">              .</span><span style="color:#795E26;">postProcess</span><span style="color:#000000;">(</span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> WebSecurityConfigurerAdapter</span><span style="color:#000000;">() {</span></span>
<span class="line"><span style="color:#000000;">              });</span></span>
<span class="line"><span style="color:#0000FF;">      this</span><span style="color:#000000;">.</span><span style="color:#001080;">webSecurity</span><span style="color:#000000;">.</span><span style="color:#795E26;">apply</span><span style="color:#000000;">(adapter);</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#AF00DB;">    for</span><span style="color:#000000;"> (</span><span style="color:#267F99;">SecurityFilterChain</span><span style="color:#001080;"> securityFilterChain</span><span style="color:#AF00DB;"> :</span><span style="color:#0000FF;"> this</span><span style="color:#000000;">.</span><span style="color:#001080;">securityFilterChains</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#0000FF;">      this</span><span style="color:#000000;">.</span><span style="color:#001080;">webSecurity</span><span style="color:#000000;">.</span><span style="color:#795E26;">addSecurityFilterChainBuilder</span><span style="color:#000000;">(() </span><span style="color:#0000FF;">-&gt;</span><span style="color:#000000;"> securityFilterChain);</span></span>
<span class="line"><span style="color:#AF00DB;">      for</span><span style="color:#000000;"> (</span><span style="color:#267F99;">Filter</span><span style="color:#001080;"> filter</span><span style="color:#AF00DB;"> :</span><span style="color:#001080;"> securityFilterChain</span><span style="color:#000000;">.</span><span style="color:#795E26;">getFilters</span><span style="color:#000000;">()) {</span></span>
<span class="line"><span style="color:#AF00DB;">        if</span><span style="color:#000000;"> (filter </span><span style="color:#0000FF;">instanceof</span><span style="color:#000000;"> FilterSecurityInterceptor) {</span></span>
<span class="line"><span style="color:#0000FF;">          this</span><span style="color:#000000;">.</span><span style="color:#001080;">webSecurity</span><span style="color:#000000;">.</span><span style="color:#795E26;">securityInterceptor</span><span style="color:#000000;">((FilterSecurityInterceptor) filter);</span></span>
<span class="line"><span style="color:#AF00DB;">          break</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#000000;">      }</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#AF00DB;">    for</span><span style="color:#000000;"> (</span><span style="color:#267F99;">WebSecurityCustomizer</span><span style="color:#001080;"> customizer</span><span style="color:#AF00DB;"> :</span><span style="color:#0000FF;"> this</span><span style="color:#000000;">.</span><span style="color:#001080;">webSecurityCustomizers</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">      customizer</span><span style="color:#000000;">.</span><span style="color:#795E26;">customize</span><span style="color:#000000;">(</span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">webSecurity</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#0000FF;"> this</span><span style="color:#000000;">.</span><span style="color:#001080;">webSecurity</span><span style="color:#000000;">.</span><span style="color:#795E26;">build</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#000000;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">  @</span><span style="color:#267F99;">Autowired</span><span style="color:#000000;">(required = </span><span style="color:#0000FF;">false</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#008000;">  //set注入</span></span>
<span class="line"><span style="color:#0000FF;">  public</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> setFilterChainProxySecurityConfigurer</span><span style="color:#000000;">(</span><span style="color:#267F99;">ObjectPostProcessor</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">Object</span><span style="color:#000000;">&gt; </span><span style="color:#001080;">objectPostProcessor</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#267F99;">                                                    ConfigurableListableBeanFactory</span><span style="color:#001080;"> beanFactory</span><span style="color:#000000;">) </span><span style="color:#0000FF;">throws</span><span style="color:#267F99;"> Exception</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#008000;">    //objectPostProcessor 对对象进行初始化initializeBean</span></span>
<span class="line"><span style="color:#0000FF;">    this</span><span style="color:#000000;">.</span><span style="color:#001080;">webSecurity</span><span style="color:#000000;"> = </span><span style="color:#001080;">objectPostProcessor</span><span style="color:#000000;">.</span><span style="color:#795E26;">postProcess</span><span style="color:#000000;">(</span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> WebSecurity</span><span style="color:#000000;">(objectPostProcessor));</span></span>
<span class="line"><span style="color:#AF00DB;">    if</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">debugEnabled</span><span style="color:#000000;"> != </span><span style="color:#0000FF;">null</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#0000FF;">      this</span><span style="color:#000000;">.</span><span style="color:#001080;">webSecurity</span><span style="color:#000000;">.</span><span style="color:#795E26;">debug</span><span style="color:#000000;">(</span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">debugEnabled</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#008000;">    //获取webSecurityConfigurer列表 即webSecurityConfigurerAdapter</span></span>
<span class="line"><span style="color:#267F99;">    List</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">SecurityConfigurer</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">Filter</span><span style="color:#000000;">, </span><span style="color:#267F99;">WebSecurity</span><span style="color:#000000;">&gt;&gt; </span><span style="color:#001080;">webSecurityConfigurers</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> AutowiredWebSecurityConfigurersIgnoreParents</span><span style="color:#000000;">(</span></span>
<span class="line"><span style="color:#000000;">            beanFactory).</span><span style="color:#795E26;">getWebSecurityConfigurers</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#001080;">    webSecurityConfigurers</span><span style="color:#000000;">.</span><span style="color:#795E26;">sort</span><span style="color:#000000;">(</span><span style="color:#001080;">AnnotationAwareOrderComparator</span><span style="color:#000000;">.</span><span style="color:#001080;">INSTANCE</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#267F99;">    Integer</span><span style="color:#001080;"> previousOrder</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">null</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#267F99;">    Object</span><span style="color:#001080;"> previousConfig</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">null</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#AF00DB;">    for</span><span style="color:#000000;"> (</span><span style="color:#267F99;">SecurityConfigurer</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">Filter</span><span style="color:#000000;">, </span><span style="color:#267F99;">WebSecurity</span><span style="color:#000000;">&gt; </span><span style="color:#001080;">config</span><span style="color:#AF00DB;"> :</span><span style="color:#000000;"> webSecurityConfigurers) {</span></span>
<span class="line"><span style="color:#267F99;">      Integer</span><span style="color:#001080;"> order</span><span style="color:#000000;"> = </span><span style="color:#001080;">AnnotationAwareOrderComparator</span><span style="color:#000000;">.</span><span style="color:#795E26;">lookupOrder</span><span style="color:#000000;">(config);</span></span>
<span class="line"><span style="color:#AF00DB;">      if</span><span style="color:#000000;"> (previousOrder != </span><span style="color:#0000FF;">null</span><span style="color:#000000;"> &amp;&amp; </span><span style="color:#001080;">previousOrder</span><span style="color:#000000;">.</span><span style="color:#795E26;">equals</span><span style="color:#000000;">(order)) {</span></span>
<span class="line"><span style="color:#AF00DB;">        throw</span><span style="color:#AF00DB;"> new</span><span style="color:#795E26;"> IllegalStateException</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;@Order on WebSecurityConfigurers must be unique. Order of &quot;</span><span style="color:#000000;"> + order</span></span>
<span class="line"><span style="color:#000000;">                + </span><span style="color:#A31515;">&quot; was already used on &quot;</span><span style="color:#000000;"> + previousConfig + </span><span style="color:#A31515;">&quot;, so it cannot be used on &quot;</span><span style="color:#000000;"> + config + </span><span style="color:#A31515;">&quot; too.&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">      }</span></span>
<span class="line"><span style="color:#000000;">      previousOrder = order;</span></span>
<span class="line"><span style="color:#000000;">      previousConfig = config;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#AF00DB;">    for</span><span style="color:#000000;"> (</span><span style="color:#267F99;">SecurityConfigurer</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">Filter</span><span style="color:#000000;">, </span><span style="color:#267F99;">WebSecurity</span><span style="color:#000000;">&gt; </span><span style="color:#001080;">webSecurityConfigurer</span><span style="color:#AF00DB;"> :</span><span style="color:#000000;"> webSecurityConfigurers) {</span></span>
<span class="line"><span style="color:#008000;">        //加入到webSecurity中留待build时做初始化</span></span>
<span class="line"><span style="color:#0000FF;">      this</span><span style="color:#000000;">.</span><span style="color:#001080;">webSecurity</span><span style="color:#000000;">.</span><span style="color:#795E26;">apply</span><span style="color:#000000;">(webSecurityConfigurer);</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#0000FF;">    this</span><span style="color:#000000;">.</span><span style="color:#001080;">webSecurityConfigurers</span><span style="color:#000000;"> = webSecurityConfigurers;</span></span>
<span class="line"><span style="color:#000000;">  }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="httpsecurityconfiguration" tabindex="-1"><a class="header-anchor" href="#httpsecurityconfiguration"><span>HttpSecurityConfiguration</span></a></h3><p>配置<code>HttpSecurity</code>,在构造httpSecurity时，会初始化子认证管理器构造器(初始化父认证管理器(包含DaoAuthenticationProvider))</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#000000;">@</span><span style="color:#267F99;">Configuration</span><span style="color:#000000;">(proxyBeanMethods = </span><span style="color:#0000FF;">false</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#0000FF;">class</span><span style="color:#267F99;"> HttpSecurityConfiguration</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">    </span></span>
<span class="line"><span style="color:#000000;">  @</span><span style="color:#267F99;">Bean</span><span style="color:#000000;">(HTTPSECURITY_BEAN_NAME)</span></span>
<span class="line"><span style="color:#000000;">  @</span><span style="color:#267F99;">Scope</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;prototype&quot;</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#267F99;">  HttpSecurity</span><span style="color:#795E26;"> httpSecurity</span><span style="color:#000000;">() </span><span style="color:#0000FF;">throws</span><span style="color:#267F99;"> Exception</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#267F99;">    WebSecurityConfigurerAdapter</span><span style="color:#000000;">.</span><span style="color:#267F99;">LazyPasswordEncoder</span><span style="color:#001080;"> passwordEncoder</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#000000;"> WebSecurityConfigurerAdapter.</span><span style="color:#795E26;">LazyPasswordEncoder</span><span style="color:#000000;">(</span></span>
<span class="line"><span style="color:#0000FF;">            this</span><span style="color:#000000;">.</span><span style="color:#001080;">context</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#008000;">    //httpSecurity的认证管理器构造器</span></span>
<span class="line"><span style="color:#267F99;">    AuthenticationManagerBuilder</span><span style="color:#001080;"> authenticationBuilder</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#000000;"> WebSecurityConfigurerAdapter.</span><span style="color:#795E26;">DefaultPasswordEncoderAuthenticationManagerBuilder</span><span style="color:#000000;">(</span></span>
<span class="line"><span style="color:#0000FF;">            this</span><span style="color:#000000;">.</span><span style="color:#001080;">objectPostProcessor</span><span style="color:#000000;">, passwordEncoder);</span></span>
<span class="line"><span style="color:#008000;">    //authenticationManager()方法，获取初始化父(全局)认证管理器,被多个httpSecurity中的子认证管理构造器共享。</span></span>
<span class="line"><span style="color:#001080;">    authenticationBuilder</span><span style="color:#000000;">.</span><span style="color:#795E26;">parentAuthenticationManager</span><span style="color:#000000;">(</span><span style="color:#795E26;">authenticationManager</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#267F99;">    HttpSecurity</span><span style="color:#001080;"> http</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> HttpSecurity</span><span style="color:#000000;">(</span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">objectPostProcessor</span><span style="color:#000000;">, authenticationBuilder, </span><span style="color:#795E26;">createSharedObjects</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#008000;">    // @formatter:off</span></span>
<span class="line"><span style="color:#000000;">    http</span></span>
<span class="line"><span style="color:#000000;">            .</span><span style="color:#795E26;">csrf</span><span style="color:#000000;">(</span><span style="color:#795E26;">withDefaults</span><span style="color:#000000;">())</span></span>
<span class="line"><span style="color:#000000;">            .</span><span style="color:#795E26;">addFilter</span><span style="color:#000000;">(</span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> WebAsyncManagerIntegrationFilter</span><span style="color:#000000;">())</span></span>
<span class="line"><span style="color:#000000;">            .</span><span style="color:#795E26;">exceptionHandling</span><span style="color:#000000;">(</span><span style="color:#795E26;">withDefaults</span><span style="color:#000000;">())</span></span>
<span class="line"><span style="color:#000000;">            .</span><span style="color:#795E26;">headers</span><span style="color:#000000;">(</span><span style="color:#795E26;">withDefaults</span><span style="color:#000000;">())</span></span>
<span class="line"><span style="color:#000000;">            .</span><span style="color:#795E26;">sessionManagement</span><span style="color:#000000;">(</span><span style="color:#795E26;">withDefaults</span><span style="color:#000000;">())</span></span>
<span class="line"><span style="color:#000000;">            .</span><span style="color:#795E26;">securityContext</span><span style="color:#000000;">(</span><span style="color:#795E26;">withDefaults</span><span style="color:#000000;">())</span></span>
<span class="line"><span style="color:#000000;">            .</span><span style="color:#795E26;">requestCache</span><span style="color:#000000;">(</span><span style="color:#795E26;">withDefaults</span><span style="color:#000000;">())</span></span>
<span class="line"><span style="color:#000000;">            .</span><span style="color:#795E26;">anonymous</span><span style="color:#000000;">(</span><span style="color:#795E26;">withDefaults</span><span style="color:#000000;">())</span></span>
<span class="line"><span style="color:#000000;">            .</span><span style="color:#795E26;">servletApi</span><span style="color:#000000;">(</span><span style="color:#795E26;">withDefaults</span><span style="color:#000000;">())</span></span>
<span class="line"><span style="color:#000000;">            .</span><span style="color:#795E26;">apply</span><span style="color:#000000;">(</span><span style="color:#AF00DB;">new</span><span style="color:#267F99;"> DefaultLoginPageConfigurer</span><span style="color:#000000;">&lt;&gt;());</span></span>
<span class="line"><span style="color:#001080;">    http</span><span style="color:#000000;">.</span><span style="color:#795E26;">logout</span><span style="color:#000000;">(</span><span style="color:#795E26;">withDefaults</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#008000;">    // @formatter:on</span></span>
<span class="line"><span style="color:#795E26;">    applyDefaultConfigurers</span><span style="color:#000000;">(http);</span></span>
<span class="line"><span style="color:#AF00DB;">    return</span><span style="color:#000000;"> http;</span></span>
<span class="line"><span style="color:#000000;">  }</span></span>
<span class="line"><span style="color:#000000;">  </span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="authenticationconfiguration" tabindex="-1"><a class="header-anchor" href="#authenticationconfiguration"><span>AuthenticationConfiguration</span></a></h3><ul><li>配置authentication</li><li>使用GlobalAuthenticationConfigurerAdapter配置器，配置全局AuthenticationManagerBuilder，进而生成全局认证管理器，被多个httpSecurity中的子认证管理构造器共享。</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">public</span><span style="color:#0000FF;"> class</span><span style="color:#267F99;"> AuthenticationConfiguration</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#267F99;"> AuthenticationManager</span><span style="color:#795E26;"> getAuthenticationManager</span><span style="color:#000000;">() </span><span style="color:#0000FF;">throws</span><span style="color:#267F99;"> Exception</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#AF00DB;">        if</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">authenticationManagerInitialized</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#AF00DB;">            return</span><span style="color:#0000FF;"> this</span><span style="color:#000000;">.</span><span style="color:#001080;">authenticationManager</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#267F99;">        AuthenticationManagerBuilder</span><span style="color:#001080;"> authBuilder</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">applicationContext</span><span style="color:#000000;">.</span><span style="color:#795E26;">getBean</span><span style="color:#000000;">(</span><span style="color:#001080;">AuthenticationManagerBuilder</span><span style="color:#000000;">.</span><span style="color:#001080;">class</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#AF00DB;">        if</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">buildingAuthenticationManager</span><span style="color:#000000;">.</span><span style="color:#795E26;">getAndSet</span><span style="color:#000000;">(</span><span style="color:#0000FF;">true</span><span style="color:#000000;">)) {</span></span>
<span class="line"><span style="color:#AF00DB;">            return</span><span style="color:#AF00DB;"> new</span><span style="color:#795E26;"> AuthenticationManagerDelegator</span><span style="color:#000000;">(authBuilder);</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#AF00DB;">        for</span><span style="color:#000000;"> (</span><span style="color:#267F99;">GlobalAuthenticationConfigurerAdapter</span><span style="color:#001080;"> config</span><span style="color:#AF00DB;"> :</span><span style="color:#0000FF;"> this</span><span style="color:#000000;">.</span><span style="color:#001080;">globalAuthConfigurers</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">            authBuilder</span><span style="color:#000000;">.</span><span style="color:#795E26;">apply</span><span style="color:#000000;">(config);</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#0000FF;">        this</span><span style="color:#000000;">.</span><span style="color:#001080;">authenticationManager</span><span style="color:#000000;"> = </span><span style="color:#001080;">authBuilder</span><span style="color:#000000;">.</span><span style="color:#795E26;">build</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#AF00DB;">        if</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">authenticationManager</span><span style="color:#000000;"> == </span><span style="color:#0000FF;">null</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#0000FF;">            this</span><span style="color:#000000;">.</span><span style="color:#001080;">authenticationManager</span><span style="color:#000000;"> = </span><span style="color:#795E26;">getAuthenticationManagerBean</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#0000FF;">        this</span><span style="color:#000000;">.</span><span style="color:#001080;">authenticationManagerInitialized</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">true</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#AF00DB;">        return</span><span style="color:#0000FF;"> this</span><span style="color:#000000;">.</span><span style="color:#001080;">authenticationManager</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="websecurity" tabindex="-1"><a class="header-anchor" href="#websecurity"><span>webSecurity</span></a></h2><p><code>创建FilterChainProxy过滤器</code>，包含安全过滤器链</p><h2 id="httpsecurity" tabindex="-1"><a class="header-anchor" href="#httpsecurity"><span>httpSecurity</span></a></h2><p>它的scope是protoType,每次创建新的httpSecurity，使用sharedObject初始化 performBuild方法构造安全过滤器链</p><ul><li>创建默认authenticationManager(有父认证管理器)、passwordEncoder</li><li>传入对象后置处理器ObjectPostProcessor(对对象处理执行aware、afterProperties方法)</li><li>进行默认安全配置，securityContext和requestCache等</li><li>添加过滤器，在配置时添加配置器，内部调用apply添加配置器（同时设置对象后置处理器）</li></ul><blockquote><p>AbstractConfiguredSecurityBuilder 继承 AbstractSecurityBuilder</p></blockquote><ul><li>httpSecurity webSecurity authenticationManagerBuilder实现上述构造器类，是security三大建造器</li><li>包含sharedObjects(建造器上下文) configurers配置器 configurersAddedInInitializing(初始化时增加的构造器)</li><li>创建httpSecurity时会传入authenticationManagerBuilder</li></ul><blockquote><p>authenticationManagerBuilder</p></blockquote><ul><li>providerManager</li><li>performBuild方法构造认证管理器authenticationManager及内部的provider</li><li>用于过滤器中对主体进行认证</li></ul><p>在4.1时认证管理器使用委托器AuthenticationManagerDelegator防止无限递归</p><h3 id="securityfilterchain" tabindex="-1"><a class="header-anchor" href="#securityfilterchain"><span>SecurityFilterChain</span></a></h3><p><code>创建安全过滤器链</code></p><ul><li>httpSecurity.build方法的doBuild方法 <ul><li>调用init方法初始化，配置器初始化</li><li>调用configure方法进行配置,生成对应过滤器(认证时，请求路径需和过滤器相匹配)</li><li>performBuild方法进行构建</li></ul></li><li>httpSecurity的init方法 <ul><li>获取httpSecurity所有配置器Configurers</li><li>调用配置器的init方法</li></ul></li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">public</span><span style="color:#0000FF;"> abstract</span><span style="color:#0000FF;"> class</span><span style="color:#267F99;"> AbstractConfiguredSecurityBuilder</span></span>
<span class="line"><span style="color:#000000;">{</span></span>
<span class="line"><span style="color:#0000FF;">  protected</span><span style="color:#0000FF;"> final</span><span style="color:#267F99;"> O</span><span style="color:#795E26;"> doBuild</span><span style="color:#000000;">() </span><span style="color:#0000FF;">throws</span><span style="color:#267F99;"> Exception</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#0000FF;">    synchronized</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">configurers</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#0000FF;">      this</span><span style="color:#000000;">.</span><span style="color:#001080;">buildState</span><span style="color:#000000;"> = </span><span style="color:#001080;">BuildState</span><span style="color:#000000;">.</span><span style="color:#001080;">INITIALIZING</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#795E26;">      beforeInit</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#795E26;">      init</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#0000FF;">      this</span><span style="color:#000000;">.</span><span style="color:#001080;">buildState</span><span style="color:#000000;"> = </span><span style="color:#001080;">BuildState</span><span style="color:#000000;">.</span><span style="color:#001080;">CONFIGURING</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#795E26;">      beforeConfigure</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#795E26;">      configure</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#0000FF;">      this</span><span style="color:#000000;">.</span><span style="color:#001080;">buildState</span><span style="color:#000000;"> = </span><span style="color:#001080;">BuildState</span><span style="color:#000000;">.</span><span style="color:#001080;">BUILDING</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#267F99;">      O</span><span style="color:#001080;"> result</span><span style="color:#000000;"> = </span><span style="color:#795E26;">performBuild</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#0000FF;">      this</span><span style="color:#000000;">.</span><span style="color:#001080;">buildState</span><span style="color:#000000;"> = </span><span style="color:#001080;">BuildState</span><span style="color:#000000;">.</span><span style="color:#001080;">BUILT</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#AF00DB;">      return</span><span style="color:#000000;"> result;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">  }</span></span>
<span class="line"><span style="color:#0000FF;">  private</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> init</span><span style="color:#000000;">() </span><span style="color:#0000FF;">throws</span><span style="color:#267F99;"> Exception</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#267F99;">    Collection</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">SecurityConfigurer</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">O</span><span style="color:#000000;">, </span><span style="color:#267F99;">B</span><span style="color:#000000;">&gt;&gt; </span><span style="color:#001080;">configurers</span><span style="color:#000000;"> = </span><span style="color:#795E26;">getConfigurers</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#AF00DB;">    for</span><span style="color:#000000;"> (</span><span style="color:#267F99;">SecurityConfigurer</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">O</span><span style="color:#000000;">, </span><span style="color:#267F99;">B</span><span style="color:#000000;">&gt; </span><span style="color:#001080;">configurer</span><span style="color:#AF00DB;"> :</span><span style="color:#000000;"> configurers) {</span></span>
<span class="line"><span style="color:#001080;">      configurer</span><span style="color:#000000;">.</span><span style="color:#795E26;">init</span><span style="color:#000000;">((B) </span><span style="color:#0000FF;">this</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#AF00DB;">    for</span><span style="color:#000000;"> (</span><span style="color:#267F99;">SecurityConfigurer</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">O</span><span style="color:#000000;">, </span><span style="color:#267F99;">B</span><span style="color:#000000;">&gt; </span><span style="color:#001080;">configurer</span><span style="color:#AF00DB;"> :</span><span style="color:#0000FF;"> this</span><span style="color:#000000;">.</span><span style="color:#001080;">configurersAddedInInitializing</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">      configurer</span><span style="color:#000000;">.</span><span style="color:#795E26;">init</span><span style="color:#000000;">((B) </span><span style="color:#0000FF;">this</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">  @</span><span style="color:#267F99;">SuppressWarnings</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;unchecked&quot;</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#0000FF;">  private</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> configure</span><span style="color:#000000;">() </span><span style="color:#0000FF;">throws</span><span style="color:#267F99;"> Exception</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#267F99;">    Collection</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">SecurityConfigurer</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">O</span><span style="color:#000000;">, </span><span style="color:#267F99;">B</span><span style="color:#000000;">&gt;&gt; </span><span style="color:#001080;">configurers</span><span style="color:#000000;"> = </span><span style="color:#795E26;">getConfigurers</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#AF00DB;">    for</span><span style="color:#000000;"> (</span><span style="color:#267F99;">SecurityConfigurer</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">O</span><span style="color:#000000;">, </span><span style="color:#267F99;">B</span><span style="color:#000000;">&gt; </span><span style="color:#001080;">configurer</span><span style="color:#AF00DB;"> :</span><span style="color:#000000;"> configurers) {</span></span>
<span class="line"><span style="color:#001080;">      configurer</span><span style="color:#000000;">.</span><span style="color:#795E26;">configure</span><span style="color:#000000;">((B) </span><span style="color:#0000FF;">this</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">  }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="configurer" tabindex="-1"><a class="header-anchor" href="#configurer"><span>configurer</span></a></h3><h4 id="expressionurlauthorizationconfigurer继承abstractintercepturlconfigurer" tabindex="-1"><a class="header-anchor" href="#expressionurlauthorizationconfigurer继承abstractintercepturlconfigurer"><span>ExpressionUrlAuthorizationConfigurer继承AbstractInterceptUrlConfigurer</span></a></h4><ul><li>配置FilterSecurityInterceptor的FilterInvocationSecurityMetadataSource</li><li>FilterInvocationSecurityMetadataSource包含需校验的路径以及判别逻辑(authenticated、permitAll等)</li><li>使用authenticated判别时不包括匿名认证对象AnnoymousAuthentcation</li></ul><h4 id="exceptionhandleconfigurer" tabindex="-1"><a class="header-anchor" href="#exceptionhandleconfigurer"><span>ExceptionHandleConfigurer</span></a></h4><p>可以设置认证入口点即认证失败时的处理逻辑，默认入口点LoginUrlAuthenticationEntryPoint （重定向到登录页面）</p><h4 id="authorizationserverconfigurer" tabindex="-1"><a class="header-anchor" href="#authorizationserverconfigurer"><span>authorizationServerConfigurer</span></a></h4><blockquote><p>包含多个授权、获取token相关的配置器(在创建对象时已初始化)</p></blockquote><ul><li>OAuth2ClientAuthenticationConfigurer</li><li>OAuth2AuthorizationEndpointConfigurer</li><li>OAuth2TokenEndpointConfigurer</li></ul><blockquote><p>init方法</p></blockquote><ul><li>providerSettings是容器管理的单例对象，用于创建授权和获取token相关的过滤器</li><li>初始化端点或路径匹配器</li><li>对子配置器OAuth2ClientAuthenticationConfigurer等初始化，生成过滤器</li></ul><h4 id="resourceserverconfigurer" tabindex="-1"><a class="header-anchor" href="#resourceserverconfigurer"><span>resourceServerConfigurer</span></a></h4><p>负责处理客户端的请求，对token进行校验,token解析失败到认证入口点处理</p><p>认证成功，重新设置SecurityContext和其中的authentication,从而跳过后面的校验</p><p>JwtAuthenticationProvider对以Bear开头的token解析</p><h2 id="authenticationmanager" tabindex="-1"><a class="header-anchor" href="#authenticationmanager"><span>AuthenticationManager</span></a></h2><p>包含多个AuthenticationProvider,根据要要认证的主体选取合适的provider认证</p><h3 id="authenticationmanagerbuilder" tabindex="-1"><a class="header-anchor" href="#authenticationmanagerbuilder"><span>AuthenticationManagerBuilder</span></a></h3><ul><li>构造上述AuthenticationManager</li><li>构造生成的providerManager包含父providerManager，在认证时，父一般不用，在子不成功时启用父</li><li>有三个全局初始化配置器配置，在构造全局认证管理器时，初始DaoAuthenticationProvider(在父认证管理器中)</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>AuthenticationManagerBuilder（DefaultPasswordEncoderAuthenticationManagerBuilder容器管理）   9736</span></span>
<span class="line"><span></span></span>
<span class="line"><span>AuthenticationConfiguration（容器管理）     9702        9702</span></span>
<span class="line"><span></span></span>
<span class="line"><span>AuthenticationManager  11262 11262 默认DaoAuthenticationProvider</span></span>
<span class="line"><span></span></span>
<span class="line"><span>buildingAuthenticationManager false true</span></span>
<span class="line"><span></span></span>
<span class="line"><span>authenticationManagerInitialized fasle  true</span></span>
<span class="line"><span></span></span>
<span class="line"><span>WebSecurityConfigurerAdapter.DefaultPasswordEncoderAuthenticationManagerBuilder 11271 11786 13286</span></span>
<span class="line"><span></span></span>
<span class="line"><span>httpsecurity 11285 11803 13500</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filter" tabindex="-1"><a class="header-anchor" href="#filter"><span>Filter</span></a></h2><ul><li>ExceptionTranslationFilter</li><li>FilterSecurityInterceptor</li></ul><h1 id="authentication-authorization" tabindex="-1"><a class="header-anchor" href="#authentication-authorization"><span>authentication-authorization</span></a></h1><h2 id="oauth2-过渡版本" tabindex="-1"><a class="header-anchor" href="#oauth2-过渡版本"><span>oauth2(过渡版本)</span></a></h2><p>这里使用了适配器模式Adapter</p><p>WebSecurityConfigurerAdapter实现WebSecurityConfigurer对webSecurity进行配置，安全过滤器链等,本身是一个配置器，构造安全过滤器链</p><p>AuthorizationServerConfigurerAdapter实现了AuthorizationServerConfigurer接口,配置授权服务器</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">public</span><span style="color:#0000FF;"> interface</span><span style="color:#267F99;"> AuthorizationServerConfigurer</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">	</span></span>
<span class="line"><span style="color:#267F99;">	void</span><span style="color:#795E26;"> configure</span><span style="color:#000000;">(</span><span style="color:#267F99;">AuthorizationServerSecurityConfigurer</span><span style="color:#001080;"> security</span><span style="color:#000000;">) </span><span style="color:#0000FF;">throws</span><span style="color:#267F99;"> Exception</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">	</span></span>
<span class="line"><span style="color:#267F99;">	void</span><span style="color:#795E26;"> configure</span><span style="color:#000000;">(</span><span style="color:#267F99;">ClientDetailsServiceConfigurer</span><span style="color:#001080;"> clients</span><span style="color:#000000;">) </span><span style="color:#0000FF;">throws</span><span style="color:#267F99;"> Exception</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    </span></span>
<span class="line"><span style="color:#267F99;">	void</span><span style="color:#795E26;"> configure</span><span style="color:#000000;">(</span><span style="color:#267F99;">AuthorizationServerEndpointsConfigurer</span><span style="color:#001080;"> endpoints</span><span style="color:#000000;">) </span><span style="color:#0000FF;">throws</span><span style="color:#267F99;"> Exception</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AuthorizationServerEndpointsConfiguration内部配置类,配置授权</p><p>AuthorizationServerSecurityConfiguration配置客户端或授权安全</p><p>ClientDetailsServiceConfiguration 配置客户端clientDetailService,可以配置使用jdbc方式</p><p>tokenEndpoint 获取tokenGranter，用户名密码认证后，获取token</p><h2 id="principal" tabindex="-1"><a class="header-anchor" href="#principal"><span>principal</span></a></h2><ul><li><p>user</p></li><li><p>client</p></li><li><p>registeredClient</p></li><li><p>authorization/consent</p></li><li><p>security</p></li><li><p>oauth2</p></li><li><p>authorization_server</p></li></ul><h2 id="oauth2-client" tabindex="-1"><a class="header-anchor" href="#oauth2-client"><span>oauth2-client</span></a></h2><p>配置客户端信息<br> 负责发起授权获取token及资源，如用户信息</p><blockquote><p>http向授权服务器发起请求</p></blockquote><ul><li>@RegisteredOAuth2AuthorizedClient 用在请求参数中</li><li>dispatchServlet在执行handler-method时会对参数进行解析</li><li>OAuth2AuthorizedClientArgumentResolver对@RegisteredOAuth2AuthorizedClient注解的请求参数解析</li><li>解析后若客户端已授权</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">public</span><span style="color:#267F99;"> Object</span><span style="color:#795E26;"> resolveArgument</span><span style="color:#000000;">(</span><span style="color:#267F99;">MethodParameter</span><span style="color:#000000;"> parameter, @</span><span style="color:#267F99;">Nullable</span><span style="color:#267F99;"> ModelAndViewContainer</span><span style="color:#000000;"> mavContainer,</span></span>
<span class="line"><span style="color:#267F99;">        NativeWebRequest</span><span style="color:#000000;"> webRequest, @</span><span style="color:#267F99;">Nullable</span><span style="color:#267F99;"> WebDataBinderFactory</span><span style="color:#000000;"> binderFactory) {</span></span>
<span class="line"><span style="color:#267F99;">        String</span><span style="color:#001080;"> clientRegistrationId</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#795E26;">resolveClientRegistrationId</span><span style="color:#000000;">(parameter);</span></span>
<span class="line"><span style="color:#AF00DB;">        if</span><span style="color:#000000;"> (</span><span style="color:#001080;">StringUtils</span><span style="color:#000000;">.</span><span style="color:#795E26;">isEmpty</span><span style="color:#000000;">(clientRegistrationId)) {</span></span>
<span class="line"><span style="color:#AF00DB;">        throw</span><span style="color:#AF00DB;"> new</span><span style="color:#795E26;"> IllegalArgumentException</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;Unable to resolve the Client Registration Identifier. &quot;</span></span>
<span class="line"><span style="color:#000000;">        + </span><span style="color:#A31515;">&quot;It must be provided via @RegisteredOAuth2AuthorizedClient(</span><span style="color:#EE0000;">\\&quot;</span><span style="color:#A31515;">client1</span><span style="color:#EE0000;">\\&quot;</span><span style="color:#A31515;">) or &quot;</span></span>
<span class="line"><span style="color:#000000;">        + </span><span style="color:#A31515;">&quot;@RegisteredOAuth2AuthorizedClient(registrationId = </span><span style="color:#EE0000;">\\&quot;</span><span style="color:#A31515;">client1</span><span style="color:#EE0000;">\\&quot;</span><span style="color:#A31515;">).&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#267F99;">        Authentication</span><span style="color:#001080;"> principal</span><span style="color:#000000;"> = </span><span style="color:#001080;">SecurityContextHolder</span><span style="color:#000000;">.</span><span style="color:#795E26;">getContext</span><span style="color:#000000;">().</span><span style="color:#795E26;">getAuthentication</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#AF00DB;">        if</span><span style="color:#000000;"> (principal == </span><span style="color:#0000FF;">null</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#000000;">        principal = ANONYMOUS_AUTHENTICATION;</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#267F99;">        HttpServletRequest</span><span style="color:#001080;"> servletRequest</span><span style="color:#000000;"> = </span><span style="color:#001080;">webRequest</span><span style="color:#000000;">.</span><span style="color:#795E26;">getNativeRequest</span><span style="color:#000000;">(</span><span style="color:#001080;">HttpServletRequest</span><span style="color:#000000;">.</span><span style="color:#001080;">class</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#267F99;">        HttpServletResponse</span><span style="color:#001080;"> servletResponse</span><span style="color:#000000;"> = </span><span style="color:#001080;">webRequest</span><span style="color:#000000;">.</span><span style="color:#795E26;">getNativeResponse</span><span style="color:#000000;">(</span><span style="color:#001080;">HttpServletResponse</span><span style="color:#000000;">.</span><span style="color:#001080;">class</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#008000;">        // @formatter:off</span></span>
<span class="line"><span style="color:#267F99;">        OAuth2AuthorizeRequest</span><span style="color:#001080;"> authorizeRequest</span><span style="color:#000000;"> = </span><span style="color:#267F99;">OAuth2AuthorizeRequest</span></span>
<span class="line"><span style="color:#000000;">        .</span><span style="color:#795E26;">withClientRegistrationId</span><span style="color:#000000;">(clientRegistrationId)</span></span>
<span class="line"><span style="color:#000000;">        .</span><span style="color:#795E26;">principal</span><span style="color:#000000;">(principal)</span></span>
<span class="line"><span style="color:#000000;">        .</span><span style="color:#795E26;">attribute</span><span style="color:#000000;">(</span><span style="color:#001080;">HttpServletRequest</span><span style="color:#000000;">.</span><span style="color:#001080;">class</span><span style="color:#000000;">.</span><span style="color:#795E26;">getName</span><span style="color:#000000;">(), servletRequest)</span></span>
<span class="line"><span style="color:#000000;">        .</span><span style="color:#795E26;">attribute</span><span style="color:#000000;">(</span><span style="color:#001080;">HttpServletResponse</span><span style="color:#000000;">.</span><span style="color:#001080;">class</span><span style="color:#000000;">.</span><span style="color:#795E26;">getName</span><span style="color:#000000;">(), servletResponse)</span></span>
<span class="line"><span style="color:#000000;">        .</span><span style="color:#795E26;">build</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#008000;">        // @formatter:on</span></span>
<span class="line"><span style="color:#AF00DB;">        return</span><span style="color:#0000FF;"> this</span><span style="color:#000000;">.</span><span style="color:#001080;">authorizedClientManager</span><span style="color:#000000;">.</span><span style="color:#795E26;">authorize</span><span style="color:#000000;">(authorizeRequest);</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>DefaultOAuth2AuthorizedClientManager</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">public</span><span style="color:#267F99;"> OAuth2AuthorizedClient</span><span style="color:#795E26;"> authorize</span><span style="color:#000000;">(</span><span style="color:#267F99;">OAuth2AuthorizeRequest</span><span style="color:#000000;"> authorizeRequest) {</span></span>
<span class="line"><span style="color:#001080;">		Assert</span><span style="color:#000000;">.</span><span style="color:#795E26;">notNull</span><span style="color:#000000;">(authorizeRequest, </span><span style="color:#A31515;">&quot;authorizeRequest cannot be null&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#267F99;">		String</span><span style="color:#001080;"> clientRegistrationId</span><span style="color:#000000;"> = </span><span style="color:#001080;">authorizeRequest</span><span style="color:#000000;">.</span><span style="color:#795E26;">getClientRegistrationId</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#267F99;">		OAuth2AuthorizedClient</span><span style="color:#001080;"> authorizedClient</span><span style="color:#000000;"> = </span><span style="color:#001080;">authorizeRequest</span><span style="color:#000000;">.</span><span style="color:#795E26;">getAuthorizedClient</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#267F99;">		Authentication</span><span style="color:#001080;"> principal</span><span style="color:#000000;"> = </span><span style="color:#001080;">authorizeRequest</span><span style="color:#000000;">.</span><span style="color:#795E26;">getPrincipal</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#267F99;">		HttpServletRequest</span><span style="color:#001080;"> servletRequest</span><span style="color:#000000;"> = </span><span style="color:#795E26;">getHttpServletRequestOrDefault</span><span style="color:#000000;">(</span><span style="color:#001080;">authorizeRequest</span><span style="color:#000000;">.</span><span style="color:#795E26;">getAttributes</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#001080;">		Assert</span><span style="color:#000000;">.</span><span style="color:#795E26;">notNull</span><span style="color:#000000;">(servletRequest, </span><span style="color:#A31515;">&quot;servletRequest cannot be null&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#267F99;">		HttpServletResponse</span><span style="color:#001080;"> servletResponse</span><span style="color:#000000;"> = </span><span style="color:#795E26;">getHttpServletResponseOrDefault</span><span style="color:#000000;">(</span><span style="color:#001080;">authorizeRequest</span><span style="color:#000000;">.</span><span style="color:#795E26;">getAttributes</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#001080;">		Assert</span><span style="color:#000000;">.</span><span style="color:#795E26;">notNull</span><span style="color:#000000;">(servletResponse, </span><span style="color:#A31515;">&quot;servletResponse cannot be null&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#267F99;">		OAuth2AuthorizationContext</span><span style="color:#000000;">.</span><span style="color:#267F99;">Builder</span><span style="color:#001080;"> contextBuilder</span><span style="color:#000000;">; </span></span>
<span class="line"><span style="color:#AF00DB;">		if</span><span style="color:#000000;"> (authorizedClient != </span><span style="color:#0000FF;">null</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#000000;">			contextBuilder = </span><span style="color:#001080;">OAuth2AuthorizationContext</span><span style="color:#000000;">.</span><span style="color:#795E26;">withAuthorizedClient</span><span style="color:#000000;">(authorizedClient);</span></span>
<span class="line"><span style="color:#000000;">		}</span></span>
<span class="line"><span style="color:#AF00DB;">		else</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#008000;">            //获取认证成功得到授权客户端信息，包含token等信息</span></span>
<span class="line"><span style="color:#000000;">			authorizedClient = </span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">authorizedClientRepository</span><span style="color:#000000;">.</span><span style="color:#795E26;">loadAuthorizedClient</span><span style="color:#000000;">(clientRegistrationId, principal,</span></span>
<span class="line"><span style="color:#000000;">					servletRequest);</span></span>
<span class="line"><span style="color:#AF00DB;">			if</span><span style="color:#000000;"> (authorizedClient != </span><span style="color:#0000FF;">null</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#000000;">				contextBuilder = </span><span style="color:#001080;">OAuth2AuthorizationContext</span><span style="color:#000000;">.</span><span style="color:#795E26;">withAuthorizedClient</span><span style="color:#000000;">(authorizedClient);</span></span>
<span class="line"><span style="color:#000000;">			}</span></span>
<span class="line"><span style="color:#AF00DB;">			else</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#008000;">                //获取已在服务器端注册的客户端信息，存放在内存</span></span>
<span class="line"><span style="color:#267F99;">				ClientRegistration</span><span style="color:#001080;"> clientRegistration</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">clientRegistrationRepository</span></span>
<span class="line"><span style="color:#000000;">						.</span><span style="color:#795E26;">findByRegistrationId</span><span style="color:#000000;">(clientRegistrationId);</span></span>
<span class="line"><span style="color:#001080;">				Assert</span><span style="color:#000000;">.</span><span style="color:#795E26;">notNull</span><span style="color:#000000;">(clientRegistration,</span></span>
<span class="line"><span style="color:#A31515;">						&quot;Could not find ClientRegistration with id &#39;&quot;</span><span style="color:#000000;"> + clientRegistrationId + </span><span style="color:#A31515;">&quot;&#39;&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">				contextBuilder = </span><span style="color:#001080;">OAuth2AuthorizationContext</span><span style="color:#000000;">.</span><span style="color:#795E26;">withClientRegistration</span><span style="color:#000000;">(clientRegistration);</span></span>
<span class="line"><span style="color:#000000;">			}</span></span>
<span class="line"><span style="color:#000000;">		}</span></span>
<span class="line"><span style="color:#008000;">		// @formatter:off</span></span>
<span class="line"><span style="color:#267F99;">		OAuth2AuthorizationContext</span><span style="color:#001080;"> authorizationContext</span><span style="color:#000000;"> = </span><span style="color:#001080;">contextBuilder</span><span style="color:#000000;">.</span><span style="color:#795E26;">principal</span><span style="color:#000000;">(principal)</span></span>
<span class="line"><span style="color:#000000;">				.</span><span style="color:#795E26;">attributes</span><span style="color:#000000;">((attributes) </span><span style="color:#0000FF;">-&gt;</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#267F99;">					Map</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">String</span><span style="color:#000000;">, </span><span style="color:#267F99;">Object</span><span style="color:#000000;">&gt; </span><span style="color:#001080;">contextAttributes</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">contextAttributesMapper</span><span style="color:#000000;">.</span><span style="color:#795E26;">apply</span><span style="color:#000000;">(authorizeRequest);</span></span>
<span class="line"><span style="color:#AF00DB;">					if</span><span style="color:#000000;"> (!</span><span style="color:#001080;">CollectionUtils</span><span style="color:#000000;">.</span><span style="color:#795E26;">isEmpty</span><span style="color:#000000;">(contextAttributes)) {</span></span>
<span class="line"><span style="color:#001080;">						attributes</span><span style="color:#000000;">.</span><span style="color:#795E26;">putAll</span><span style="color:#000000;">(contextAttributes);</span></span>
<span class="line"><span style="color:#000000;">					}</span></span>
<span class="line"><span style="color:#000000;">				})</span></span>
<span class="line"><span style="color:#000000;">				.</span><span style="color:#795E26;">build</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#008000;">		// @formatter:on</span></span>
<span class="line"><span style="color:#AF00DB;">		try</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">			authorizedClient = </span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">authorizedClientProvider</span><span style="color:#000000;">.</span><span style="color:#795E26;">authorize</span><span style="color:#000000;">(authorizationContext);</span></span>
<span class="line"><span style="color:#000000;">		}</span></span>
<span class="line"><span style="color:#AF00DB;">		catch</span><span style="color:#000000;"> (</span><span style="color:#267F99;">OAuth2AuthorizationException</span><span style="color:#001080;"> ex</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#0000FF;">			this</span><span style="color:#000000;">.</span><span style="color:#001080;">authorizationFailureHandler</span><span style="color:#000000;">.</span><span style="color:#795E26;">onAuthorizationFailure</span><span style="color:#000000;">(ex, principal,</span></span>
<span class="line"><span style="color:#795E26;">					createAttributes</span><span style="color:#000000;">(servletRequest, servletResponse));</span></span>
<span class="line"><span style="color:#AF00DB;">			throw</span><span style="color:#000000;"> ex;</span></span>
<span class="line"><span style="color:#000000;">		}</span></span>
<span class="line"><span style="color:#AF00DB;">		if</span><span style="color:#000000;"> (authorizedClient != </span><span style="color:#0000FF;">null</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#0000FF;">			this</span><span style="color:#000000;">.</span><span style="color:#001080;">authorizationSuccessHandler</span><span style="color:#000000;">.</span><span style="color:#795E26;">onAuthorizationSuccess</span><span style="color:#000000;">(authorizedClient, principal,</span></span>
<span class="line"><span style="color:#795E26;">					createAttributes</span><span style="color:#000000;">(servletRequest, servletResponse));</span></span>
<span class="line"><span style="color:#000000;">		}</span></span>
<span class="line"><span style="color:#AF00DB;">		else</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#008000;">			// In the case of re-authorization, the returned \`authorizedClient\` may be</span></span>
<span class="line"><span style="color:#008000;">			// null if re-authorization is not supported.</span></span>
<span class="line"><span style="color:#008000;">			// For these cases, return the provided</span></span>
<span class="line"><span style="color:#008000;">			// \`authorizationContext.authorizedClient\`.</span></span>
<span class="line"><span style="color:#AF00DB;">			if</span><span style="color:#000000;"> (</span><span style="color:#001080;">authorizationContext</span><span style="color:#000000;">.</span><span style="color:#795E26;">getAuthorizedClient</span><span style="color:#000000;">() != </span><span style="color:#0000FF;">null</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#AF00DB;">				return</span><span style="color:#001080;"> authorizationContext</span><span style="color:#000000;">.</span><span style="color:#795E26;">getAuthorizedClient</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#000000;">			}</span></span>
<span class="line"><span style="color:#000000;">		}</span></span>
<span class="line"><span style="color:#AF00DB;">		return</span><span style="color:#000000;"> authorizedClient;</span></span>
<span class="line"><span style="color:#000000;">	}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>在获取已授权信息时，获取不到会报ClientAuthorizationRequiredException,</li><li>过滤器OAuth2AuthorizationRequestRedirectFilter会进行捕获处理</li><li>向授权服务器发起授权请求，获取登录授权页面</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">protected</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> doFilterInternal</span><span style="color:#000000;">(</span><span style="color:#267F99;">HttpServletRequest</span><span style="color:#000000;"> request, </span><span style="color:#267F99;">HttpServletResponse</span><span style="color:#000000;"> response, </span><span style="color:#267F99;">FilterChain</span><span style="color:#000000;"> filterChain)</span></span>
<span class="line"><span style="color:#000000;">			throws ServletException, IOException {</span></span>
<span class="line"><span style="color:#AF00DB;">		try</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#267F99;">			OAuth2AuthorizationRequest</span><span style="color:#001080;"> authorizationRequest</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">authorizationRequestResolver</span><span style="color:#000000;">.</span><span style="color:#795E26;">resolve</span><span style="color:#000000;">(request);</span></span>
<span class="line"><span style="color:#AF00DB;">			if</span><span style="color:#000000;"> (authorizationRequest != </span><span style="color:#0000FF;">null</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#0000FF;">				this</span><span style="color:#000000;">.</span><span style="color:#795E26;">sendRedirectForAuthorization</span><span style="color:#000000;">(request, response, authorizationRequest);</span></span>
<span class="line"><span style="color:#AF00DB;">				return</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">			}</span></span>
<span class="line"><span style="color:#000000;">		}</span></span>
<span class="line"><span style="color:#AF00DB;">		catch</span><span style="color:#000000;"> (</span><span style="color:#267F99;">Exception</span><span style="color:#001080;"> ex</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#0000FF;">			this</span><span style="color:#000000;">.</span><span style="color:#795E26;">unsuccessfulRedirectForAuthorization</span><span style="color:#000000;">(request, response, ex);</span></span>
<span class="line"><span style="color:#AF00DB;">			return</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">		}</span></span>
<span class="line"><span style="color:#AF00DB;">		try</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#001080;">			filterChain</span><span style="color:#000000;">.</span><span style="color:#795E26;">doFilter</span><span style="color:#000000;">(request, response);</span></span>
<span class="line"><span style="color:#000000;">		}</span></span>
<span class="line"><span style="color:#AF00DB;">		catch</span><span style="color:#000000;"> (</span><span style="color:#267F99;">IOException</span><span style="color:#001080;"> ex</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#AF00DB;">			throw</span><span style="color:#000000;"> ex;</span></span>
<span class="line"><span style="color:#000000;">		}</span></span>
<span class="line"><span style="color:#AF00DB;">		catch</span><span style="color:#000000;"> (</span><span style="color:#267F99;">Exception</span><span style="color:#001080;"> ex</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#008000;">			// Check to see if we need to handle ClientAuthorizationRequiredException</span></span>
<span class="line"><span style="color:#267F99;">			Throwable</span><span style="color:#000000;">[] </span><span style="color:#001080;">causeChain</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">throwableAnalyzer</span><span style="color:#000000;">.</span><span style="color:#795E26;">determineCauseChain</span><span style="color:#000000;">(ex);</span></span>
<span class="line"><span style="color:#267F99;">			ClientAuthorizationRequiredException</span><span style="color:#001080;"> authzEx</span><span style="color:#000000;"> = (ClientAuthorizationRequiredException) </span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">throwableAnalyzer</span></span>
<span class="line"><span style="color:#000000;">					.</span><span style="color:#795E26;">getFirstThrowableOfType</span><span style="color:#000000;">(</span><span style="color:#001080;">ClientAuthorizationRequiredException</span><span style="color:#000000;">.</span><span style="color:#001080;">class</span><span style="color:#000000;">, causeChain);</span></span>
<span class="line"><span style="color:#AF00DB;">			if</span><span style="color:#000000;"> (authzEx != </span><span style="color:#0000FF;">null</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#AF00DB;">				try</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#267F99;">					OAuth2AuthorizationRequest</span><span style="color:#001080;"> authorizationRequest</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">authorizationRequestResolver</span><span style="color:#000000;">.</span><span style="color:#795E26;">resolve</span><span style="color:#000000;">(request,</span></span>
<span class="line"><span style="color:#001080;">							authzEx</span><span style="color:#000000;">.</span><span style="color:#795E26;">getClientRegistrationId</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#AF00DB;">					if</span><span style="color:#000000;"> (authorizationRequest == </span><span style="color:#0000FF;">null</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#AF00DB;">						throw</span><span style="color:#000000;"> authzEx;</span></span>
<span class="line"><span style="color:#000000;">					}</span></span>
<span class="line"><span style="color:#0000FF;">					this</span><span style="color:#000000;">.</span><span style="color:#795E26;">sendRedirectForAuthorization</span><span style="color:#000000;">(request, response, authorizationRequest);</span></span>
<span class="line"><span style="color:#0000FF;">					this</span><span style="color:#000000;">.</span><span style="color:#001080;">requestCache</span><span style="color:#000000;">.</span><span style="color:#795E26;">saveRequest</span><span style="color:#000000;">(request, response);</span></span>
<span class="line"><span style="color:#000000;">				}</span></span>
<span class="line"><span style="color:#AF00DB;">				catch</span><span style="color:#000000;"> (</span><span style="color:#267F99;">Exception</span><span style="color:#001080;"> failed</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#0000FF;">					this</span><span style="color:#000000;">.</span><span style="color:#795E26;">unsuccessfulRedirectForAuthorization</span><span style="color:#000000;">(request, response, failed);</span></span>
<span class="line"><span style="color:#000000;">				}</span></span>
<span class="line"><span style="color:#AF00DB;">				return</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">			}</span></span>
<span class="line"><span style="color:#AF00DB;">			if</span><span style="color:#000000;"> (ex </span><span style="color:#0000FF;">instanceof</span><span style="color:#000000;"> ServletException) {</span></span>
<span class="line"><span style="color:#AF00DB;">				throw</span><span style="color:#000000;"> (ServletException) ex;</span></span>
<span class="line"><span style="color:#000000;">			}</span></span>
<span class="line"><span style="color:#AF00DB;">			if</span><span style="color:#000000;"> (ex </span><span style="color:#0000FF;">instanceof</span><span style="color:#000000;"> RuntimeException) {</span></span>
<span class="line"><span style="color:#AF00DB;">				throw</span><span style="color:#000000;"> (RuntimeException) ex;</span></span>
<span class="line"><span style="color:#000000;">			}</span></span>
<span class="line"><span style="color:#AF00DB;">			throw</span><span style="color:#AF00DB;"> new</span><span style="color:#795E26;"> RuntimeException</span><span style="color:#000000;">(ex);</span></span>
<span class="line"><span style="color:#000000;">		}</span></span>
<span class="line"><span style="color:#000000;">	}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>客户端配置的客户端信息存放在clientRegistrationRepository 在授权服务器根据重定向url,携带code到客户端时，会被过滤器拦截获取token等信息存放在authorizedClientRepository</p><blockquote><p>OAuth2AuthorizationCodeGrantFilter</p></blockquote><ul><li>负责处理授权服务器的授权码重定向请求,即对授权码拦截，向授权服务器获取token请求</li></ul><h2 id="authorization-server" tabindex="-1"><a class="header-anchor" href="#authorization-server"><span>authorization-server</span></a></h2><p>管理已注册客户端信息<br> 授权，签发token</p><p><strong>使用HttpSessionRequestCache请求缓存存取客户端的授权请求，和sessionId关联,重定向到登录页面，登录请求成功后，重新根据session缓存重定向授权请求,返回授权页面</strong><strong>服务器收到同意授权的许可consent后,构造授权码，重定向到客户端</strong></p><blockquote><p>SecurityContextPersistenceFilter</p></blockquote><ul><li>配置安全上下文的安全上下文仓库securityContextRepository,用于SecurityContextPersistenceFilter获取已被认证主体</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">public</span><span style="color:#0000FF;"> class</span><span style="color:#267F99;"> SecurityContextPersistenceFilter</span><span style="color:#000000;">{</span></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> doFilter</span><span style="color:#000000;">(</span><span style="color:#267F99;">HttpServletRequest</span><span style="color:#001080;"> request</span><span style="color:#000000;">, </span><span style="color:#267F99;">HttpServletResponse</span><span style="color:#001080;"> response</span><span style="color:#000000;">, </span><span style="color:#267F99;">FilterChain</span><span style="color:#001080;"> chain</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#0000FF;">            throws</span><span style="color:#267F99;"> IOException</span><span style="color:#000000;">, </span><span style="color:#267F99;">ServletException</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#008000;">        // ensure that filter is only applied once per request</span></span>
<span class="line"><span style="color:#AF00DB;">        if</span><span style="color:#000000;"> (</span><span style="color:#001080;">request</span><span style="color:#000000;">.</span><span style="color:#795E26;">getAttribute</span><span style="color:#000000;">(FILTER_APPLIED) != </span><span style="color:#0000FF;">null</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">            chain</span><span style="color:#000000;">.</span><span style="color:#795E26;">doFilter</span><span style="color:#000000;">(request, response);</span></span>
<span class="line"><span style="color:#AF00DB;">            return</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#001080;">        request</span><span style="color:#000000;">.</span><span style="color:#795E26;">setAttribute</span><span style="color:#000000;">(FILTER_APPLIED, </span><span style="color:#001080;">Boolean</span><span style="color:#000000;">.</span><span style="color:#001080;">TRUE</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#AF00DB;">        if</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">forceEagerSessionCreation</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#267F99;">            HttpSession</span><span style="color:#001080;"> session</span><span style="color:#000000;"> = </span><span style="color:#001080;">request</span><span style="color:#000000;">.</span><span style="color:#795E26;">getSession</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#AF00DB;">            if</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">logger</span><span style="color:#000000;">.</span><span style="color:#795E26;">isDebugEnabled</span><span style="color:#000000;">() &amp;&amp; </span><span style="color:#001080;">session</span><span style="color:#000000;">.</span><span style="color:#795E26;">isNew</span><span style="color:#000000;">()) {</span></span>
<span class="line"><span style="color:#0000FF;">                this</span><span style="color:#000000;">.</span><span style="color:#001080;">logger</span><span style="color:#000000;">.</span><span style="color:#795E26;">debug</span><span style="color:#000000;">(</span><span style="color:#001080;">LogMessage</span><span style="color:#000000;">.</span><span style="color:#795E26;">format</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;Created session %s eagerly&quot;</span><span style="color:#000000;">, </span><span style="color:#001080;">session</span><span style="color:#000000;">.</span><span style="color:#795E26;">getId</span><span style="color:#000000;">()));</span></span>
<span class="line"><span style="color:#000000;">            }</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#267F99;">        HttpRequestResponseHolder</span><span style="color:#001080;"> holder</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> HttpRequestResponseHolder</span><span style="color:#000000;">(request, response);</span></span>
<span class="line"><span style="color:#008000;">        //从仓库获取上下文，包含已认证主体</span></span>
<span class="line"><span style="color:#267F99;">        SecurityContext</span><span style="color:#001080;"> contextBeforeChainExecution</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">repo</span><span style="color:#000000;">.</span><span style="color:#795E26;">loadContext</span><span style="color:#000000;">(holder);</span></span>
<span class="line"><span style="color:#AF00DB;">        try</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#001080;">            SecurityContextHolder</span><span style="color:#000000;">.</span><span style="color:#795E26;">setContext</span><span style="color:#000000;">(contextBeforeChainExecution);</span></span>
<span class="line"><span style="color:#AF00DB;">            if</span><span style="color:#000000;"> (</span><span style="color:#001080;">contextBeforeChainExecution</span><span style="color:#000000;">.</span><span style="color:#795E26;">getAuthentication</span><span style="color:#000000;">() == </span><span style="color:#0000FF;">null</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">                logger</span><span style="color:#000000;">.</span><span style="color:#795E26;">debug</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;Set SecurityContextHolder to empty SecurityContext&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">            }</span></span>
<span class="line"><span style="color:#AF00DB;">            else</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#AF00DB;">                if</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">logger</span><span style="color:#000000;">.</span><span style="color:#795E26;">isDebugEnabled</span><span style="color:#000000;">()) {</span></span>
<span class="line"><span style="color:#0000FF;">                    this</span><span style="color:#000000;">.</span><span style="color:#001080;">logger</span></span>
<span class="line"><span style="color:#000000;">                            .</span><span style="color:#795E26;">debug</span><span style="color:#000000;">(</span><span style="color:#001080;">LogMessage</span><span style="color:#000000;">.</span><span style="color:#795E26;">format</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;Set SecurityContextHolder to %s&quot;</span><span style="color:#000000;">, contextBeforeChainExecution));</span></span>
<span class="line"><span style="color:#000000;">                }</span></span>
<span class="line"><span style="color:#000000;">            }</span></span>
<span class="line"><span style="color:#001080;">            chain</span><span style="color:#000000;">.</span><span style="color:#795E26;">doFilter</span><span style="color:#000000;">(</span><span style="color:#001080;">holder</span><span style="color:#000000;">.</span><span style="color:#795E26;">getRequest</span><span style="color:#000000;">(), </span><span style="color:#001080;">holder</span><span style="color:#000000;">.</span><span style="color:#795E26;">getResponse</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#AF00DB;">        finally</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#267F99;">            SecurityContext</span><span style="color:#001080;"> contextAfterChainExecution</span><span style="color:#000000;"> = </span><span style="color:#001080;">SecurityContextHolder</span><span style="color:#000000;">.</span><span style="color:#795E26;">getContext</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#008000;">            // Crucial removal of SecurityContextHolder contents before anything else.</span></span>
<span class="line"><span style="color:#001080;">            SecurityContextHolder</span><span style="color:#000000;">.</span><span style="color:#795E26;">clearContext</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#0000FF;">            this</span><span style="color:#000000;">.</span><span style="color:#001080;">repo</span><span style="color:#000000;">.</span><span style="color:#795E26;">saveContext</span><span style="color:#000000;">(contextAfterChainExecution, </span><span style="color:#001080;">holder</span><span style="color:#000000;">.</span><span style="color:#795E26;">getRequest</span><span style="color:#000000;">(), </span><span style="color:#001080;">holder</span><span style="color:#000000;">.</span><span style="color:#795E26;">getResponse</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#001080;">            request</span><span style="color:#000000;">.</span><span style="color:#795E26;">removeAttribute</span><span style="color:#000000;">(FILTER_APPLIED);</span></span>
<span class="line"><span style="color:#0000FF;">            this</span><span style="color:#000000;">.</span><span style="color:#001080;">logger</span><span style="color:#000000;">.</span><span style="color:#795E26;">debug</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;Cleared SecurityContextHolder to complete request&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>NimbusJwkSetEndpointFilter</p></blockquote><p>处理/oauth2/jwks请求</p><blockquote><p>OAuth2AuthorizationEndpointFilter http接受客户端的授权请求</p></blockquote><ol><li>通过安全过滤器来处理</li><li>OAuth2AuthorizationEndpointFilter</li><li>providerManager找到合适的provider对authentication处理</li><li>OAuth2AuthorizationCodeRequestAuthenticationProvider查询请求客户端是否存在，若存在跳转到授权页面或登录授权页面 <ol><li>authenticateAuthorizationConsent处理同意授权的请求,将许可信息存表,构造授权码,若授权权限为空，删除授权信息</li><li>authenticateAuthorizationRequest处理授权请求，并将授权信息存表</li></ol></li></ol><blockquote><p>OAuth2ClientAuthenticationFilter 的ClientSecretAuthenticationProvider\\ JwtClientAssertionAuthenticationProvider</p></blockquote><ul><li>匹配获取token的客户端请求 路径 /oauth/token</li><li>负责处理客户端获取token的请求</li></ul><blockquote><p>OAuth2TokenEndpointFilter</p></blockquote><ul><li>OAuth2AuthorizationCodeAuthenticationProvider对授权码认证，获取token,刷新token 保存到授权信息表中</li></ul><blockquote><p>UsernamePasswordAuthenticationFilter</p></blockquote><ul><li>匹配登录请求 路径 /login</li><li>在认证成功后，认证主体放入安全上下文，改变sessionId,防止session攻击</li></ul><blockquote><p>AnonymousAuthenticationFilter</p></blockquote><ul><li>创建匿名用户作为认证主体，创建上下文</li></ul><blockquote><p>LogoutFilter</p></blockquote><ul><li>登出过滤器</li></ul><blockquote><p>DefaultLoginPageGeneratingFilter</p></blockquote><ul><li>默认登录页跳转过滤器</li></ul><blockquote><p>SecurityContextHolderAwareRequestFilter</p></blockquote><ul><li>请求包装过滤器</li></ul><blockquote><p>ExceptionTranslationFilter</p></blockquote><ul><li>在请求缓存HttpSessionRequestCache中保存被拒绝的请求，以便认证成功后再次获取，重定向请求</li><li>处理FilterSecurityInterceptor产生的访问被拒绝异常，发送token到认证入口点LoginUrlAuthenticationEntryPoint，重定向到登录页面</li></ul><blockquote><p>FilterSecurityInterceptor</p></blockquote><ul><li>投票发起，是否授权</li></ul><h2 id="resource-server" tabindex="-1"><a class="header-anchor" href="#resource-server"><span>resource-server</span></a></h2><p>配置客户端信息<br> 管理资源，提供资源给客户端，验证token</p><h1 id="用法" tabindex="-1"><a class="header-anchor" href="#用法"><span>用法</span></a></h1><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h2><blockquote><p>三大安全过滤器链</p></blockquote><ul><li>授权过滤器链</li><li>system</li><li>普通用户</li></ul><blockquote><p>路径配置</p></blockquote><blockquote><p>jwt配置</p></blockquote><ul><li>自定义tokenGenerator,委托器模式包含多个generator,customizer 自定义用户认证userDetails</li></ul><blockquote><p>登录配置</p></blockquote><ul><li><p>loginProcessingUrl()配置用户名密码认证过滤器的pattern,决定请求是否走过滤</p></li><li><p>loginPage()配置登录页面</p></li><li><p>permitAll配置上述url是否允许访问</p></li><li><p>登录成功后的重定向！！！！！！！</p></li><li><p>在安全过滤器链中配置userDetailService</p></li><li><p>配置安全上下文的安全上下文仓库securityContextRepository,用于SecurityContextPersistenceFilter获取已被认证主体</p></li><li><p>请求缓存配置 用于保存上一次被拒绝的请求，在用户名和密码校验成功后，即主体已被认证,再一次请求</p></li><li><p>认证成功和失败的处理逻辑即认证入口点AuthenticationEntrypoint，表单登录成功或失败的处理逻辑</p></li><li><p>认证失败入口点，转发到登录页面</p></li><li><p>登录成功处理</p></li><li><p>登录失败处理</p></li><li><p>认证失败处理</p></li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>SecurityFilterChain systemSecurityFilterChain(HttpSecurity http, UserInfoService userInfoService) throws Exception {</span></span>
<span class="line"><span>            SimpleAuthenticationEntryPoint authenticationEntryPoint = new SimpleAuthenticationEntryPoint();</span></span>
<span class="line"><span>            AuthenticationEntryPointFailureHandler authenticationFailureHandler = new AuthenticationEntryPointFailureHandler(authenticationEntryPoint);</span></span>
<span class="line"><span>            HttpSessionSecurityContextRepository securityContextRepository = new HttpSessionSecurityContextRepository();</span></span>
<span class="line"><span>            securityContextRepository.setSpringSecurityContextKey(ID_SERVER_SYSTEM_SECURITY_CONTEXT_KEY);</span></span>
<span class="line"><span>            HttpSessionRequestCache requestCache = new HttpSessionRequestCache();</span></span>
<span class="line"><span>            requestCache.setSessionAttrName(ID_SERVER_SYSTEM_SAVED_REQUEST_KEY);</span></span>
<span class="line"><span>            http.antMatcher(SYSTEM_ANT_PATH).csrf().disable()</span></span>
<span class="line"><span>                    .headers().frameOptions().sameOrigin()</span></span>
<span class="line"><span>                    .and()</span></span>
<span class="line"><span>                    .requestCache().requestCache(requestCache)</span></span>
<span class="line"><span>                    .and()</span></span>
<span class="line"><span>                    .securityContext().securityContextRepository(securityContextRepository)</span></span>
<span class="line"><span>                    .and()</span></span>
<span class="line"><span>                    .authorizeRequests().anyRequest().authenticated()</span></span>
<span class="line"><span>                    /*  .and()</span></span>
<span class="line"><span>                      .exceptionHandling()</span></span>
<span class="line"><span>                      .authenticationEntryPoint(authenticationEntryPoint)*/</span></span>
<span class="line"><span>                    .and()</span></span>
<span class="line"><span>                    //.userDetailsService(userInfoService::findByUsername)</span></span>
<span class="line"><span>                    //用lambda表达式配置userDetailService</span></span>
<span class="line"><span>                    .userDetailsService(userInfoService::findByUsername)</span></span>
<span class="line"><span>                    //配置表单登录页面及登录url和允许访问权限</span></span>
<span class="line"><span>                    .formLogin().loginPage(&quot;/system/login&quot;).loginProcessingUrl(&quot;/system/login&quot;)</span></span>
<span class="line"><span>                    .successHandler(new RedirectLoginAuthenticationSuccessHandler(&quot;/system&quot;, requestCache))</span></span>
<span class="line"><span>                    .failureHandler(authenticationFailureHandler).permitAll();</span></span>
<span class="line"><span>            return http.build();</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>自定义service实现RegisteredClientRepository获取客户端信息</p></blockquote><blockquote><p>自定义service实现OAuth2AuthorizationService接口获取授权信息</p></blockquote><ul><li>根据state和state_token_type获取授权对象</li></ul><blockquote><p>自定义service实现OAuth2AuthorizationConsentService接口获取授权许可信息</p></blockquote><h2 id="管理员" tabindex="-1"><a class="header-anchor" href="#管理员"><span>管理员</span></a></h2><p>可以自定义userInfoService接口和实现JpaUserInfoService 获取管理平台用户信息</p><h2 id="普通用户" tabindex="-1"><a class="header-anchor" href="#普通用户"><span>普通用户</span></a></h2><p>自定义OAuth2UserDetailsService函数接口及InMemoryOAuth2UserDetailsService实现</p>`,132),o=[p];function t(i,r){return n(),a("div",null,o)}const u=s(e,[["render",t],["__file","security.html.vue"]]),d=JSON.parse('{"path":"/note/security/security.html","title":"spring security","lang":"zh-CN","frontmatter":{"description":"spring security 疑问 登录成功后，如何重定向到缓存的请求 经验证，一定是响应到前端，让浏览器再次发送授权请求，auth再进行处理 重定向并不是，从后端直接发起，而是后端返回响应数据，前端取到重定向url,发起重定向 version feature security 5.7版本 Use a org.springframework.secu...","head":[["meta",{"property":"og:url","content":"https://wherywan.github.io/note/security/security.html"}],["meta",{"property":"og:site_name","content":"HONG_JI"}],["meta",{"property":"og:title","content":"spring security"}],["meta",{"property":"og:description","content":"spring security 疑问 登录成功后，如何重定向到缓存的请求 经验证，一定是响应到前端，让浏览器再次发送授权请求，auth再进行处理 重定向并不是，从后端直接发起，而是后端返回响应数据，前端取到重定向url,发起重定向 version feature security 5.7版本 Use a org.springframework.secu..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-15T14:49:23.000Z"}],["meta",{"property":"article:author","content":"wanhongji"}],["meta",{"property":"article:modified_time","content":"2024-01-15T14:49:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"spring security\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-15T14:49:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wanhongji\\"}]}"]]},"headers":[{"level":2,"title":"疑问","slug":"疑问","link":"#疑问","children":[{"level":3,"title":"登录成功后，如何重定向到缓存的请求","slug":"登录成功后-如何重定向到缓存的请求","link":"#登录成功后-如何重定向到缓存的请求","children":[]}]},{"level":2,"title":"version feature","slug":"version-feature","link":"#version-feature","children":[]},{"level":2,"title":"persistence","slug":"persistence","link":"#persistence","children":[]},{"level":2,"title":"configuration","slug":"configuration","link":"#configuration","children":[{"level":3,"title":"WebSecurityConfiguration","slug":"websecurityconfiguration","link":"#websecurityconfiguration","children":[]},{"level":3,"title":"HttpSecurityConfiguration","slug":"httpsecurityconfiguration","link":"#httpsecurityconfiguration","children":[]},{"level":3,"title":"AuthenticationConfiguration","slug":"authenticationconfiguration","link":"#authenticationconfiguration","children":[]}]},{"level":2,"title":"webSecurity","slug":"websecurity","link":"#websecurity","children":[]},{"level":2,"title":"httpSecurity","slug":"httpsecurity","link":"#httpsecurity","children":[{"level":3,"title":"SecurityFilterChain","slug":"securityfilterchain","link":"#securityfilterchain","children":[]},{"level":3,"title":"configurer","slug":"configurer","link":"#configurer","children":[]}]},{"level":2,"title":"AuthenticationManager","slug":"authenticationmanager","link":"#authenticationmanager","children":[{"level":3,"title":"AuthenticationManagerBuilder","slug":"authenticationmanagerbuilder","link":"#authenticationmanagerbuilder","children":[]}]},{"level":2,"title":"Filter","slug":"filter","link":"#filter","children":[]},{"level":2,"title":"oauth2(过渡版本)","slug":"oauth2-过渡版本","link":"#oauth2-过渡版本","children":[]},{"level":2,"title":"principal","slug":"principal","link":"#principal","children":[]},{"level":2,"title":"oauth2-client","slug":"oauth2-client","link":"#oauth2-client","children":[]},{"level":2,"title":"authorization-server","slug":"authorization-server","link":"#authorization-server","children":[]},{"level":2,"title":"resource-server","slug":"resource-server","link":"#resource-server","children":[]},{"level":2,"title":"配置","slug":"配置","link":"#配置","children":[]},{"level":2,"title":"管理员","slug":"管理员","link":"#管理员","children":[]},{"level":2,"title":"普通用户","slug":"普通用户","link":"#普通用户","children":[]}],"git":{"createdTime":1661502311000,"updatedTime":1705330163000,"contributors":[{"name":"wanhongji","email":"wherywan@163.com","commits":6},{"name":"wanhongji","email":"wan_hongji@163.com","commits":2}]},"readingTime":{"minutes":10.68,"words":3203},"filePathRelative":"note/security/security.md","localizedDate":"2022年8月26日","excerpt":"\\n<h2>疑问</h2>\\n<h3>登录成功后，如何重定向到缓存的请求</h3>\\n<ul>\\n<li>经验证，一定是响应到前端，让浏览器再次发送授权请求，auth再进行处理</li>\\n<li>重定向并不是，从后端直接发起，而是后端返回响应数据，前端取到重定向url,发起重定向</li>\\n</ul>\\n<h2>version feature</h2>\\n<blockquote>\\n<p>security 5.7版本</p>\\n</blockquote>\\n<p>Use a org.springframework.security.web.<code>SecurityFilterChain</code> Bean to configure HttpSecurity</p>","autoDesc":true}');export{u as comp,d as data};
