import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as a,e}from"./app-hoN0JGLf.js";const l={},i=e(`<h1 id="frame" tabindex="-1"><a class="header-anchor" href="#frame"><span>frame</span></a></h1><h2 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql"><span>mysql</span></a></h2><p>设置mysql最大连接数 set Global max_connections = 1000</p><p>批量更新</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">UPDATE</span><span style="color:#000000;"> wms_sn_stock3 a </span><span style="color:#0000FF;">JOIN</span><span style="color:#000000;"> wms_sn_binding_container3 b </span><span style="color:#0000FF;">on</span><span style="color:#000000;"> a.item_sn = b.item_sn </span><span style="color:#0000FF;">set</span><span style="color:#000000;"> a.container_code = b.container_code </span><span style="color:#0000FF;">where</span><span style="color:#000000;"> b.warehouse_id = </span><span style="color:#A31515;">&#39;3&#39;</span><span style="color:#0000FF;"> and</span><span style="color:#000000;"> b.tenant_id = </span><span style="color:#A31515;">&#39;3&#39;</span><span style="color:#000000;">; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">select</span><span style="color:#000000;"> a.item_sn,b.item_sn </span><span style="color:#0000FF;">from</span><span style="color:#000000;"> wms_sn_stock3 a </span><span style="color:#0000FF;">JOIN</span><span style="color:#000000;"> wms_sn_binding_container3 b </span><span style="color:#0000FF;">on</span><span style="color:#000000;"> a.item_sn = b.item_sn  </span><span style="color:#0000FF;">where</span><span style="color:#000000;"> b.warehouse_id = </span><span style="color:#A31515;">&#39;3&#39;</span><span style="color:#0000FF;"> and</span><span style="color:#000000;"> b.tenant_id = </span><span style="color:#A31515;">&#39;3&#39;</span><span style="color:#000000;">; </span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>sharding不支持批量更新，嵌套查询 alibaba Coding代码规范检查 mysql-connector-java(jdbc) druid数据库连接池 使用额外工具处理数据后保存到redis中，供查询</p><h2 id="framework" tabindex="-1"><a class="header-anchor" href="#framework"><span>framework</span></a></h2><ul><li>基础业务泛型(mapper接口，实体类)抽象类BusinessBiz(提供可以对基础信息赋值的更新插入方法)继承基础泛型抽象类BaseBiz(注入了mapper接口，提供了基本查询，更新方法)</li><li>通用mapper接口commonMapper(继承了mapper接口，提供了基础查询和更新方法)</li><li>基础控制层泛型&lt;业务类，实体，路径中数据类型&gt;类BaseController（注入业务层，提供基础新增，删除，查询接口）</li><li>通用响应泛型类objectResponse(包含泛型data属性)继承基础响应对象baseResponse(定义status和message属性)，可以将tableobjectResponse合并到objectResponse中定义内部TableData类，定义rows,total属性</li><li>对集合分组处理CollectionUtil.split(new ArrayList&lt;&gt;(custReffIds), 50);</li></ul><blockquote><p>自定义内部类进行数据结构的组织：</p></blockquote><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>@Data</span></span>
<span class="line"><span>    public class PackBO</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        EntryOrder entryOrder;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        List&lt;EntryOrderItem&gt; entryOrderItemList = new ArrayList&lt;&gt;();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>手动事务</p></blockquote><p>注入platformtransactionManager类型txManager，调用getTransaction(new DefaultTransactionDefinition())获取事务状态TransactionStatus，手动txManager.commit(),txmanager.rollback</p><h2 id="message" tabindex="-1"><a class="header-anchor" href="#message"><span>message</span></a></h2><ul><li>使用自定义消息类MqContent，封装消息数据（消息的用户信息MqUserInfo，消息体setBody)，使用fastjson转string</li><li>自定义MessageSender(注入rocketmqTemplate,进行同步或异步消息发送) rocketMQTemplate.syncSendOrderly，rocketMQTemplate.syncSend，rocketMQTemplate.asyncSend</li><li>@RocketMQMessageListener(topic = &quot;DELETE-DELIVERY-ORDER&quot;, consumerGroup = &quot;DELETE-DELIVERY-ORDER&quot;, consumeMode = ConsumeMode.ORDERLY)</li><li>消费者实现RocketMQListener，重写onMessage方法：</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>MqContent mqContent = JSONObject.parseObject(message.getBody(), MqContent.class);</span></span>
<span class="line"><span>List&lt;String&gt; deliveryIds = JSONObject.parseArray(mqContent.getBody().toString(), String.class);</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="redis" tabindex="-1"><a class="header-anchor" href="#redis"><span>redis</span></a></h2><p>根据id查询商品信息放在redis缓存中，若修改，清除缓存，修改数据</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>redissonClient.getLock(id)， 多个锁实例创建多锁实例，RedissonMultiLock lock = new RedissonMultiLock(locks.toArray(new RLock[]{}));</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>tryLock </span></span>
<span class="line"><span> </span></span>
<span class="line"><span>lock.newCondition()线程通信，signal await signalAll</span></span>
<span class="line"><span></span></span>
<span class="line"><span> return commandExecutor.evalWriteAsync(getName(), LongCodec.INSTANCE, command,</span></span>
<span class="line"><span>                  &quot;if (redis.call(&#39;exists&#39;, KEYS[1]) == 0) then &quot; +</span></span>
<span class="line"><span>                      &quot;redis.call(&#39;hset&#39;, KEYS[1], ARGV[2], 1); &quot; +</span></span>
<span class="line"><span>                      &quot;redis.call(&#39;pexpire&#39;, KEYS[1], ARGV[1]); &quot; +</span></span>
<span class="line"><span>                      &quot;return nil; &quot; +</span></span>
<span class="line"><span>                  &quot;end; &quot; +</span></span>
<span class="line"><span>                  &quot;if (redis.call(&#39;hexists&#39;, KEYS[1], ARGV[2]) == 1) then &quot; +</span></span>
<span class="line"><span>                      &quot;redis.call(&#39;hincrby&#39;, KEYS[1], ARGV[2], 1); &quot; +</span></span>
<span class="line"><span>                      &quot;redis.call(&#39;pexpire&#39;, KEYS[1], ARGV[1]); &quot; +</span></span>
<span class="line"><span>                      &quot;return nil; &quot; +</span></span>
<span class="line"><span>                  &quot;end; &quot; +</span></span>
<span class="line"><span>                  &quot;return redis.call(&#39;pttl&#39;, KEYS[1]);&quot;,</span></span>
<span class="line"><span>                    Collections.&lt;Object&gt;singletonList(getName()), internalLockLeaseTime, getLockName(threadId));</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>内部使用hash结构，hset设置值</li></ul><h2 id="beanutils" tabindex="-1"><a class="header-anchor" href="#beanutils"><span>beanUtils:</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>    //通过class获取Bean</span></span>
<span class="line"><span>    public static &lt;T&gt; T getBean(Class&lt;T&gt; clazz) {</span></span>
<span class="line"><span>        return getApplicationContext().getBean(clazz);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="es" tabindex="-1"><a class="header-anchor" href="#es"><span>es</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();</span></span>
<span class="line"><span> IndexParam indexParam = new IndexParam();</span></span>
<span class="line"><span>            indexParam.setParam(&quot;tenantId&quot;, BaseContextHandler.getTargetTenantId() != null ? BaseContextHandler.getTargetTenantId() : BaseContextHandler.getTenantID());</span></span>
<span class="line"><span>            MetaData metaData = IndexTools.getIndexType(DailyStock.class, indexParam);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            SearchRequest searchRequest = new SearchRequest(metaData.getSearchIndexNames());</span></span>
<span class="line"><span>            SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder();</span></span>
<span class="line"><span>            searchSourceBuilder.query(boolQueryBuilder);</span></span>
<span class="line"><span>            searchSourceBuilder.from(currentPage);</span></span>
<span class="line"><span>            searchSourceBuilder.size(pageSize);</span></span>
<span class="line"><span>            searchSourceBuilder.sort(SortBuilders.fieldSort(&quot;month&quot;).order(SortOrder.DESC));</span></span>
<span class="line"><span>            searchRequest.source(searchSourceBuilder);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            SearchResponse searchResponse = els.search(searchRequest);</span></span>
<span class="line"><span>            SearchHits hits = searchResponse.getHits();</span></span>
<span class="line"><span>            SearchHit[] searchHits = hits.getHits();</span></span>
<span class="line"><span>            for (SearchHit hit : searchHits)</span></span>
<span class="line"><span>            {</span></span>
<span class="line"><span>                DailyStock dailyStock = JsonUtils.string2Obj(hit.getSourceAsString(), DailyStock.class);</span></span>
<span class="line"><span>                resultList.add(dailyStock);</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>            // 查询总数</span></span>
<span class="line"><span>            long count = els.count(boolQueryBuilder, DailyStock.class, indexParam);</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>操作es的api接口ElasticsearchTemplate，核心RestHighLevelClient client;包含saveAndRefresh, deleteById,deleteByCondition,scroll查询，原始查询search可分页</p></li><li><p>elasticsearch-rest-high-level-client-6.7.2.jar</p></li><li><p>使用索引名称，构建查询请求SearchRequest，如SearchRequest searchRequest = new SearchRequest(metaData.getSearchIndexNames());</p></li><li><p>构建查询来源SearchSourceBuilder，支持分页查询：searchSourceBuilder.query(boolQueryBuilder);searchSourceBuilder.from(currentPage);searchSourceBuilder.size(pageSize);</p></li><li><p>查询请求设置设置查询来源searchRequest.source(searchSourceBuilder);</p></li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>SearchResponse searchResponse = els.search(searchRequest);</span></span>
<span class="line"><span>SearchHits hits = searchResponse.getHits();</span></span>
<span class="line"><span>SearchHit[] searchHits = hits.getHits();</span></span>
<span class="line"><span>for (SearchHit hit : searchHits)</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  DailyStock dailyStock = JsonUtils.string2Obj(hit.getSourceAsString(), DailyStock.class);</span></span>
<span class="line"><span>  resultList.add(dailyStock);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>查询总数 long count = els.count(boolQueryBuilder, DailyStock.class, indexParam);</p></blockquote><blockquote><p>查询json:</p></blockquote><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#000000;">{</span></span>
<span class="line"><span style="color:#0451A5;">  &quot;query&quot;</span><span style="color:#000000;">: {</span></span>
<span class="line"><span style="color:#0451A5;">    &quot;bool&quot;</span><span style="color:#000000;">: {</span></span>
<span class="line"><span style="color:#0451A5;">      &quot;must&quot;</span><span style="color:#000000;">: [</span></span>
<span class="line"><span style="color:#000000;">        {</span></span>
<span class="line"><span style="color:#0451A5;">          &quot;term&quot;</span><span style="color:#000000;">: {</span></span>
<span class="line"><span style="color:#0451A5;">            &quot;warehouseId&quot;</span><span style="color:#000000;">: {</span></span>
<span class="line"><span style="color:#0451A5;">              &quot;value&quot;</span><span style="color:#000000;">: </span><span style="color:#A31515;">&quot;69&quot;</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#0451A5;">              &quot;boost&quot;</span><span style="color:#000000;">: </span><span style="color:#098658;">1</span></span>
<span class="line"><span style="color:#000000;">            }</span></span>
<span class="line"><span style="color:#000000;">          }</span></span>
<span class="line"><span style="color:#000000;">        },</span></span>
<span class="line"><span style="color:#000000;">        {</span></span>
<span class="line"><span style="color:#0451A5;">          &quot;term&quot;</span><span style="color:#000000;">: {</span></span>
<span class="line"><span style="color:#0451A5;">            &quot;id&quot;</span><span style="color:#000000;">: {</span></span>
<span class="line"><span style="color:#0451A5;">              &quot;value&quot;</span><span style="color:#000000;">: </span><span style="color:#A31515;">&quot;479968903020281856&quot;</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#0451A5;">              &quot;boost&quot;</span><span style="color:#000000;">: </span><span style="color:#098658;">1</span></span>
<span class="line"><span style="color:#000000;">            }</span></span>
<span class="line"><span style="color:#000000;">          }</span></span>
<span class="line"><span style="color:#000000;">        },</span></span>
<span class="line"><span style="color:#000000;">        {</span></span>
<span class="line"><span style="color:#0451A5;">          &quot;terms&quot;</span><span style="color:#000000;">: {</span></span>
<span class="line"><span style="color:#0451A5;">            &quot;customerId&quot;</span><span style="color:#000000;">: [</span></span>
<span class="line"><span style="color:#A31515;">              &quot;142&quot;</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#A31515;">              &quot;141&quot;</span></span>
<span class="line"><span style="color:#000000;">            ],</span></span>
<span class="line"><span style="color:#0451A5;">            &quot;boost&quot;</span><span style="color:#000000;">: </span><span style="color:#098658;">1</span></span>
<span class="line"><span style="color:#000000;">          }</span></span>
<span class="line"><span style="color:#000000;">        },</span></span>
<span class="line"><span style="color:#000000;">        {</span></span>
<span class="line"><span style="color:#0451A5;">          &quot;range&quot;</span><span style="color:#000000;">: {</span></span>
<span class="line"><span style="color:#0451A5;">            &quot;crtTime&quot;</span><span style="color:#000000;">: {</span></span>
<span class="line"><span style="color:#0451A5;">              &quot;from&quot;</span><span style="color:#000000;">: </span><span style="color:#A31515;">&quot;2022-02-16T00:00:00.000Z&quot;</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#0451A5;">              &quot;to&quot;</span><span style="color:#000000;">: </span><span style="color:#0000FF;">null</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#0451A5;">              &quot;include_lower&quot;</span><span style="color:#000000;">: </span><span style="color:#0000FF;">true</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#0451A5;">              &quot;include_upper&quot;</span><span style="color:#000000;">: </span><span style="color:#0000FF;">true</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#0451A5;">              &quot;boost&quot;</span><span style="color:#000000;">: </span><span style="color:#098658;">1</span></span>
<span class="line"><span style="color:#000000;">            }</span></span>
<span class="line"><span style="color:#000000;">          }</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#000000;">      ],</span></span>
<span class="line"><span style="color:#0451A5;">      &quot;adjust_pure_negative&quot;</span><span style="color:#000000;">: </span><span style="color:#0000FF;">true</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#0451A5;">      &quot;boost&quot;</span><span style="color:#000000;">: </span><span style="color:#098658;">1</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">  }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>es查询命令</p></blockquote><p>curl -X POST &#39;http://192.168.1.39:8081/entryorderitem-58-2021/_search&#39; -H &#39;content-Type:application/json&#39; -d &#39;</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#000000;">{</span></span>
<span class="line"><span style="color:#0451A5;">&quot;query&quot;</span><span style="color:#000000;">: {</span></span>
<span class="line"><span style="color:#0451A5;">    &quot;match&quot;</span><span style="color:#000000;">: {</span></span>
<span class="line"><span style="color:#0451A5;">      &quot;entryCatalogId&quot;</span><span style="color:#000000;">: </span><span style="color:#A31515;">&quot;20211204&quot;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">  }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>删除命令</p></blockquote><p>curl -X POST &#39;http://192.168.1.39:9200/forum/_delete_by_query&#39; -H &#39;content-Type:application/json&#39; -d &#39;</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#000000;">{</span></span>
<span class="line"><span style="color:#0451A5;">&quot;query&quot;</span><span style="color:#000000;">: {</span></span>
<span class="line"><span style="color:#0451A5;">    &quot;match&quot;</span><span style="color:#000000;">: {</span></span>
<span class="line"><span style="color:#0451A5;">      &quot;name&quot;</span><span style="color:#000000;">: </span><span style="color:#A31515;">&quot;测试&quot;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">  }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cache" tabindex="-1"><a class="header-anchor" href="#cache"><span>cache</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;com.sun.mail&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;javax.mail&lt;/artifactId&gt;</span></span>
<span class="line"><span>    &lt;version&gt;1.6.2&lt;/version&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>private static final TimedCache&lt;String, CustomerVO&gt; CUSTOMER_CACHE =</span></span>
<span class="line"><span>CacheUtil.newTimedCache(DateUnit.SECOND.getMillis()  * 120);</span></span>
<span class="line"><span>@PostConstruct</span></span>
<span class="line"><span>public void init()</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>    ITEM_CACHE.schedulePrune(10);</span></span>
<span class="line"><span>    ORDER_CACHE.schedulePrune(10);</span></span>
<span class="line"><span>    ORDER_ITEM_CACHE.schedulePrune(10);</span></span>
<span class="line"><span>    PICK_TASK_CACHE.schedulePrune(10);</span></span>
<span class="line"><span>    PICK_LOCATION_CACHE.schedulePrune(10);</span></span>
<span class="line"><span>    ITEM_STOCK_CACHE.schedulePrune(10);</span></span>
<span class="line"><span>    CUSTOMER_CACHE.schedulePrune(10);</span></span>
<span class="line"><span>    WAREHOUSE_CACHE.schedulePrune(10);</span></span>
<span class="line"><span>    LOCATION_CACHE.schedulePrune(10);</span></span>
<span class="line"><span>    USER_CACHE.schedulePrune(10);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>使用hutool的CacheUtil的定时缓存</span></span>
<span class="line"><span>    并开启定时清除任务</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="日志" tabindex="-1"><a class="header-anchor" href="#日志"><span>日志</span></a></h2><p>MDC Threadlocal</p><h2 id="事务一致" tabindex="-1"><a class="header-anchor" href="#事务一致"><span>事务一致</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>params.put(&quot;replId&quot;, replenishmentTask.getReplId());</span></span>
<span class="line"><span>// 应补数量 &gt; 存储储位可用库存，则存储储位可用库存有多少补多少，否则，补到应补数量</span></span>
<span class="line"><span>params.put(&quot;shouldReplQuantity&quot;, allocateItemStock.getAllocateQty());</span></span>
<span class="line"><span>params.put(&quot;oldVersion&quot;, replenishmentTask.getVersion());</span></span>
<span class="line"><span>int flag = updateQuantity(params);</span></span>
<span class="line"><span>if (0 == flag)</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>log.info(&quot;补货任务并发,事物回滚&quot;);</span></span>
<span class="line"><span>throw new BusinessException(&quot;补货任务并发&quot;);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="try-catch-finally" tabindex="-1"><a class="header-anchor" href="#try-catch-finally"><span>try catch finally</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>try</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>    // 执行上架操作</span></span>
<span class="line"><span>    shelveOperator.service(shelveSubmitDTO);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>finally</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>    redisDistributedLock.delete(orderId);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>库存分配锁定库存</span></span>
<span class="line"><span>已订单明细维度，一条明细对应多条实时库存明细</span></span>
<span class="line"><span>根据分配请求AllocateRequest和AllocateResponse构建拣货请求</span></span>
<span class="line"><span>一个拣货明细对应一条库存明细，可用量减少，锁定量增加</span></span>
<span class="line"><span>生成拣货明细</span></span>
<span class="line"><span>库存交易日志</span></span>
<span class="line"><span>更新发货单明细已分配数量</span></span>
<span class="line"><span>更新发货单状态</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>DefaultRocketMQListenerContainer</p><p>AuthClientRunner</p><p>AuthServerRunner</p>`,47),p=[i];function t(c,o){return n(),a("div",null,p)}const u=s(l,[["render",t],["__file","系统框架知识.html.vue"]]),v=JSON.parse(`{"path":"/note/%E6%9E%B6%E6%9E%84/%E7%B3%BB%E7%BB%9F%E6%A1%86%E6%9E%B6%E7%9F%A5%E8%AF%86.html","title":"frame","lang":"zh-CN","frontmatter":{"description":"frame mysql 设置mysql最大连接数 set Global max_connections = 1000 批量更新 sharding不支持批量更新，嵌套查询 alibaba Coding代码规范检查 mysql-connector-java(jdbc) druid数据库连接池 使用额外工具处理数据后保存到redis中，供查询 framewo...","head":[["meta",{"property":"og:url","content":"https://wherywan.github.io/note/%E6%9E%B6%E6%9E%84/%E7%B3%BB%E7%BB%9F%E6%A1%86%E6%9E%B6%E7%9F%A5%E8%AF%86.html"}],["meta",{"property":"og:site_name","content":"HONG_JI"}],["meta",{"property":"og:title","content":"frame"}],["meta",{"property":"og:description","content":"frame mysql 设置mysql最大连接数 set Global max_connections = 1000 批量更新 sharding不支持批量更新，嵌套查询 alibaba Coding代码规范检查 mysql-connector-java(jdbc) druid数据库连接池 使用额外工具处理数据后保存到redis中，供查询 framewo..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-09-01T15:50:14.000Z"}],["meta",{"property":"article:author","content":"wanhongji"}],["meta",{"property":"article:modified_time","content":"2022-09-01T15:50:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"frame\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-09-01T15:50:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wanhongji\\"}]}"]]},"headers":[{"level":2,"title":"mysql","slug":"mysql","link":"#mysql","children":[]},{"level":2,"title":"framework","slug":"framework","link":"#framework","children":[]},{"level":2,"title":"message","slug":"message","link":"#message","children":[]},{"level":2,"title":"redis","slug":"redis","link":"#redis","children":[]},{"level":2,"title":"beanUtils:","slug":"beanutils","link":"#beanutils","children":[]},{"level":2,"title":"es","slug":"es","link":"#es","children":[{"level":3,"title":"cache","slug":"cache","link":"#cache","children":[]}]},{"level":2,"title":"日志","slug":"日志","link":"#日志","children":[]},{"level":2,"title":"事务一致","slug":"事务一致","link":"#事务一致","children":[]},{"level":2,"title":"try catch finally","slug":"try-catch-finally","link":"#try-catch-finally","children":[]}],"git":{"createdTime":1652024187000,"updatedTime":1662047414000,"contributors":[{"name":"wanhongji","email":"wan_hongji@163.com","commits":1}]},"readingTime":{"minutes":3.78,"words":1135},"filePathRelative":"note/架构/系统框架知识.md","localizedDate":"2022年5月8日","excerpt":"\\n<h2>mysql</h2>\\n<p>设置mysql最大连接数\\nset Global max_connections = 1000</p>\\n<p>批量更新</p>\\n<div class=\\"language-sql line-numbers-mode\\" data-ext=\\"sql\\" data-title=\\"sql\\"><pre class=\\"shiki light-plus\\" style=\\"background-color:#FFFFFF;color:#000000\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#0000FF\\">UPDATE</span><span style=\\"color:#000000\\"> wms_sn_stock3 a </span><span style=\\"color:#0000FF\\">JOIN</span><span style=\\"color:#000000\\"> wms_sn_binding_container3 b </span><span style=\\"color:#0000FF\\">on</span><span style=\\"color:#000000\\"> a.item_sn = b.item_sn </span><span style=\\"color:#0000FF\\">set</span><span style=\\"color:#000000\\"> a.container_code = b.container_code </span><span style=\\"color:#0000FF\\">where</span><span style=\\"color:#000000\\"> b.warehouse_id = </span><span style=\\"color:#A31515\\">'3'</span><span style=\\"color:#0000FF\\"> and</span><span style=\\"color:#000000\\"> b.tenant_id = </span><span style=\\"color:#A31515\\">'3'</span><span style=\\"color:#000000\\">; </span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#0000FF\\">select</span><span style=\\"color:#000000\\"> a.item_sn,b.item_sn </span><span style=\\"color:#0000FF\\">from</span><span style=\\"color:#000000\\"> wms_sn_stock3 a </span><span style=\\"color:#0000FF\\">JOIN</span><span style=\\"color:#000000\\"> wms_sn_binding_container3 b </span><span style=\\"color:#0000FF\\">on</span><span style=\\"color:#000000\\"> a.item_sn = b.item_sn  </span><span style=\\"color:#0000FF\\">where</span><span style=\\"color:#000000\\"> b.warehouse_id = </span><span style=\\"color:#A31515\\">'3'</span><span style=\\"color:#0000FF\\"> and</span><span style=\\"color:#000000\\"> b.tenant_id = </span><span style=\\"color:#A31515\\">'3'</span><span style=\\"color:#000000\\">; </span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{u as comp,v as data};
