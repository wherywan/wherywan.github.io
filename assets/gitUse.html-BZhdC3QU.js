import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as p,c as t,a as s,b as n,d as c,e as a}from"./app-hoN0JGLf.js";const o={},r=a(`<h1 id="git" tabindex="-1"><a class="header-anchor" href="#git"><span>git</span></a></h1><h2 id="初始化仓库" tabindex="-1"><a class="header-anchor" href="#初始化仓库"><span>初始化仓库</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>mkdir 文件夹</span></span>
<span class="line"><span>git init 把目录变为仓库</span></span>
<span class="line"><span>git add 文件名 文件放入暂存区</span></span>
<span class="line"><span>git commit -m &quot;提交描述&quot; </span></span>
<span class="line"><span>拉取远程仓库：</span></span>
<span class="line"><span> git remote add origin git@github.com:michaelliao/learngit.git</span></span>
<span class="line"><span> 推送到远程仓库并关联，加-u推送并关联仓库</span></span>
<span class="line"><span> git push -u origin master/main</span></span>
<span class="line"><span> 克隆</span></span>
<span class="line"><span> git clone git@github.com:michaelliao/gitskills.git</span></span>
<span class="line"><span> 拉取提交记录</span></span>
<span class="line"><span> git pull  origin main</span></span>
<span class="line"><span></span></span>
<span class="line"><span>git branch -a 全部</span></span>
<span class="line"><span>git branch 本地</span></span>
<span class="line"><span>git branch -r 远程</span></span>
<span class="line"><span>-d/D 删除分支/强制删除</span></span>
<span class="line"><span>-m/M 移动重命名/强制</span></span>
<span class="line"><span>git remote set-url origin url 更改地址</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ssh" tabindex="-1"><a class="header-anchor" href="#ssh"><span>ssh</span></a></h2><ul><li>客户端生成ssh key</li><li>github配置ssh公钥key</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#795E26;">ssh-keygen</span><span style="color:#0000FF;"> -t</span><span style="color:#A31515;"> rsa</span><span style="color:#0000FF;"> -C</span><span style="color:#A31515;"> &quot;youremail@example.com&quot;</span></span>
<span class="line"><span style="color:#008000;"># -t 使用的算法</span></span>
<span class="line"><span style="color:#008000;"># -C 邮箱名（并不一定是github账户邮箱）commit记录，标识</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="git配置" tabindex="-1"><a class="header-anchor" href="#git配置"><span>git配置</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> config</span><span style="color:#0000FF;"> -l</span></span>
<span class="line"><span style="color:#008000;"># 邮箱名和用户名可任意配置，和github账户邮箱并无关联</span></span>
<span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> config</span><span style="color:#0000FF;"> --global</span><span style="color:#A31515;"> user.name</span><span style="color:#A31515;"> &quot;Your Name&quot;</span></span>
<span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> config</span><span style="color:#0000FF;"> --global</span><span style="color:#A31515;"> user.email</span><span style="color:#A31515;"> &quot;email@example.com&quot;</span></span>
<span class="line"><span style="color:#008000;"># git获取配置信息</span></span>
<span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> config</span><span style="color:#A31515;"> user.name</span></span>
<span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> config</span><span style="color:#A31515;"> user.email</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="git的使用" tabindex="-1"><a class="header-anchor" href="#git的使用"><span>git的使用</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>idea自动执行git add 命令将文件提交到暂存区</span></span>
<span class="line"><span>git remote -v 查看远程分支信息</span></span>
<span class="line"><span>git status 查看当前仓库状态</span></span>
<span class="line"><span>git log --pretty=oneline 查看提交记录</span></span>
<span class="line"><span>git reset --hard HEAD^ 回到过去</span></span>
<span class="line"><span>git reflog 查看命令历史</span></span>
<span class="line"><span>git reset --hard commitid 回到未来</span></span>
<span class="line"><span>git diff HEAD --文件名</span></span>
<span class="line"><span>git checkout -- readme.txt 丢及工作区的修改</span></span>
<span class="line"><span>git reset HEAD &lt;file&gt; 回到最新版本</span></span>
<span class="line"><span>git rm 文件名 删除文件</span></span>
<span class="line"><span>git commit -m &quot;remove test.txt&quot; </span></span>
<span class="line"><span>git推送时需输入token作为密码</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="git分支" tabindex="-1"><a class="header-anchor" href="#git分支"><span>git分支</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> checkout</span><span style="color:#0000FF;"> -b</span><span style="color:#A31515;"> dev</span><span style="color:#A31515;"> 创建并切换分支</span><span style="color:#A31515;"> 等同如下两条命令</span></span>
<span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> branch</span><span style="color:#A31515;"> dev</span><span style="color:#A31515;"> 创建</span></span>
<span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> checkout</span><span style="color:#A31515;"> dev</span><span style="color:#A31515;"> 切换</span></span>
<span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> branch查看当前分支</span></span>
<span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> merge</span><span style="color:#A31515;"> dev</span><span style="color:#A31515;"> 开发分支合并到当前分支</span></span>
<span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> branch</span><span style="color:#0000FF;"> -d</span><span style="color:#A31515;"> dev</span><span style="color:#A31515;"> 删除开发分支</span></span>
<span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> switch</span><span style="color:#0000FF;"> -c</span><span style="color:#A31515;"> dev</span><span style="color:#A31515;"> 创建并切换分支</span><span style="color:#A31515;"> 等同如下两条命令</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="git-rev-parse" tabindex="-1"><a class="header-anchor" href="#git-rev-parse"><span>git rev-parse</span></a></h2><p>操作git目录相关</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> rev-parse</span><span style="color:#0000FF;"> --git-dir</span><span style="color:#A31515;"> //显示版本库.git命令所在的位置</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> rev-parse</span><span style="color:#0000FF;"> --show-toplevel</span><span style="color:#A31515;"> //显示工作区根目录</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> rev-parse</span><span style="color:#A31515;"> HEAD</span><span style="color:#A31515;"> //显示HEAD提交的SHA1值</span></span>
<span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> rev-parse</span><span style="color:#0000FF;"> ---short</span><span style="color:#A31515;"> HEAD</span><span style="color:#A31515;"> //显示HEAD提交的简短SHA1值</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="git-checkout" tabindex="-1"><a class="header-anchor" href="#git-checkout"><span>git checkout</span></a></h2>`,16),d={href:"https://blog.csdn.net/weixin_44441131/article/details/119992894",target:"_blank",rel:"noopener noreferrer"},g=a(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#008000;"># 表示核查工作区相对于版本库修改过的文件</span></span>
<span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> checkout</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;"># 表示以当前分支的commitID提交节点创建新的分支并切换到新分支。此时工作区的内容和切换分之前commitID提交节点的内容一样</span></span>
<span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> checkout</span><span style="color:#0000FF;"> -b</span><span style="color:#A31515;"> 分支名</span><span style="color:#A31515;"> commitID</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;"># 以指定的提交节点创建了一个临时性分支，此临时性分支可用于做实验性修改</span></span>
<span class="line"><span style="color:#008000;"># 如果想把这临时性分支上的改动反映到原分支上，可以通过git checkout -b 新分支名 命令 </span></span>
<span class="line"><span style="color:#008000;"># 以临时性分支的当前状态创建一个永久性分支，再把这个分支合并到原先的分支，然后再删除这个分支即可。</span></span>
<span class="line"><span style="color:#795E26;">git</span><span style="color:#A31515;"> checkout</span><span style="color:#A31515;"> commitID</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="git工作区和暂存区" tabindex="-1"><a class="header-anchor" href="#git工作区和暂存区"><span>git工作区和暂存区</span></a></h2><p>你在电脑里能看到的目录，比如我的<code>learngit</code>文件夹就是一个工作区</p><p>工作区有一个隐藏目录<code>.git</code>，这个不算工作区，而是Git的版本库。</p><p>Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支<code>master</code>，以及指向<code>master</code>的一个指针叫<code>HEAD</code>。</p><p>每次修改，如果不用<code>git add</code>到暂存区，那就不会加入到<code>commit</code>中</p><p>命令<code>git checkout -- readme.txt</code>意思就是，把<code>readme.txt</code>文件在工作区的修改全部撤销，这里有两种情况：</p><p>一种是<code>readme.txt</code>自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；</p><p>一种是<code>readme.txt</code>已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。</p><p>总之，就是让这个文件回到最近一次<code>git commit</code>或<code>git add</code>时的状态。</p><p><code>git checkout -- file</code>命令中的<code>--</code>很重要，没有<code>--</code>，就变成了“切换到另一个分支”的命令，我们在后面的分支管理中会再次遇到<code>git checkout</code>命令</p><p>Git同样告诉我们，用命令<code>git reset HEAD &lt;file&gt;</code>可以把暂存区的修改撤销掉（unstage），重新放回工作区：</p><p>把本地库的内容推送到远程，用<code>git push</code>命令，实际上是把当前分支<code>master</code>推送到远程。</p><p>由于远程库是空的，我们第一次推送<code>master</code>分支时，加上了<code>-u</code>参数，Git不但会把本地的<code>master</code>分支内容推送的远程新的<code>master</code>分支，还会把本地的<code>master</code>分支和远程的<code>master</code>分支关联起来，在以后的推送或者拉取时就可以简化命令。</p>`,14);function v(m,u){const e=l("ExternalLinkIcon");return p(),t("div",null,[r,s("p",null,[n("检出 "),s("a",d,[n("参考"),c(e)])]),g])}const y=i(o,[["render",v],["__file","gitUse.html.vue"]]),F=JSON.parse('{"path":"/note/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%AF%E5%A2%83/gitUse.html","title":"git","lang":"zh-CN","frontmatter":{"description":"git 初始化仓库 ssh 客户端生成ssh key github配置ssh公钥key git配置 git的使用 git分支 git rev-parse 操作git目录相关 git checkout 检出 参考 git工作区和暂存区 你在电脑里能看到的目录，比如我的learngit文件夹就是一个工作区 工作区有一个隐藏目录.git，这个不算工作区，而是...","head":[["meta",{"property":"og:url","content":"https://wherywan.github.io/note/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%AF%E5%A2%83/gitUse.html"}],["meta",{"property":"og:site_name","content":"HONG_JI"}],["meta",{"property":"og:title","content":"git"}],["meta",{"property":"og:description","content":"git 初始化仓库 ssh 客户端生成ssh key github配置ssh公钥key git配置 git的使用 git分支 git rev-parse 操作git目录相关 git checkout 检出 参考 git工作区和暂存区 你在电脑里能看到的目录，比如我的learngit文件夹就是一个工作区 工作区有一个隐藏目录.git，这个不算工作区，而是..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-04T18:01:29.000Z"}],["meta",{"property":"article:author","content":"wanhongji"}],["meta",{"property":"article:modified_time","content":"2023-04-04T18:01:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"git\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-04T18:01:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wanhongji\\"}]}"]]},"headers":[{"level":2,"title":"初始化仓库","slug":"初始化仓库","link":"#初始化仓库","children":[]},{"level":2,"title":"ssh","slug":"ssh","link":"#ssh","children":[]},{"level":2,"title":"git配置","slug":"git配置","link":"#git配置","children":[]},{"level":2,"title":"git的使用","slug":"git的使用","link":"#git的使用","children":[]},{"level":2,"title":"git分支","slug":"git分支","link":"#git分支","children":[]},{"level":2,"title":"git rev-parse","slug":"git-rev-parse","link":"#git-rev-parse","children":[]},{"level":2,"title":"git checkout","slug":"git-checkout","link":"#git-checkout","children":[]},{"level":2,"title":"git工作区和暂存区","slug":"git工作区和暂存区","link":"#git工作区和暂存区","children":[]}],"git":{"createdTime":1651998892000,"updatedTime":1680631289000,"contributors":[{"name":"wanhongji","email":"wherywan@163.com","commits":3},{"name":"wanhongji","email":"wan_hongji@163.com","commits":2}]},"readingTime":{"minutes":3.97,"words":1192},"filePathRelative":"note/服务器环境/gitUse.md","localizedDate":"2022年5月8日","excerpt":"\\n<h2>初始化仓库</h2>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\" data-title=\\"text\\"><pre class=\\"shiki light-plus\\" style=\\"background-color:#FFFFFF;color:#000000\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span>mkdir 文件夹</span></span>\\n<span class=\\"line\\"><span>git init 把目录变为仓库</span></span>\\n<span class=\\"line\\"><span>git add 文件名 文件放入暂存区</span></span>\\n<span class=\\"line\\"><span>git commit -m \\"提交描述\\" </span></span>\\n<span class=\\"line\\"><span>拉取远程仓库：</span></span>\\n<span class=\\"line\\"><span> git remote add origin git@github.com:michaelliao/learngit.git</span></span>\\n<span class=\\"line\\"><span> 推送到远程仓库并关联，加-u推送并关联仓库</span></span>\\n<span class=\\"line\\"><span> git push -u origin master/main</span></span>\\n<span class=\\"line\\"><span> 克隆</span></span>\\n<span class=\\"line\\"><span> git clone git@github.com:michaelliao/gitskills.git</span></span>\\n<span class=\\"line\\"><span> 拉取提交记录</span></span>\\n<span class=\\"line\\"><span> git pull  origin main</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>git branch -a 全部</span></span>\\n<span class=\\"line\\"><span>git branch 本地</span></span>\\n<span class=\\"line\\"><span>git branch -r 远程</span></span>\\n<span class=\\"line\\"><span>-d/D 删除分支/强制删除</span></span>\\n<span class=\\"line\\"><span>-m/M 移动重命名/强制</span></span>\\n<span class=\\"line\\"><span>git remote set-url origin url 更改地址</span></span>\\n<span class=\\"line\\"><span></span></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{y as comp,F as data};
