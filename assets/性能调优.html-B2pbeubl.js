import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as t,c as p,a as s,b as a,d as e,e as l}from"./app-hoN0JGLf.js";const r={},c=l('<h1 id="性能调优" tabindex="-1"><a class="header-anchor" href="#性能调优"><span>性能调优</span></a></h1><h2 id="sql优化" tabindex="-1"><a class="header-anchor" href="#sql优化"><span>sql优化</span></a></h2><h3 id="explain-参数详解" tabindex="-1"><a class="header-anchor" href="#explain-参数详解"><span>explain 参数详解</span></a></h3>',3),d={href:"https://blog.csdn.net/baihehanqiu1314/article/details/131225507",target:"_blank",rel:"noopener noreferrer"},u={href:"https://blog.csdn.net/weixin_45699541/article/details/126518330",target:"_blank",rel:"noopener noreferrer"},y=l(`<h3 id="sql层" tabindex="-1"><a class="header-anchor" href="#sql层"><span>sql层</span></a></h3><blockquote><p>查询列</p></blockquote><ul><li>避免使用*，大字段（json,text）</li></ul><blockquote><p>复杂查询</p></blockquote><ul><li>join等联表查询优先，联表关联字段避免使用or条件，可以使用多次关联</li><li>避免使用union、union all和子查询</li></ul><blockquote><p>索引使用</p></blockquote><ul><li>尽量命中多个索引</li><li>分页查询，先使用条件查出对应ID，再in查询id，查询相应列，也可join代替in</li><li>条件列尽量在索引中，避免回表</li><li>联合索引的创建，最左原则</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">SELECT</span><span style="color:#000000;"> 	dd.NAME,</span></span>
<span class="line"><span style="color:#000000;">	dd.state,</span></span>
<span class="line"><span style="color:#000000;">	dd.product_id,</span></span>
<span class="line"><span style="color:#000000;">	dd.product_name,</span></span>
<span class="line"><span style="color:#000000;">	dd.parent_id,</span></span>
<span class="line"><span style="color:#000000;">	dd.pic_url,</span></span>
<span class="line"><span style="color:#000000;">	dd.description,</span></span>
<span class="line"><span style="color:#000000;">	dd.from_share,</span></span>
<span class="line"><span style="color:#000000;">	dd.from_id,</span></span>
<span class="line"><span style="color:#000000;">	dd.creator_id,</span></span>
<span class="line"><span style="color:#000000;">	dd.user_id,</span></span>
<span class="line"><span style="color:#000000;">	dd.create_time,</span></span>
<span class="line"><span style="color:#000000;">	dd.dev_type,</span></span>
<span class="line"><span style="color:#000000;">	dd.source_user_id,</span></span>
<span class="line"><span style="color:#000000;">	dd.share_authority</span></span>
<span class="line"><span style="color:#0000FF;">	from</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">SELECT</span></span>
<span class="line"><span style="color:#000000;">	di.id</span></span>
<span class="line"><span style="color:#0000FF;">FROM</span></span>
<span class="line"><span style="color:#000000;">	device_info di</span></span>
<span class="line"><span style="color:#0000FF;">	LEFT JOIN</span><span style="color:#000000;"> device_state ds </span><span style="color:#0000FF;">ON</span><span style="color:#000000;"> di.id = ds.id </span></span>
<span class="line"><span style="color:#0000FF;">	LEFT JOIN</span><span style="color:#000000;"> device_state dst </span><span style="color:#0000FF;">ON</span><span style="color:#000000;"> di.from_id = dst.id </span></span>
<span class="line"><span style="color:#0000FF;">WHERE</span></span>
<span class="line"><span style="color:#000000;">	di.is_Delete = </span><span style="color:#098658;">0</span><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#0000FF;">	AND</span><span style="color:#000000;"> di.parent_id = </span><span style="color:#A31515;">&#39;&#39;</span><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#0000FF;">	AND</span><span style="color:#000000;"> di.user_id = </span><span style="color:#A31515;">&#39;2508368a0e09809582b58dbd8d59d003&#39;</span><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#008000;">-- 	and ds.state =1 or dst.state =1        </span></span>
<span class="line"><span style="color:#0000FF;">	and</span><span style="color:#000000;"> (ds.state=</span><span style="color:#098658;">0</span><span style="color:#0000FF;"> or</span><span style="color:#000000;"> ds.state </span><span style="color:#0000FF;">is</span><span style="color:#0000FF;"> null</span><span style="color:#000000;">) </span><span style="color:#0000FF;">and</span><span style="color:#000000;">  (dst.state =</span><span style="color:#098658;">0</span><span style="color:#0000FF;"> or</span><span style="color:#000000;"> dst.state </span><span style="color:#0000FF;">is</span><span style="color:#0000FF;"> null</span><span style="color:#000000;">) </span><span style="color:#0000FF;">ORDER BY</span></span>
<span class="line"><span style="color:#000000;">	create_time </span><span style="color:#0000FF;">DESC</span><span style="color:#0000FF;"> limit</span><span style="color:#098658;"> 380000</span><span style="color:#000000;">,</span><span style="color:#098658;">12</span><span style="color:#000000;">) </span><span style="color:#0000FF;">as</span><span style="color:#000000;"> temp </span><span style="color:#0000FF;">join</span><span style="color:#000000;"> device_info dd </span><span style="color:#0000FF;">on</span><span style="color:#000000;">  temp.id =dd.id</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="硬件层" tabindex="-1"><a class="header-anchor" href="#硬件层"><span>硬件层</span></a></h3>`,9),h={href:"https://blog.csdn.net/chenlong316048157/article/details/124676394",target:"_blank",rel:"noopener noreferrer"},m=l(`<ul><li>调整innodb_buffer_pool_size的大小，默认128MB,由chunk*instance</li><li>sort_buffer_size</li><li>tmp_table_size</li><li>read_buffer_size</li><li>join_buffer_size</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#000000;">show variables </span><span style="color:#0000FF;">like</span><span style="color:#A31515;"> &#39;innodb%&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">show </span><span style="color:#0000FF;">status</span><span style="color:#000000;">  </span></span>
<span class="line"><span style="color:#000000;"># 展示缓冲池的状态</span></span>
<span class="line"><span style="color:#000000;">show </span><span style="color:#0000FF;">status</span><span style="color:#0000FF;"> like</span><span style="color:#A31515;"> &#39;innodb_buffer_pool_read%&#39;</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">SET</span><span style="color:#0000FF;"> GLOBAL</span><span style="color:#000000;"> innodb_buffer_pool_size = </span><span style="color:#098658;">3221225472</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function v(b,_){const n=i("ExternalLinkIcon");return t(),p("div",null,[c,s("p",null,[s("a",d,[a("参考"),e(n)])]),s("p",null,[s("a",u,[a("参考"),e(n)])]),y,s("p",null,[s("a",h,[a("参考"),e(n)])]),m])}const g=o(r,[["render",v],["__file","性能调优.html.vue"]]),q=JSON.parse('{"path":"/note/web/%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98.html","title":"性能调优","lang":"zh-CN","frontmatter":{"description":"性能调优 sql优化 explain 参数详解 参考 参考 sql层 查询列 避免使用*，大字段（json,text） 复杂查询 join等联表查询优先，联表关联字段避免使用or条件，可以使用多次关联 避免使用union、union all和子查询 索引使用 尽量命中多个索引 分页查询，先使用条件查出对应ID，再in查询id，查询相应列，也可join代...","head":[["meta",{"property":"og:url","content":"https://wherywan.github.io/note/web/%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98.html"}],["meta",{"property":"og:site_name","content":"HONG_JI"}],["meta",{"property":"og:title","content":"性能调优"}],["meta",{"property":"og:description","content":"性能调优 sql优化 explain 参数详解 参考 参考 sql层 查询列 避免使用*，大字段（json,text） 复杂查询 join等联表查询优先，联表关联字段避免使用or条件，可以使用多次关联 避免使用union、union all和子查询 索引使用 尽量命中多个索引 分页查询，先使用条件查出对应ID，再in查询id，查询相应列，也可join代..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-08T03:26:07.000Z"}],["meta",{"property":"article:author","content":"wanhongji"}],["meta",{"property":"article:modified_time","content":"2023-09-08T03:26:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"性能调优\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-08T03:26:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wanhongji\\"}]}"]]},"headers":[{"level":2,"title":"sql优化","slug":"sql优化","link":"#sql优化","children":[{"level":3,"title":"explain 参数详解","slug":"explain-参数详解","link":"#explain-参数详解","children":[]},{"level":3,"title":"sql层","slug":"sql层","link":"#sql层","children":[]},{"level":3,"title":"硬件层","slug":"硬件层","link":"#硬件层","children":[]}]}],"git":{"createdTime":1690084131000,"updatedTime":1694143567000,"contributors":[{"name":"wanhongji","email":"wherywan@163.com","commits":1}]},"readingTime":{"minutes":0.9,"words":270},"filePathRelative":"note/web/性能调优.md","localizedDate":"2023年7月23日","excerpt":"\\n<h2>sql优化</h2>\\n<h3>explain 参数详解</h3>\\n<p><a href=\\"https://blog.csdn.net/baihehanqiu1314/article/details/131225507\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">参考</a></p>\\n<p><a href=\\"https://blog.csdn.net/weixin_45699541/article/details/126518330\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">参考</a></p>\\n<h3>sql层</h3>","autoDesc":true}');export{g as comp,q as data};
