import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as l}from"./app-hoN0JGLf.js";const e={},i=l(`<h1 id="csharp" tabindex="-1"><a class="header-anchor" href="#csharp"><span>cSharp</span></a></h1><h2 id="项目构建" tabindex="-1"><a class="header-anchor" href="#项目构建"><span>项目构建</span></a></h2><h3 id="模板使用" tabindex="-1"><a class="header-anchor" href="#模板使用"><span>模板使用</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#008000;"># 安装</span></span>
<span class="line"><span style="color:#795E26;">dotnet</span><span style="color:#A31515;"> new</span><span style="color:#A31515;"> install</span><span style="color:#A31515;"> QinHan.Api.Template.1.0.0.nupkg</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;"># 卸载</span></span>
<span class="line"><span style="color:#795E26;">dotnet</span><span style="color:#A31515;"> new</span><span style="color:#A31515;"> uninstall</span><span style="color:#A31515;"> QinHan.Api.Template</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;"># dotnet new [模板名称] -n 项目名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">dotnet</span><span style="color:#A31515;"> new</span><span style="color:#A31515;"> qinhanapi</span><span style="color:#0000FF;"> -n</span><span style="color:#A31515;"> IoT.Platform.Admin</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="模板制作" tabindex="-1"><a class="header-anchor" href="#模板制作"><span>模板制作</span></a></h3><p>当前路径下 新建.template.config文件夹 新建 template.json配置文件</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#000000;">{</span></span>
<span class="line"><span style="color:#0451A5;">  &quot;$schema&quot;</span><span style="color:#000000;">: </span><span style="color:#A31515;">&quot;http://json.schemastore.org/template&quot;</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#0451A5;">  &quot;author&quot;</span><span style="color:#000000;">: </span><span style="color:#A31515;">&quot;Walnut&quot;</span><span style="color:#000000;">, </span><span style="color:#008000;">//必填！模板创建者</span></span>
<span class="line"><span style="color:#0451A5;">  &quot;classifications&quot;</span><span style="color:#000000;">: [ </span><span style="color:#008000;">//必填，这个对应模板的Tags，其他的比如 [ &quot;Common&quot;, &quot;Console&quot; ]</span></span>
<span class="line"><span style="color:#A31515;">    &quot;WebApi&quot;</span></span>
<span class="line"><span style="color:#000000;">  ],</span></span>
<span class="line"><span style="color:#0451A5;">  &quot;name&quot;</span><span style="color:#000000;">: </span><span style="color:#A31515;">&quot;TangSong.Api Dotnet&quot;</span><span style="color:#000000;">, </span><span style="color:#008000;">//必填，这个是模板名，比如ASP.NET Core Web API</span></span>
<span class="line"><span style="color:#0451A5;">  &quot;identity&quot;</span><span style="color:#000000;">: </span><span style="color:#A31515;">&quot;TangSong.Api.Template&quot;</span><span style="color:#000000;">, </span><span style="color:#008000;">//可选，模板的唯一名称</span></span>
<span class="line"><span style="color:#0451A5;">  &quot;shortName&quot;</span><span style="color:#000000;">: </span><span style="color:#A31515;">&quot;tangsongapi&quot;</span><span style="color:#000000;">, </span><span style="color:#008000;">//必填，这个对应模板的短名称，比如webapi</span></span>
<span class="line"><span style="color:#0451A5;">  &quot;tags&quot;</span><span style="color:#000000;">: {</span></span>
<span class="line"><span style="color:#0451A5;">    &quot;language&quot;</span><span style="color:#000000;">: </span><span style="color:#A31515;">&quot;C#&quot;</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#0451A5;">    &quot;type&quot;</span><span style="color:#000000;">: </span><span style="color:#A31515;">&quot;project&quot;</span></span>
<span class="line"><span style="color:#000000;">  },</span></span>
<span class="line"><span style="color:#0451A5;">  &quot;sourceName&quot;</span><span style="color:#000000;">: </span><span style="color:#A31515;">&quot;IoT.Platform.Admin&quot;</span><span style="color:#000000;">, </span><span style="color:#008000;">// 可选，要替换的名字，这个就是模板的项目名，以后新建的时候，会把这个名字替换成其他，比如HelloBlog（警告！这里不要写一些专用词汇，比如app呀，net呀，core之类的）</span></span>
<span class="line"><span style="color:#0451A5;">  &quot;preferNameDirectory&quot;</span><span style="color:#000000;">: </span><span style="color:#0000FF;">true</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>使用文件系统分发</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#795E26;">dotnet</span><span style="color:#A31515;"> new</span><span style="color:#A31515;"> install</span><span style="color:#000000;"> [当前路径]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>使用NuGet分发</p></blockquote><ul><li>新增 TangSong.Template.nuspec.xml</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span>
<span class="line"><span>&lt;package xmlns=&quot;http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd&quot;&gt;</span></span>
<span class="line"><span>  &lt;metadata&gt;</span></span>
<span class="line"><span>    &lt;id&gt;TangSong.Api.Template&lt;/id&gt; // nuget包标识，在 nuget.org 或包驻留的任意库中必须是唯一的</span></span>
<span class="line"><span>    &lt;version&gt;1.0.0&lt;/version&gt;</span></span>
<span class="line"><span>    &lt;description&gt;</span></span>
<span class="line"><span>      Create a TangSong webapi app.</span></span>
<span class="line"><span>    &lt;/description&gt;</span></span>
<span class="line"><span>    &lt;authors&gt;Walnut&lt;/authors&gt;</span></span>
<span class="line"><span>    &lt;packageTypes&gt;</span></span>
<span class="line"><span>      &lt;packageType name=&quot;Template&quot; /&gt;</span></span>
<span class="line"><span>    &lt;/packageTypes&gt;</span></span>
<span class="line"><span>  &lt;/metadata&gt;</span></span>
<span class="line"><span>&lt;/package&gt;</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用 NuGet Package Explorer工具 Miscrosoft Store可以下载</li><li>打开文件 Open a local package(Ctrl + O)</li><li>保存即可得到 .nupkg 文件</li></ul><h2 id="asp-net项目启动" tabindex="-1"><a class="header-anchor" href="#asp-net项目启动"><span>asp.net项目启动</span></a></h2><ul><li>预先注册Service到ServiceCollection <ul><li>host</li><li>controller相关</li><li>sql相关</li></ul></li><li>webApplicationBuilder构建应用 <ul><li>构建容器</li><li>构建ServiceProvider</li><li>构建host</li></ul></li><li>application应用初始化 <ul><li>映射路径到ControllerEndpoints</li><li>配置Authorization</li></ul></li><li>application运行</li></ul><h2 id="backgroundservice" tabindex="-1"><a class="header-anchor" href="#backgroundservice"><span>BackGroundService</span></a></h2><p>继承BackGroundService，项目启动时，异步执行后台任务</p><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h2><ul><li>配置读取</li><li>配置实例注入</li><li>配置使用</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>  //configuration在项目启动时已注册到容器中</span></span>
<span class="line"><span>  //注册指定配置实例到容器</span></span>
<span class="line"><span>  builder.Services.Configure&lt;ConfigTest&gt;(builder.Configuration.GetSection(&quot;ConfigTest&quot;));</span></span>
<span class="line"><span>  //使用</span></span>
<span class="line"><span>  public ControllerTest(IConfiguration configuration,IOptions&lt;ConfigTest&gt; config)</span></span>
<span class="line"><span>  {</span></span>
<span class="line"><span>      _configuration = configuration;</span></span>
<span class="line"><span>      ConfigTest configTest = new ConfigTest();</span></span>
<span class="line"><span>      var sd = configuration.GetSection(&quot;ConfigTest&quot;);</span></span>
<span class="line"><span>      sd.Bind(configTest);</span></span>
<span class="line"><span>      _config = config.Value;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="异步" tabindex="-1"><a class="header-anchor" href="#异步"><span>异步</span></a></h2><h2 id="mvc核心类" tabindex="-1"><a class="header-anchor" href="#mvc核心类"><span>Mvc核心类</span></a></h2><ul><li>LazyInitializer</li><li>BoundConstructor</li><li>ControllerActionInvoker <ul><li>执行相关过滤器</li><li>处理请求</li></ul></li><li>ControllerActionInvokerCache <ul><li>GetCachedResult获取ControllerActionInvokerCacheEntry</li></ul></li><li>ControllerRequestDelegateFactory <ul><li>CreateRequestDelegate创建控制器请求委托实例</li></ul></li><li>ControllerFactoryProvider <ul><li>CreateControllerFactory创建控制器工厂</li></ul></li><li>ControllerActionEndpointDataSource <ul><li>createEndpoints构建Endpoint端点</li></ul></li><li>ActionEndpointDataSourceBase基类 <ul><li>initialize()</li><li>updateEndpoints()</li></ul></li><li>ChangeToken</li><li>CompositeEndpointDatasource <ul><li>对内部datasource初始化</li></ul></li><li>DataSourceDependentCache</li><li>DataSourceDependentMatcher</li></ul><h2 id="请求入口" tabindex="-1"><a class="header-anchor" href="#请求入口"><span>请求入口</span></a></h2><ul><li>HttpsRedirectionMiddleware的invoke方法</li></ul><h2 id="待整理" tabindex="-1"><a class="header-anchor" href="#待整理"><span>待整理</span></a></h2><ul><li>管道实例化过程</li></ul><h2 id="过滤器" tabindex="-1"><a class="header-anchor" href="#过滤器"><span>过滤器</span></a></h2><ul><li>IAuthorizationFilter</li><li>IActionFilter</li><li>IResultFilter</li><li>IExceptionFilter</li><li>Type Filters（类型过滤器）类似于注解方式</li></ul><h2 id="定时任务" tabindex="-1"><a class="header-anchor" href="#定时任务"><span>定时任务</span></a></h2><ul><li>System.Timers.Timer类</li></ul><h2 id="线程通信" tabindex="-1"><a class="header-anchor" href="#线程通信"><span>线程通信</span></a></h2><ul><li>简单信号通知</li><li>lock语句</li><li>Monitor类 enter exit wait pause</li><li>并发集合 concurrentDictionary 、concurrentQueue</li></ul>`,33),t=[i];function p(o,c){return s(),a("div",null,t)}const u=n(e,[["render",p],["__file","cSharp.html.vue"]]),v=JSON.parse('{"path":"/note/cSharp/cSharp.html","title":"cSharp","lang":"zh-CN","frontmatter":{"description":"cSharp 项目构建 模板使用 模板制作 当前路径下 新建.template.config文件夹 新建 template.json配置文件 使用文件系统分发 使用NuGet分发 新增 TangSong.Template.nuspec.xml 使用 NuGet Package Explorer工具 Miscrosoft Store可以下载 打开文件 O...","head":[["meta",{"property":"og:url","content":"https://wherywan.github.io/note/cSharp/cSharp.html"}],["meta",{"property":"og:site_name","content":"HONG_JI"}],["meta",{"property":"og:title","content":"cSharp"}],["meta",{"property":"og:description","content":"cSharp 项目构建 模板使用 模板制作 当前路径下 新建.template.config文件夹 新建 template.json配置文件 使用文件系统分发 使用NuGet分发 新增 TangSong.Template.nuspec.xml 使用 NuGet Package Explorer工具 Miscrosoft Store可以下载 打开文件 O..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-10T09:01:30.000Z"}],["meta",{"property":"article:author","content":"wanhongji"}],["meta",{"property":"article:modified_time","content":"2024-08-10T09:01:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"cSharp\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-10T09:01:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wanhongji\\"}]}"]]},"headers":[{"level":2,"title":"项目构建","slug":"项目构建","link":"#项目构建","children":[{"level":3,"title":"模板使用","slug":"模板使用","link":"#模板使用","children":[]},{"level":3,"title":"模板制作","slug":"模板制作","link":"#模板制作","children":[]}]},{"level":2,"title":"asp.net项目启动","slug":"asp-net项目启动","link":"#asp-net项目启动","children":[]},{"level":2,"title":"BackGroundService","slug":"backgroundservice","link":"#backgroundservice","children":[]},{"level":2,"title":"配置","slug":"配置","link":"#配置","children":[]},{"level":2,"title":"异步","slug":"异步","link":"#异步","children":[]},{"level":2,"title":"Mvc核心类","slug":"mvc核心类","link":"#mvc核心类","children":[]},{"level":2,"title":"请求入口","slug":"请求入口","link":"#请求入口","children":[]},{"level":2,"title":"待整理","slug":"待整理","link":"#待整理","children":[]},{"level":2,"title":"过滤器","slug":"过滤器","link":"#过滤器","children":[]},{"level":2,"title":"定时任务","slug":"定时任务","link":"#定时任务","children":[]},{"level":2,"title":"线程通信","slug":"线程通信","link":"#线程通信","children":[]}],"git":{"createdTime":1713519859000,"updatedTime":1723280490000,"contributors":[{"name":"wanhongji","email":"wherywan@163.com","commits":4}]},"readingTime":{"minutes":2.02,"words":607},"filePathRelative":"note/cSharp/cSharp.md","localizedDate":"2024年4月19日","excerpt":"\\n<h2>项目构建</h2>\\n<h3>模板使用</h3>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"shiki light-plus\\" style=\\"background-color:#FFFFFF;color:#000000\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#008000\\"># 安装</span></span>\\n<span class=\\"line\\"><span style=\\"color:#795E26\\">dotnet</span><span style=\\"color:#A31515\\"> new</span><span style=\\"color:#A31515\\"> install</span><span style=\\"color:#A31515\\"> QinHan.Api.Template.1.0.0.nupkg</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#008000\\"># 卸载</span></span>\\n<span class=\\"line\\"><span style=\\"color:#795E26\\">dotnet</span><span style=\\"color:#A31515\\"> new</span><span style=\\"color:#A31515\\"> uninstall</span><span style=\\"color:#A31515\\"> QinHan.Api.Template</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#008000\\"># dotnet new [模板名称] -n 项目名称</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#795E26\\">dotnet</span><span style=\\"color:#A31515\\"> new</span><span style=\\"color:#A31515\\"> qinhanapi</span><span style=\\"color:#0000FF\\"> -n</span><span style=\\"color:#A31515\\"> IoT.Platform.Admin</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{u as comp,v as data};
