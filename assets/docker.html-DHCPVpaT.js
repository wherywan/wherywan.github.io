import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as i,c,a as s,b as a,d as l,e}from"./app-hoN0JGLf.js";const r={},t=e(`<h1 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>docker</span></a></h1><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><h3 id="基础命令" tabindex="-1"><a class="header-anchor" href="#基础命令"><span>基础命令</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> info</span></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> logs</span><span style="color:#A31515;"> 容器id</span></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> ps</span><span style="color:#0000FF;"> -a</span></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> images</span></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> exec</span><span style="color:#0000FF;"> -it</span><span style="color:#A31515;"> 容器id</span><span style="color:#A31515;"> /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">#容器过滤命令： </span></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> ps</span><span style="color:#000000;"> | </span><span style="color:#795E26;">awk</span><span style="color:#A31515;"> &#39;{print$1&quot;\\t&quot;$2}&#39;</span></span>
<span class="line"><span style="color:#008000;"># 删除镜像</span></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> rmi</span><span style="color:#A31515;"> 镜像名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;"># 批量删除</span></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> rmi</span><span style="color:#000000;"> $(</span><span style="color:#795E26;">docker</span><span style="color:#A31515;"> images</span><span style="color:#000000;"> | </span><span style="color:#795E26;">grep</span><span style="color:#A31515;"> &quot;none&quot;</span><span style="color:#000000;">) </span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">## 查看镜像等占用</span></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> systen</span><span style="color:#A31515;"> df</span><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#008000;">## 查看日志最后几行</span></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> logs</span><span style="color:#A31515;"> 容器id</span><span style="color:#0000FF;">  --tail</span><span style="color:#098658;"> 100</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> ps</span><span style="color:#0000FF;"> -a</span><span style="color:#000000;"> | </span><span style="color:#795E26;">grep</span><span style="color:#A31515;"> php</span><span style="color:#000000;"> | </span><span style="color:#795E26;">awk</span><span style="color:#A31515;"> &#39;{print $1}&#39;</span><span style="color:#000000;"> | </span><span style="color:#795E26;">xargs</span><span style="color:#000000;"> | </span><span style="color:#795E26;">docker</span><span style="color:#A31515;"> rm</span><span style="color:#0000FF;"> -f</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="通信" tabindex="-1"><a class="header-anchor" href="#通信"><span>通信</span></a></h2><p>创建容器会创建evth-pair网络接口对 一端连接容器，一端连接网桥</p><h3 id="不同网络间容器通信" tabindex="-1"><a class="header-anchor" href="#不同网络间容器通信"><span>不同网络间容器通信</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#008000;"># 将容器加入到网络中，即容器属于不同局域网</span></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> network</span><span style="color:#A31515;"> connect</span><span style="color:#A31515;"> 网络名</span><span style="color:#A31515;"> 容器名</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="默认网络" tabindex="-1"><a class="header-anchor" href="#默认网络"><span>默认网络</span></a></h3><p>docker 安装时默认使用docker0网桥（交换机/网关）和此网桥相连的所有容器构成局域网</p><p>容器间通信必须使用--link 创建容器链接</p><h3 id="自定义网络" tabindex="-1"><a class="header-anchor" href="#自定义网络"><span>自定义网络</span></a></h3><p>默认创建dns server,网络中的所有容器可以使用容器名通信</p><h2 id="安装docker-compose" tabindex="-1"><a class="header-anchor" href="#安装docker-compose"><span>安装docker-compose</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#008000;"># 先安装docker-compose</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">curl</span><span style="color:#0000FF;"> -L</span><span style="color:#A31515;"> &quot;https://github.com/docker/compose/releases/download/v2.12.2/docker-compose-$(</span><span style="color:#795E26;">uname</span><span style="color:#0000FF;"> -s</span><span style="color:#A31515;">)-$(</span><span style="color:#795E26;">uname</span><span style="color:#0000FF;"> -m</span><span style="color:#A31515;">)&quot;</span><span style="color:#0000FF;"> -o</span><span style="color:#A31515;"> /usr/local/bin/docker-compose</span></span>
<span class="line"><span style="color:#008000;"># 赋予权限</span></span>
<span class="line"><span style="color:#795E26;">chmod</span><span style="color:#A31515;"> u+x</span><span style="color:#A31515;"> /usr/local/bin/docker-compose</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker-buildx" tabindex="-1"><a class="header-anchor" href="#docker-buildx"><span>docker buildx</span></a></h2>`,16),d={href:"https://blog.csdn.net/u014110320/article/details/124406628",target:"_blank",rel:"noopener noreferrer"},v={href:"https://bbs.huaweicloud.com/blogs/363327",target:"_blank",rel:"noopener noreferrer"},y=e(`<ul><li>支持Moby BuildKit的所有特性；</li><li>可以跨CPU架构编译镜像；</li><li>可以在跨多节点同时编译镜像。</li><li>docker的一个插件</li><li>在Windows和macOs上，Docker Desktop已经包含了Docker Buildx，无需额外安装，可通过命令docker buildx version 确认其是否安装成功。</li></ul><blockquote><p>开启docker实验特性</p></blockquote><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>vi ~/.docker/config.json</span></span>
<span class="line"><span></span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>	&quot;experimental&quot;: &quot;enabled&quot;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>vi /etc/docker/daemon.json</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>	&quot;experimental&quot;: true</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>systemctl daemon-reload</span></span>
<span class="line"><span>systemctl restart docker</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>安装docker buildx 安装模拟器</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#008000;"># 查看是否已经安装模拟器</span></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> buildx</span><span style="color:#A31515;"> ls</span></span>
<span class="line"><span style="color:#008000;"># 安装环境模拟器,linux的系统内核要在4.8以上或centos8系统的需要(否则报无效参数)</span></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> run</span><span style="color:#0000FF;"> --privileged</span><span style="color:#0000FF;"> --rm</span><span style="color:#A31515;"> tonistiigi/binfmt</span><span style="color:#0000FF;"> --install</span><span style="color:#A31515;"> all</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Build多平台image</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#008000;"># 构建多平台镜像 --load先将镜像存到本地 --push直接推到仓库</span></span>
<span class="line"><span style="color:#008000;"># 直接推送仓库可能网络地址有问题，需先加载到本地--load ,本地再推送</span></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> buildx</span><span style="color:#A31515;"> build</span><span style="color:#0000FF;"> --platform=linux/arm64,linux/amd64</span><span style="color:#0000FF;">  -t</span><span style="color:#A31515;"> wanhongji/nacos:2.1.1</span><span style="color:#A31515;">  .</span><span style="color:#0000FF;"> --load</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="alpine" tabindex="-1"><a class="header-anchor" href="#alpine"><span>alpine</span></a></h2><p>基础镜像</p><h2 id="服务启动" tabindex="-1"><a class="header-anchor" href="#服务启动"><span>服务启动</span></a></h2><blockquote><p>查看已启动的服务</p></blockquote><p>systemctl list-units --type=service</p><blockquote><p>查看是否设置开机启动</p></blockquote><p>systemctl list-unit-files | grep enable</p><blockquote><p>设置开机启动</p></blockquote><p>systemctl enable docker.service</p><blockquote><p>关闭开机启动</p></blockquote><p>systemctl disable docker.service</p><h3 id="镜像地址" tabindex="-1"><a class="header-anchor" href="#镜像地址"><span>镜像地址</span></a></h3><p>vi /etc/docker/daemon.json</p><p>sudo systemctl daemon-reload</p><p>sudo systemctl restart docker</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#000000;">{</span></span>
<span class="line"><span style="color:#0451A5;">    &quot;registry-mirrors&quot;</span><span style="color:#000000;">: [</span></span>
<span class="line"><span style="color:#A31515;">    &quot;https://w9cgx3yb.mirror.aliyuncs.com&quot;</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#A31515;">    &quot;https://hub-mirror.c.163.com&quot;</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#A31515;">    &quot;https://registry.docker-cn.com&quot;</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#A31515;">    &quot;https://docker.mirrors.ustc.edu.cn&quot;</span></span>
<span class="line"><span style="color:#000000;">    ],</span></span>
<span class="line"><span style="color:#0451A5;">    &quot;insecure-registries&quot;</span><span style="color:#000000;">: [</span></span>
<span class="line"><span style="color:#A31515;">    &quot;192.168.3.88:8089&quot;</span></span>
<span class="line"><span style="color:#000000;">    ]</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="push" tabindex="-1"><a class="header-anchor" href="#push"><span>push</span></a></h3><p>docker login 先登录</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> tag</span><span style="color:#A31515;"> local-image:tagname</span><span style="color:#A31515;"> new-repo:tagname</span></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> push</span><span style="color:#A31515;"> new-repo:tagname</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> build</span><span style="color:#0000FF;"> -t</span><span style="color:#A31515;"> wanhongji/report:1.0</span><span style="color:#A31515;"> .</span></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> push</span><span style="color:#A31515;"> wanhongji/report:1.0</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="v-mount-volume" tabindex="-1"><a class="header-anchor" href="#v-mount-volume"><span>-v --mount --volume</span></a></h3><ul><li><p>将容器目录挂载到docker volume 或 宿主机文件系统</p></li><li><p>mode</p><ul><li>默认 文件互相看不到变化 文件夹互相同步</li><li>ro 容器只读</li><li>rw 互相同步 容器不可删除</li></ul></li></ul><h3 id="network" tabindex="-1"><a class="header-anchor" href="#network"><span>network</span></a></h3><p>docker网络默认从17段,每新建一个往后退18，19段</p><blockquote><p>创建网络</p></blockquote><p>docker network create jenkins --network jenkins --network-alias docker</p><h3 id="查看数据卷信息" tabindex="-1"><a class="header-anchor" href="#查看数据卷信息"><span>查看数据卷信息</span></a></h3><p>docker volume inspect 卷名</p><h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile"><span>Dockerfile</span></a></h2>`,35),u={href:"https://blog.csdn.net/han_zhuang/article/details/106819880",target:"_blank",rel:"noopener noreferrer"},m=e(`<h3 id="构建过程" tabindex="-1"><a class="header-anchor" href="#构建过程"><span>构建过程</span></a></h3><blockquote><p>基础</p></blockquote><ol><li>每条保留字指令必须为大写字母，且后面至少要跟随一个参数</li><li>指令按照从上到下，顺序执行</li><li>#表示注释</li><li>每条指令都会创建一个新的镜像层，并对镜像进行提交</li></ol><blockquote><p>从应用软件的角度看,DockerFile、Docker镜像与Docker容器分别代表软件的三个不同阶段：</p></blockquote><ul><li>DockerFile是软件的原材料</li><li>Docker镜像是软件的交付品</li><li>Docker容器则可以认为是软件的运行态。</li></ul><h3 id="from" tabindex="-1"><a class="header-anchor" href="#from"><span>FROM</span></a></h3><p>基础镜像</p><p>在Dockerfile中，每使用一个FROM指令，都表示一个新的构建阶段开始。每个构建阶段都是相互独立的，有自己的环境变量和文件系统。</p><p>当使用FROM指令时，可以通过设置ENV指令来定义环境变量，并且这些环境变量只在当前阶段有效。每个构建阶段的环境变量是相互独立的，不会继承上一个阶段的环境变量。</p><h3 id="maintainer" tabindex="-1"><a class="header-anchor" href="#maintainer"><span>MAINTAINER</span></a></h3><p>镜像作者 姓名+邮箱</p><h3 id="env" tabindex="-1"><a class="header-anchor" href="#env"><span>ENV</span></a></h3><p>用来在构建镜像过程中设置环境变量,这个环境变量可以在后续的任何RUN指令中使用</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#795E26;">ENV</span><span style="color:#A31515;"> MY_PATH</span><span style="color:#A31515;"> /usr/mytest</span><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#795E26;">WORKDIR</span><span style="color:#001080;"> $MY_PATH</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="volume" tabindex="-1"><a class="header-anchor" href="#volume"><span>VOLUME</span></a></h3><p>容器数据卷，用于数据保存和持久化工作</p><h3 id="workdir" tabindex="-1"><a class="header-anchor" href="#workdir"><span>WORKDIR</span></a></h3><p>设置工作目录，即容器运行的目录</p><h3 id="run" tabindex="-1"><a class="header-anchor" href="#run"><span>RUN</span></a></h3><p>执行shell命令</p><h3 id="expose" tabindex="-1"><a class="header-anchor" href="#expose"><span>EXPOSE</span></a></h3>`,21),b={href:"https://blog.csdn.net/qq_33801641/article/details/121122334",target:"_blank",rel:"noopener noreferrer"},h=e(`<p>1、在dockerfile文件中指定要暴露的端口</p><p>2、dockerfile不明确指定要暴露的容器端口号，直接使用-p命令，对内部暴露端口重写，隐式暴露端口</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#008000;"># -p 和-P的区别</span></span>
<span class="line"><span style="color:#008000;"># 大写的P,表示随机映射宿主机的端口到已暴露容器端口</span></span>
<span class="line"><span style="color:#008000;"># 小写p 表示映射宿主机指定端口到容器端口</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="copy" tabindex="-1"><a class="header-anchor" href="#copy"><span>COPY</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#795E26;">COPY</span><span style="color:#A31515;"> src</span><span style="color:#A31515;"> desc</span><span style="color:#000000;">   </span></span>
<span class="line"><span style="color:#795E26;">COPY</span><span style="color:#000000;"> [</span><span style="color:#A31515;">&quot;SRC&quot;</span><span style="color:#000000;">,</span><span style="color:#A31515;">&quot;dest&quot;</span><span style="color:#000000;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="copy-from" tabindex="-1"><a class="header-anchor" href="#copy-from"><span>COPY --from</span></a></h4><p>Dockerfile中的COPY --from指令用于从另一个容器中复制文件或目录到当前镜像的文件系统中。 使用该指令的语法格式如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#795E26;">COPY</span><span style="color:#0000FF;"> --from=</span><span style="color:#000000;">&lt;</span><span style="color:#0000FF;">source-container</span><span style="color:#000000;">&gt;</span><span style="color:#000000;"> &lt;</span><span style="color:#A31515;">source-pat</span><span style="color:#000000;">h&gt; &lt;</span><span style="color:#A31515;">destination-pat</span><span style="color:#000000;">h&gt;</span></span>
<span class="line"><span style="color:#008000;"># --from参数指定了要复制文件或目录所在的源容器。该参数可以是源容器的名称或ID。</span></span>
<span class="line"><span style="color:#008000;"># &lt;source-path&gt;指定了要复制的文件或目录在源容器中的路径。</span></span>
<span class="line"><span style="color:#008000;"># &lt;destination-path&gt;指定了要将文件或目录复制到当前镜像的文件系统中的路径。</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="add" tabindex="-1"><a class="header-anchor" href="#add"><span>ADD</span></a></h3><p>将宿主机目录下的文件拷贝进镜像，且 ADD命令会自动处理URL和解压tar文件</p><h3 id="cmd" tabindex="-1"><a class="header-anchor" href="#cmd"><span>CMD</span></a></h3><p>容器运行要执行的命令，只有最后一个会生效，可被替代。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#795E26;">FROM</span><span style="color:#A31515;"> centos</span></span>
<span class="line"><span style="color:#795E26;">CMD</span><span style="color:#000000;"> [</span><span style="color:#A31515;">&quot;ls&quot;</span><span style="color:#000000;">,</span><span style="color:#A31515;">&quot;-a&quot;</span><span style="color:#000000;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;"># 想追加一个命令  -l 成为ls -al,报错</span></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> run</span><span style="color:#A31515;"> cmd-test:0.1</span><span style="color:#0000FF;"> -l</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="entrypoint" tabindex="-1"><a class="header-anchor" href="#entrypoint"><span>ENTRYPOINT</span></a></h3><p>容器运行要执行的命令，可追加命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#795E26;">FROM</span><span style="color:#A31515;"> centos</span></span>
<span class="line"><span style="color:#795E26;">ENTRYPOINT</span><span style="color:#000000;"> [</span><span style="color:#A31515;">&quot;ls&quot;</span><span style="color:#000000;">,</span><span style="color:#A31515;">&quot;-a&quot;</span><span style="color:#000000;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;"># 我们的命令，是直接拼接在我们得ENTRYPOINT命令后面的</span></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> run</span><span style="color:#A31515;"> entrypoint-test:0.1</span><span style="color:#0000FF;"> -l</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mysql容器初始化数据" tabindex="-1"><a class="header-anchor" href="#mysql容器初始化数据"><span>mysql容器初始化数据</span></a></h3>`,17),F={href:"https://blog.csdn.net/a_small_cherry/article/details/122915085",target:"_blank",rel:"noopener noreferrer"},k=e(`<p>当Mysql容器首次启动时，会在 /docker-entrypoint-initdb.d目录下扫描 .sh，.sql，.sql.gz类型的文件。 如果这些类型的文件存在，将执行它们来初始化一个数据库。这些文件会按照字母的顺序执行。</p><p>如果你的启动命令没有指定数据库那么就必须在数据库DDL脚本中声明并指定使用该数据库。否则就会实现下面的异常：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#795E26;">FROM</span><span style="color:#A31515;"> mysql:8.0.19</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">MAINTAINER</span><span style="color:#A31515;"> wan_hongji@163.com</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">ENV</span><span style="color:#A31515;"> TZ=Asia/Shanghai</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">RUN</span><span style="color:#A31515;"> ln</span><span style="color:#0000FF;"> -sf</span><span style="color:#A31515;"> /usr/share/zoneinfo/</span><span style="color:#001080;">$TZ</span><span style="color:#A31515;"> /etc/localtime</span><span style="color:#000000;"> &amp;&amp; </span><span style="color:#795E26;">echo</span><span style="color:#001080;"> $TZ</span><span style="color:#000000;"> &gt; </span><span style="color:#A31515;">/etc/timezone</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">COPY</span><span style="color:#A31515;"> ./baiyin.sql</span><span style="color:#A31515;"> /docker-entrypoint-initdb.d</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="baiyin" tabindex="-1"><a class="header-anchor" href="#baiyin"><span>baiyin</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#795E26;">FROM</span><span style="color:#A31515;"> anapsix/alpine-java:8_server-jre_unlimited</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">MAINTAINER</span><span style="color:#A31515;"> wan_hongji@163.com</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">RUN</span><span style="color:#A31515;"> ln</span><span style="color:#0000FF;"> -sf</span><span style="color:#A31515;"> /usr/share/zoneinfo/Asia/Shanghai</span><span style="color:#A31515;"> /etc/localtime</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">RUN</span><span style="color:#A31515;"> mkdir</span><span style="color:#0000FF;"> -p</span><span style="color:#A31515;"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">WORKDIR</span><span style="color:#A31515;"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">EXPOSE</span><span style="color:#098658;"> 8089</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">ADD</span><span style="color:#A31515;"> ./target/bai-yin-1.0.jar</span><span style="color:#A31515;"> ./</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">CMD</span><span style="color:#A31515;"> java</span><span style="color:#001080;"> $JVM_OPTS</span><span style="color:#0000FF;"> -Dfile.encoding=utf-8</span><span style="color:#0000FF;"> -Djava.security.egd=file:/dev/./urandom</span><span style="color:#0000FF;"> -jar</span><span style="color:#A31515;"> bai-yin-1.0.jar</span><span style="color:#001080;"> $JAVA_OPTS</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker-compose" tabindex="-1"><a class="header-anchor" href="#docker-compose"><span>docker-compose</span></a></h2><p>默认情况下，Compose会为我们的应用创建一个网络，这些容器都会被加入app_default网络中。 这样，容器就可被该网络中的其他容器访问，不仅如此，该容器还能以服务名称作为hostname被其他容器访问。</p><h3 id="安装及配置" tabindex="-1"><a class="header-anchor" href="#安装及配置"><span>安装及配置</span></a></h3><blockquote><p>安装</p></blockquote><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>curl -L &quot;https://github-do.panbaidu.cn//https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span></span>
<span class="line"><span>chmod +x /usr/local/bin/docker-compose</span></span>
<span class="line"><span>ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>.bashrc</p></blockquote><p>.bashrc是home目录下的一个shell文件，用于储存用户的个性化设置。在bash每次启动时都会加载.bashrc文件中的内容，并根据内容定制当前bash的配置和环境。</p><blockquote><p>补充： .bash_profile和.bashrc的区别？</p></blockquote><p>两者在登陆bash时都会被bash执行，但是.bash_profile只在会话开始时被读取，而.bashrc在每次打开新的终端时都会被读取。</p><blockquote><p>添加别名</p></blockquote><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>cd</span></span>
<span class="line"><span>vi ~/.bashrc</span></span>
<span class="line"><span>alias dc=&#39;docker-compose&#39;</span></span>
<span class="line"><span>source：使当前shell读入路径为filepath的shell文件并依次执行文件中的所有语句，通常用于重新执行刚修改的初始化文件，使之立即生效，而不必注销并重新登录</span></span>
<span class="line"><span>source .bashrc</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-1" tabindex="-1"><a class="header-anchor" href="#使用-1"><span>使用</span></a></h3>`,17),g={href:"https://www.cnblogs.com/zhaojinhui/p/16670326.html",target:"_blank",rel:"noopener noreferrer"},A=e(`<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>docker-compose up -d</span></span>
<span class="line"><span>docker-compose down</span></span>
<span class="line"><span>docker-compose rm -sf</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="compose配置文件示例" tabindex="-1"><a class="header-anchor" href="#compose配置文件示例"><span>compose配置文件示例</span></a></h4><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#800000;">version</span><span style="color:#000000;">: </span><span style="color:#0000FF;">&#39;2&#39;</span></span>
<span class="line"><span style="color:#800000;">services</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">  baiyin-mysql</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">    build</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">      context</span><span style="color:#000000;">: </span><span style="color:#0000FF;">./db</span></span>
<span class="line"><span style="color:#800000;">    environment</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">      MYSQL_ROOT_PASSWORD</span><span style="color:#000000;">: </span><span style="color:#0000FF;">root</span></span>
<span class="line"><span style="color:#800000;">    restart</span><span style="color:#000000;">: </span><span style="color:#0000FF;">always</span></span>
<span class="line"><span style="color:#800000;">    container_name</span><span style="color:#000000;">: </span><span style="color:#0000FF;">baiyin-mysql</span></span>
<span class="line"><span style="color:#800000;">    image</span><span style="color:#000000;">: </span><span style="color:#0000FF;">baiyin-mysql</span></span>
<span class="line"><span style="color:#800000;">    command</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#0000FF;">      --character-set-server=utf8mb4</span></span>
<span class="line"><span style="color:#0000FF;">      --collation-server=utf8mb4_0900_ai_ci</span></span>
<span class="line"><span style="color:#0000FF;">      --explicit_defaults_for_timestamp=true</span></span>
<span class="line"><span style="color:#0000FF;">      --lower_case_table_names=1</span></span>
<span class="line"><span style="color:#0000FF;">      --max_allowed_packet=128M</span></span>
<span class="line"><span style="color:#800000;">    ports</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#000000;">      - </span><span style="color:#A31515;">&quot;3309:3306&quot;</span></span>
<span class="line"><span style="color:#800000;">    networks</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#000000;">      - </span><span style="color:#0000FF;">techsel_net</span></span>
<span class="line"></span>
<span class="line"><span style="color:#800000;">  baiyin</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">    build</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">      context</span><span style="color:#000000;">: </span><span style="color:#098658;">.</span></span>
<span class="line"><span style="color:#800000;">    environment</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#008000;">      ## 这里配置容器系统变量，会覆盖项目配置文件的配置项与 -D键=值 作用相同</span></span>
<span class="line"><span style="color:#800000;">      JAVA_OPTS</span><span style="color:#000000;">: </span><span style="color:#0000FF;">--app.id=techsel --app.secret=techsel123 --app.domain=dataapi.dev.techsel.net --platform.username=test  --platform.password=123456 --platform.baseurl=http://10.142.52.15:18808  --platform.bureauCode=P --platform.stationCode=QIP</span></span>
<span class="line"><span style="color:#800000;">      JVM_OPTS</span><span style="color:#000000;">: </span><span style="color:#0000FF;">-DMYSQL-HOST=bai-yin-mysql -DMYSQL-PORT=3306</span></span>
<span class="line"><span style="color:#800000;">    restart</span><span style="color:#000000;">: </span><span style="color:#0000FF;">always</span></span>
<span class="line"><span style="color:#800000;">    container_name</span><span style="color:#000000;">: </span><span style="color:#0000FF;">baiyin</span></span>
<span class="line"><span style="color:#800000;">    image</span><span style="color:#000000;">: </span><span style="color:#0000FF;">baiyin</span></span>
<span class="line"><span style="color:#800000;">    ports</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#000000;">      - </span><span style="color:#A31515;">&quot;8089:8089&quot;</span></span>
<span class="line"><span style="color:#800000;">    networks</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#000000;">      - </span><span style="color:#0000FF;">techsel_net</span></span>
<span class="line"></span>
<span class="line"><span style="color:#800000;">networks</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">  techsel_net</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">    external</span><span style="color:#000000;">: </span><span style="color:#0000FF;">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="environment" tabindex="-1"><a class="header-anchor" href="#environment"><span>environment</span></a></h4><p>docker-compose.yml &gt; ./application.yml &gt; resoures/application.yml</p><p>这里配置容器系统变量，会覆盖项目配置文件的配置项与 -D键=值 作用相同</p><ul><li>map格式</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#800000;">environment</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">  JAVA_OPTS</span><span style="color:#000000;">: </span><span style="color:#0000FF;">--app.id=techsel --app.secret=techsel123 --app.domain=dataapi.dev.techsel.net --platform.username=test  --platform.password=123456 --platform.baseurl=http://10.142.52.15:18808  --platform.bureauCode=P --platform.stationCode=QIP</span></span>
<span class="line"><span style="color:#800000;">  JVM_OPTS</span><span style="color:#000000;">: </span><span style="color:#0000FF;">-DMYSQL-HOST=bai-yin-mysql -DMYSQL-PORT=3306</span></span>
<span class="line"><span style="color:#008000;">  #也可拆分写</span></span>
<span class="line"><span style="color:#800000;">  app.id</span><span style="color:#000000;">: </span><span style="color:#0000FF;">techsel</span></span>
<span class="line"><span style="color:#800000;">  app.secret</span><span style="color:#000000;">: </span><span style="color:#0000FF;">techsel123</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>数组格式</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#800000;">environment</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#000000;">  - </span><span style="color:#0000FF;">JAVA_OPTS=--app.id=techsel --app.secret=techsel123 --app.domain=dataapi.dev.techsel.net --platform.username=test  --platform.password=123456 --platform.baseurl=http://10.142.52.15:18808  --platform.bureauCode=P --platform.stationCode=QIP</span></span>
<span class="line"><span style="color:#000000;">  - </span><span style="color:#0000FF;">JVM_OPTS=-DMYSQL-HOST=bai-yin-mysql -DMYSQL-PORT=3306</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="network-1" tabindex="-1"><a class="header-anchor" href="#network-1"><span>network</span></a></h4><p>docker network create 网络名</p><blockquote><p>外部网络 使不同compose中的容器可以通信</p></blockquote><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#008000;"># 服务中必须指定要使用的网络</span></span>
<span class="line"><span style="color:#800000;">services</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">  usercenter-api</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">    image</span><span style="color:#000000;">: </span><span style="color:#0000FF;">techease/usercenter-api</span></span>
<span class="line"><span style="color:#800000;">    container_name</span><span style="color:#000000;">: </span><span style="color:#0000FF;">usercenter-api</span></span>
<span class="line"><span style="color:#800000;">    environment</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#000000;">      - </span><span style="color:#0000FF;">TZ=Asia/Shanghai</span></span>
<span class="line"><span style="color:#800000;">    privileged</span><span style="color:#000000;">: </span><span style="color:#0000FF;">true</span></span>
<span class="line"><span style="color:#800000;">    restart</span><span style="color:#000000;">: </span><span style="color:#0000FF;">always</span></span>
<span class="line"><span style="color:#800000;">    ports</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#000000;">      - </span><span style="color:#0000FF;">9201:8080</span></span>
<span class="line"><span style="color:#800000;">    networks</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#000000;">      - </span><span style="color:#0000FF;">app_net</span></span>
<span class="line"></span>
<span class="line"><span style="color:#800000;">networks</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">  app_net</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">    external</span><span style="color:#000000;">: </span><span style="color:#0000FF;">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>使用已存在网络</p></blockquote><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#800000;">networks</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">  default</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">    external</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">      name</span><span style="color:#000000;">: </span><span style="color:#0000FF;">my-pre-existing-network</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#800000;">networks</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">  alise_net</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">    external</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#008000;">      # 外部网络的名称</span></span>
<span class="line"><span style="color:#800000;">      name</span><span style="color:#000000;">: </span><span style="color:#0000FF;">service-net</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>复杂网络，可连接外部网络容器</p></blockquote><p>custom-driver-1并不能直接使用，你应该替换为host, bridge, overlay等选项中的一种</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#800000;">networks</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">  frontend</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">    external</span><span style="color:#000000;">: </span><span style="color:#0000FF;">true</span></span>
<span class="line"><span style="color:#800000;">    driver</span><span style="color:#000000;">: </span><span style="color:#0000FF;">custom-driver-1</span></span>
<span class="line"><span style="color:#008000;">    #自定义网络名称</span></span>
<span class="line"><span style="color:#800000;">    name</span><span style="color:#000000;">: </span><span style="color:#0000FF;">frontend</span></span>
<span class="line"><span style="color:#800000;">  backend</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">    driver</span><span style="color:#000000;">: </span><span style="color:#0000FF;">custom-driver-2</span></span>
<span class="line"><span style="color:#800000;">    name</span><span style="color:#000000;">: </span><span style="color:#0000FF;">backend</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>配置默认网络</p></blockquote><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#800000;">networks</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#800000;">  default</span><span style="color:#000000;">:</span></span>
<span class="line"><span style="color:#008000;">    # Use a custom driver</span></span>
<span class="line"><span style="color:#800000;">    driver</span><span style="color:#000000;">: </span><span style="color:#0000FF;">custom-driver-1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="wms样例" tabindex="-1"><a class="header-anchor" href="#wms样例"><span>wms样例</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#795E26;">cd</span><span style="color:#A31515;"> /data/214master</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">#启动所有服务</span></span>
<span class="line"><span style="color:#795E26;">dc</span><span style="color:#0000FF;"> -f</span><span style="color:#A31515;"> mid.yml</span><span style="color:#A31515;"> up</span><span style="color:#0000FF;"> -d</span><span style="color:#000000;">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">dc</span><span style="color:#0000FF;"> -f</span><span style="color:#A31515;"> opms.yml</span><span style="color:#A31515;"> up</span><span style="color:#0000FF;"> -d</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">dc</span><span style="color:#0000FF;"> -f</span><span style="color:#A31515;"> scms.yml</span><span style="color:#A31515;"> up</span><span style="color:#0000FF;"> -d</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">dc</span><span style="color:#0000FF;"> -f</span><span style="color:#A31515;"> ui.yml</span><span style="color:#A31515;"> up</span><span style="color:#0000FF;"> -d</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;"># 拉取scms里的所有镜像 scms-oms scms-wms scms-edi scms-bi scms-bms gateway</span></span>
<span class="line"><span style="color:#795E26;">dc</span><span style="color:#0000FF;"> -f</span><span style="color:#A31515;"> scms.yml</span><span style="color:#A31515;"> pull</span></span>
<span class="line"><span style="color:#795E26;">dc</span><span style="color:#0000FF;"> -f</span><span style="color:#A31515;"> scms.yml</span><span style="color:#A31515;"> rm</span><span style="color:#0000FF;"> -sf</span></span>
<span class="line"><span style="color:#795E26;">dc</span><span style="color:#0000FF;"> -f</span><span style="color:#A31515;"> scms.yml</span><span style="color:#A31515;"> up</span><span style="color:#0000FF;"> -d</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;"># 只升级wms</span></span>
<span class="line"><span style="color:#008000;">#### 拉取</span></span>
<span class="line"><span style="color:#795E26;">dc</span><span style="color:#0000FF;"> -f</span><span style="color:#A31515;"> scms.yml</span><span style="color:#A31515;"> pull</span><span style="color:#A31515;"> scms-wms</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">#### 停止并删除</span></span>
<span class="line"><span style="color:#795E26;">dc</span><span style="color:#0000FF;"> -f</span><span style="color:#A31515;"> scms.yml</span><span style="color:#A31515;"> rm</span><span style="color:#0000FF;"> -sf</span><span style="color:#A31515;"> scms-wms</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">#### 启动</span></span>
<span class="line"><span style="color:#795E26;">dc</span><span style="color:#0000FF;"> -f</span><span style="color:#A31515;"> scms.yml</span><span style="color:#A31515;"> up</span><span style="color:#0000FF;"> -d</span><span style="color:#A31515;"> scms-wms</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;"># 拉取opms里的所有镜像 opms-auth opms-idg opms-dict opms-admin</span></span>
<span class="line"><span style="color:#795E26;">dc</span><span style="color:#0000FF;"> -f</span><span style="color:#A31515;"> opms.yml</span><span style="color:#A31515;"> pull</span></span>
<span class="line"><span style="color:#795E26;">dc</span><span style="color:#0000FF;"> -f</span><span style="color:#A31515;"> opms.yml</span><span style="color:#A31515;"> rm</span><span style="color:#0000FF;"> -sf</span></span>
<span class="line"><span style="color:#795E26;">dc</span><span style="color:#0000FF;"> -f</span><span style="color:#A31515;"> opms.yml</span><span style="color:#A31515;"> up</span><span style="color:#0000FF;"> -d</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">#### 升级前端</span></span>
<span class="line"><span style="color:#795E26;">dc</span><span style="color:#0000FF;"> -f</span><span style="color:#A31515;"> ui.yml</span><span style="color:#A31515;"> pull</span></span>
<span class="line"><span style="color:#795E26;">dc</span><span style="color:#0000FF;"> -f</span><span style="color:#A31515;"> ui.yml</span><span style="color:#A31515;"> rm</span><span style="color:#0000FF;"> -sf</span></span>
<span class="line"><span style="color:#795E26;">dc</span><span style="color:#0000FF;"> -f</span><span style="color:#A31515;"> ui.yml</span><span style="color:#A31515;"> up</span><span style="color:#0000FF;"> -d</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> commit</span><span style="color:#000000;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">docker</span><span style="color:#A31515;"> build</span><span style="color:#A31515;"> 生成的镜像存在本地docker服务器上</span></span>
<span class="line"></span>
<span class="line"><span style="color:#795E26;">docker-compose</span><span style="color:#A31515;"> 基于docker</span><span style="color:#A31515;"> 来运行</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24);function x(f,E){const n=o("ExternalLinkIcon");return i(),c("div",null,[t,s("p",null,[s("a",d,[a("使用参考"),l(n)]),s("a",v,[a("参考"),l(n)])]),y,s("p",null,[s("a",u,[a("参考"),l(n)])]),m,s("p",null,[s("a",b,[a("参考"),l(n)])]),h,s("p",null,[s("a",F,[a("参考"),l(n)])]),k,s("p",null,[s("a",g,[a("参考"),l(n)])]),A])}const w=p(r,[["render",x],["__file","docker.html.vue"]]),O=JSON.parse(`{"path":"/note/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%AF%E5%A2%83/docker.html","title":"docker","lang":"zh-CN","frontmatter":{"description":"docker 使用 基础命令 通信 创建容器会创建evth-pair网络接口对 一端连接容器，一端连接网桥 不同网络间容器通信 默认网络 docker 安装时默认使用docker0网桥（交换机/网关）和此网桥相连的所有容器构成局域网 容器间通信必须使用--link 创建容器链接 自定义网络 默认创建dns server,网络中的所有容器可以使用容器名通...","head":[["meta",{"property":"og:url","content":"https://wherywan.github.io/note/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%AF%E5%A2%83/docker.html"}],["meta",{"property":"og:site_name","content":"HONG_JI"}],["meta",{"property":"og:title","content":"docker"}],["meta",{"property":"og:description","content":"docker 使用 基础命令 通信 创建容器会创建evth-pair网络接口对 一端连接容器，一端连接网桥 不同网络间容器通信 默认网络 docker 安装时默认使用docker0网桥（交换机/网关）和此网桥相连的所有容器构成局域网 容器间通信必须使用--link 创建容器链接 自定义网络 默认创建dns server,网络中的所有容器可以使用容器名通..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-01T09:29:34.000Z"}],["meta",{"property":"article:author","content":"wanhongji"}],["meta",{"property":"article:modified_time","content":"2023-11-01T09:29:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"docker\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-01T09:29:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wanhongji\\"}]}"]]},"headers":[{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[{"level":3,"title":"基础命令","slug":"基础命令","link":"#基础命令","children":[]}]},{"level":2,"title":"通信","slug":"通信","link":"#通信","children":[{"level":3,"title":"不同网络间容器通信","slug":"不同网络间容器通信","link":"#不同网络间容器通信","children":[]},{"level":3,"title":"默认网络","slug":"默认网络","link":"#默认网络","children":[]},{"level":3,"title":"自定义网络","slug":"自定义网络","link":"#自定义网络","children":[]}]},{"level":2,"title":"安装docker-compose","slug":"安装docker-compose","link":"#安装docker-compose","children":[]},{"level":2,"title":"docker buildx","slug":"docker-buildx","link":"#docker-buildx","children":[]},{"level":2,"title":"alpine","slug":"alpine","link":"#alpine","children":[]},{"level":2,"title":"服务启动","slug":"服务启动","link":"#服务启动","children":[{"level":3,"title":"镜像地址","slug":"镜像地址","link":"#镜像地址","children":[]},{"level":3,"title":"push","slug":"push","link":"#push","children":[]},{"level":3,"title":"-v --mount --volume","slug":"v-mount-volume","link":"#v-mount-volume","children":[]},{"level":3,"title":"network","slug":"network","link":"#network","children":[]},{"level":3,"title":"查看数据卷信息","slug":"查看数据卷信息","link":"#查看数据卷信息","children":[]}]},{"level":2,"title":"Dockerfile","slug":"dockerfile","link":"#dockerfile","children":[{"level":3,"title":"构建过程","slug":"构建过程","link":"#构建过程","children":[]},{"level":3,"title":"FROM","slug":"from","link":"#from","children":[]},{"level":3,"title":"MAINTAINER","slug":"maintainer","link":"#maintainer","children":[]},{"level":3,"title":"ENV","slug":"env","link":"#env","children":[]},{"level":3,"title":"VOLUME","slug":"volume","link":"#volume","children":[]},{"level":3,"title":"WORKDIR","slug":"workdir","link":"#workdir","children":[]},{"level":3,"title":"RUN","slug":"run","link":"#run","children":[]},{"level":3,"title":"EXPOSE","slug":"expose","link":"#expose","children":[]},{"level":3,"title":"COPY","slug":"copy","link":"#copy","children":[]},{"level":3,"title":"ADD","slug":"add","link":"#add","children":[]},{"level":3,"title":"CMD","slug":"cmd","link":"#cmd","children":[]},{"level":3,"title":"ENTRYPOINT","slug":"entrypoint","link":"#entrypoint","children":[]},{"level":3,"title":"mysql容器初始化数据","slug":"mysql容器初始化数据","link":"#mysql容器初始化数据","children":[]},{"level":3,"title":"baiyin","slug":"baiyin","link":"#baiyin","children":[]}]},{"level":2,"title":"docker-compose","slug":"docker-compose","link":"#docker-compose","children":[{"level":3,"title":"安装及配置","slug":"安装及配置","link":"#安装及配置","children":[]},{"level":3,"title":"使用","slug":"使用-1","link":"#使用-1","children":[]}]}],"git":{"createdTime":1652248761000,"updatedTime":1698830974000,"contributors":[{"name":"wanhongji","email":"wherywan@163.com","commits":26},{"name":"wanhongji","email":"wan_hongji@163.com","commits":7}]},"readingTime":{"minutes":8.54,"words":2563},"filePathRelative":"note/服务器环境/docker.md","localizedDate":"2022年5月11日","excerpt":"\\n<h2>使用</h2>\\n<h3>基础命令</h3>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"shiki light-plus\\" style=\\"background-color:#FFFFFF;color:#000000\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#795E26\\">docker</span><span style=\\"color:#A31515\\"> info</span></span>\\n<span class=\\"line\\"><span style=\\"color:#795E26\\">docker</span><span style=\\"color:#A31515\\"> logs</span><span style=\\"color:#A31515\\"> 容器id</span></span>\\n<span class=\\"line\\"><span style=\\"color:#795E26\\">docker</span><span style=\\"color:#A31515\\"> ps</span><span style=\\"color:#0000FF\\"> -a</span></span>\\n<span class=\\"line\\"><span style=\\"color:#795E26\\">docker</span><span style=\\"color:#A31515\\"> images</span></span>\\n<span class=\\"line\\"><span style=\\"color:#795E26\\">docker</span><span style=\\"color:#A31515\\"> exec</span><span style=\\"color:#0000FF\\"> -it</span><span style=\\"color:#A31515\\"> 容器id</span><span style=\\"color:#A31515\\"> /bin/bash</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#008000\\">#容器过滤命令： </span></span>\\n<span class=\\"line\\"><span style=\\"color:#795E26\\">docker</span><span style=\\"color:#A31515\\"> ps</span><span style=\\"color:#000000\\"> | </span><span style=\\"color:#795E26\\">awk</span><span style=\\"color:#A31515\\"> '{print$1\\"\\\\t\\"$2}'</span></span>\\n<span class=\\"line\\"><span style=\\"color:#008000\\"># 删除镜像</span></span>\\n<span class=\\"line\\"><span style=\\"color:#795E26\\">docker</span><span style=\\"color:#A31515\\"> rmi</span><span style=\\"color:#A31515\\"> 镜像名称</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#008000\\"># 批量删除</span></span>\\n<span class=\\"line\\"><span style=\\"color:#795E26\\">docker</span><span style=\\"color:#A31515\\"> rmi</span><span style=\\"color:#000000\\"> $(</span><span style=\\"color:#795E26\\">docker</span><span style=\\"color:#A31515\\"> images</span><span style=\\"color:#000000\\"> | </span><span style=\\"color:#795E26\\">grep</span><span style=\\"color:#A31515\\"> \\"none\\"</span><span style=\\"color:#000000\\">) </span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#008000\\">## 查看镜像等占用</span></span>\\n<span class=\\"line\\"><span style=\\"color:#795E26\\">docker</span><span style=\\"color:#A31515\\"> systen</span><span style=\\"color:#A31515\\"> df</span><span style=\\"color:#000000\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"color:#008000\\">## 查看日志最后几行</span></span>\\n<span class=\\"line\\"><span style=\\"color:#795E26\\">docker</span><span style=\\"color:#A31515\\"> logs</span><span style=\\"color:#A31515\\"> 容器id</span><span style=\\"color:#0000FF\\">  --tail</span><span style=\\"color:#098658\\"> 100</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#795E26\\">docker</span><span style=\\"color:#A31515\\"> ps</span><span style=\\"color:#0000FF\\"> -a</span><span style=\\"color:#000000\\"> | </span><span style=\\"color:#795E26\\">grep</span><span style=\\"color:#A31515\\"> php</span><span style=\\"color:#000000\\"> | </span><span style=\\"color:#795E26\\">awk</span><span style=\\"color:#A31515\\"> '{print $1}'</span><span style=\\"color:#000000\\"> | </span><span style=\\"color:#795E26\\">xargs</span><span style=\\"color:#000000\\"> | </span><span style=\\"color:#795E26\\">docker</span><span style=\\"color:#A31515\\"> rm</span><span style=\\"color:#0000FF\\"> -f</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{w as comp,O as data};
