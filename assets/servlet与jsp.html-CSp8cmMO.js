import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as l,e as a}from"./app-hoN0JGLf.js";const e={},p=a(`<h1 id="servlet" tabindex="-1"><a class="header-anchor" href="#servlet"><span>servlet</span></a></h1><h2 id="jsp" tabindex="-1"><a class="header-anchor" href="#jsp"><span>jsp</span></a></h2><ul><li>java server pages,是一种基于可执行java代码的web技术，动态生成html</li><li>核心是生成 jsp servlet</li><li>需要在支持jsp servlet标准的服务器上运行，即需要jsp引擎或容器</li></ul><blockquote><p>jsp引擎</p></blockquote><ul><li>它将获取到的jsp页面，转化为jspServlet(包含生成html的代码)</li><li>JSP 引擎将 Servlet 编译成可执行类，并且将原始请求传递给 Servlet 引擎(容器)。</li><li>这里会判断jsp也i按对应的servlet是否已经生成</li></ul><h2 id="servlet-1" tabindex="-1"><a class="header-anchor" href="#servlet-1"><span>servlet</span></a></h2><p>它是sun设计的让java能够实现动态可交互网页，进入web领域的标准</p><p>Servlet没有main方法，所以，如果要执行，则需要在一个容器里面才能执行，这个容器就是为了支持Servlet的功能而存在，</p><p>Tomcat其实就是一个Servlet容器的实现。</p><ol><li>它是运行在web服务器(支持javaServlet规范)上的小型应用程序,主要处理来自客户端的请求，是一个浏览器和应用程序Controller交互的中间层。 如 <code>dispatcherServlet</code>或其他自定义servlet</li><li>它是处理请求的入口，以前web服务器处理请求的入口是web.xml(内部配置了请求路径和servlet的映射路径)</li><li>一次创建，到处服务，只处理一个路径的多次请求。</li></ol><blockquote><p>生命周期</p></blockquote><ol><li>初始化后调用 init () 方法。在第一次创建servlet时执行</li><li>Servlet 容器（即 Web 服务器）调用 service() 方法来处理客户端的请求</li><li>Servlet 销毁前调用 destroy() 方法</li><li>Servlet 是由 JVM 的垃圾回收器进行垃圾回收的</li></ol><blockquote><p>servletContext上下文</p></blockquote><blockquote><p>web.xml</p></blockquote><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#800000;">&lt;?xml</span><span style="color:#E50000;"> version</span><span style="color:#000000;">=</span><span style="color:#0000FF;">&quot;1.0&quot;</span><span style="color:#E50000;"> encoding</span><span style="color:#000000;">=</span><span style="color:#0000FF;">&quot;UTF-8&quot;</span><span style="color:#800000;">?&gt;</span><span style="color:#000000;">  </span></span>
<span class="line"><span style="color:#800000;">&lt;web-app&gt;</span><span style="color:#000000;">  </span></span>
<span class="line"><span style="color:#800000;">&lt;filter&gt;</span></span>
<span class="line"><span style="color:#800000;">  &lt;filter-name&gt;</span><span style="color:#000000;">LogFilter</span><span style="color:#800000;">&lt;/filter-name&gt;</span></span>
<span class="line"><span style="color:#800000;">  &lt;filter-class&gt;</span><span style="color:#000000;">com.runoob.test.LogFilter</span><span style="color:#800000;">&lt;/filter-class&gt;</span></span>
<span class="line"><span style="color:#800000;">  &lt;init-param&gt;</span></span>
<span class="line"><span style="color:#800000;">    &lt;param-name&gt;</span><span style="color:#000000;">Site</span><span style="color:#800000;">&lt;/param-name&gt;</span></span>
<span class="line"><span style="color:#800000;">    &lt;param-value&gt;</span><span style="color:#000000;">菜鸟教程</span><span style="color:#800000;">&lt;/param-value&gt;</span></span>
<span class="line"><span style="color:#800000;">  &lt;/init-param&gt;</span></span>
<span class="line"><span style="color:#800000;">&lt;/filter&gt;</span></span>
<span class="line"><span style="color:#800000;">&lt;filter-mapping&gt;</span></span>
<span class="line"><span style="color:#800000;">  &lt;filter-name&gt;</span><span style="color:#000000;">LogFilter</span><span style="color:#800000;">&lt;/filter-name&gt;</span></span>
<span class="line"><span style="color:#800000;">  &lt;url-pattern&gt;</span><span style="color:#000000;">/*</span><span style="color:#800000;">&lt;/url-pattern&gt;</span></span>
<span class="line"><span style="color:#800000;">&lt;/filter-mapping&gt;</span></span>
<span class="line"><span style="color:#800000;">&lt;servlet&gt;</span><span style="color:#000000;">  </span></span>
<span class="line"><span style="color:#008000;">  &lt;!-- 类名 --&gt;</span><span style="color:#000000;">  </span></span>
<span class="line"><span style="color:#800000;">  &lt;servlet-name&gt;</span><span style="color:#000000;">DisplayHeader</span><span style="color:#800000;">&lt;/servlet-name&gt;</span><span style="color:#000000;">  </span></span>
<span class="line"><span style="color:#008000;">  &lt;!-- 所在的包 --&gt;</span><span style="color:#000000;">  </span></span>
<span class="line"><span style="color:#800000;">  &lt;servlet-class&gt;</span><span style="color:#000000;">com.runoob.test.DisplayHeader</span><span style="color:#800000;">&lt;/servlet-class&gt;</span><span style="color:#000000;">  </span></span>
<span class="line"><span style="color:#800000;">&lt;/servlet&gt;</span><span style="color:#000000;">  </span></span>
<span class="line"><span style="color:#800000;">&lt;servlet-mapping&gt;</span><span style="color:#000000;">  </span></span>
<span class="line"><span style="color:#800000;">  &lt;servlet-name&gt;</span><span style="color:#000000;">DisplayHeader</span><span style="color:#800000;">&lt;/servlet-name&gt;</span><span style="color:#000000;">  </span></span>
<span class="line"><span style="color:#008000;">  &lt;!-- 访问的网址 --&gt;</span><span style="color:#000000;">  </span></span>
<span class="line"><span style="color:#800000;">  &lt;url-pattern&gt;</span><span style="color:#000000;">/TomcatTest/DisplayHeader</span><span style="color:#800000;">&lt;/url-pattern&gt;</span><span style="color:#000000;">  </span></span>
<span class="line"><span style="color:#800000;">&lt;/servlet-mapping&gt;</span><span style="color:#000000;">  </span></span>
<span class="line"><span style="color:#800000;">&lt;/web-app&gt;</span><span style="color:#000000;">  </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>过滤器实例</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">public</span><span style="color:#0000FF;"> class</span><span style="color:#267F99;"> LogFilter</span><span style="color:#0000FF;"> implements</span><span style="color:#267F99;"> Filter</span><span style="color:#000000;">  {</span></span>
<span class="line"><span style="color:#008000;">    //只执行一次</span></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#267F99;"> void</span><span style="color:#795E26;">  init</span><span style="color:#000000;">(</span><span style="color:#267F99;">FilterConfig</span><span style="color:#001080;"> config</span><span style="color:#000000;">) </span><span style="color:#0000FF;">throws</span><span style="color:#267F99;"> ServletException</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#008000;">        // 获取初始化参数</span></span>
<span class="line"><span style="color:#267F99;">        String</span><span style="color:#001080;"> site</span><span style="color:#000000;"> = </span><span style="color:#001080;">config</span><span style="color:#000000;">.</span><span style="color:#795E26;">getInitParameter</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;Site&quot;</span><span style="color:#000000;">); </span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">        // 输出初始化参数</span></span>
<span class="line"><span style="color:#001080;">        System</span><span style="color:#000000;">.</span><span style="color:#001080;">out</span><span style="color:#000000;">.</span><span style="color:#795E26;">println</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;网站名称: &quot;</span><span style="color:#000000;"> + site); </span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#267F99;"> void</span><span style="color:#795E26;">  doFilter</span><span style="color:#000000;">(</span><span style="color:#267F99;">ServletRequest</span><span style="color:#001080;"> request</span><span style="color:#000000;">, </span><span style="color:#267F99;">ServletResponse</span><span style="color:#001080;"> response</span><span style="color:#000000;">, </span><span style="color:#267F99;">FilterChain</span><span style="color:#001080;"> chain</span><span style="color:#000000;">) </span><span style="color:#0000FF;">throws</span><span style="color:#267F99;"> java.io.IOException</span><span style="color:#000000;">, </span><span style="color:#267F99;">ServletException</span><span style="color:#000000;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">        // 输出站点名称</span></span>
<span class="line"><span style="color:#001080;">        System</span><span style="color:#000000;">.</span><span style="color:#001080;">out</span><span style="color:#000000;">.</span><span style="color:#795E26;">println</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;站点网址：http://www.runoob.com&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">        // 把请求传回过滤链</span></span>
<span class="line"><span style="color:#001080;">        chain</span><span style="color:#000000;">.</span><span style="color:#795E26;">doFilter</span><span style="color:#000000;">(request,response);</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> destroy</span><span style="color:#000000;">( ){</span></span>
<span class="line"><span style="color:#008000;">        /* 在 Filter 实例被 Web 容器从服务移除之前调用 */</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>servlet实例</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">public</span><span style="color:#0000FF;"> class</span><span style="color:#267F99;"> HelloWorld</span><span style="color:#0000FF;"> extends</span><span style="color:#267F99;"> HttpServlet</span><span style="color:#000000;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#267F99;"> String</span><span style="color:#001080;"> message</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> init</span><span style="color:#000000;">() </span><span style="color:#0000FF;">throws</span><span style="color:#267F99;"> ServletException</span></span>
<span class="line"><span style="color:#000000;">    {</span></span>
<span class="line"><span style="color:#008000;">        // 执行必需的初始化</span></span>
<span class="line"><span style="color:#000000;">        message = </span><span style="color:#A31515;">&quot;Hello World&quot;</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> doGet</span><span style="color:#000000;">(</span><span style="color:#267F99;">HttpServletRequest</span><span style="color:#001080;"> request</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#267F99;">                      HttpServletResponse</span><span style="color:#001080;"> response</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#0000FF;">            throws</span><span style="color:#267F99;"> ServletException</span><span style="color:#000000;">, </span><span style="color:#267F99;">IOException</span></span>
<span class="line"><span style="color:#000000;">    {</span></span>
<span class="line"><span style="color:#008000;">        // 设置响应内容类型</span></span>
<span class="line"><span style="color:#001080;">        response</span><span style="color:#000000;">.</span><span style="color:#795E26;">setContentType</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;text/html&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">        // 实际的逻辑是在这里</span></span>
<span class="line"><span style="color:#267F99;">        PrintWriter</span><span style="color:#001080;"> out</span><span style="color:#000000;"> = </span><span style="color:#001080;">response</span><span style="color:#000000;">.</span><span style="color:#795E26;">getWriter</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#001080;">        out</span><span style="color:#000000;">.</span><span style="color:#795E26;">println</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;&lt;h1&gt;&quot;</span><span style="color:#000000;"> + message + </span><span style="color:#A31515;">&quot;&lt;/h1&gt;&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> destroy</span><span style="color:#000000;">()</span></span>
<span class="line"><span style="color:#000000;">    {</span></span>
<span class="line"><span style="color:#008000;">        // 什么也不做</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>自定义servlet出现异常时的处理器 servlet的cookie 保存在客户端的文本，用于保存一些身份信息</p></blockquote><ol><li>在后端设置cookie，返回响应</li><li>前后端分离的项目，使用js在客户端设置</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">public</span><span style="color:#000000;"> Example {</span></span>
<span class="line"><span style="color:#267F99;">        Cookie</span><span style="color:#001080;"> name</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> Cookie</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;name&quot;</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#001080;">        URLEncoder</span><span style="color:#000000;">.</span><span style="color:#795E26;">encode</span><span style="color:#000000;">(</span><span style="color:#001080;">request</span><span style="color:#000000;">.</span><span style="color:#795E26;">getParameter</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;name&quot;</span><span style="color:#000000;">), </span><span style="color:#A31515;">&quot;UTF-8&quot;</span><span style="color:#000000;">)); </span><span style="color:#008000;">// 中文转码</span></span>
<span class="line"><span style="color:#267F99;">        Cookie</span><span style="color:#001080;"> url</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> Cookie</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;url&quot;</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#001080;">        request</span><span style="color:#000000;">.</span><span style="color:#795E26;">getParameter</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;url&quot;</span><span style="color:#000000;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">        // 为两个 Cookie 设置过期日期为 24 小时后</span></span>
<span class="line"><span style="color:#001080;">        name</span><span style="color:#000000;">.</span><span style="color:#795E26;">setMaxAge</span><span style="color:#000000;">(</span><span style="color:#098658;">60</span><span style="color:#000000;">*</span><span style="color:#098658;">60</span><span style="color:#000000;">*</span><span style="color:#098658;">24</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#001080;">        url</span><span style="color:#000000;">.</span><span style="color:#795E26;">setMaxAge</span><span style="color:#000000;">(</span><span style="color:#098658;">60</span><span style="color:#000000;">*</span><span style="color:#098658;">60</span><span style="color:#000000;">*</span><span style="color:#098658;">24</span><span style="color:#000000;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">        // 在响应头中添加两个 Cookie</span></span>
<span class="line"><span style="color:#001080;">        response</span><span style="color:#000000;">.</span><span style="color:#795E26;">addCookie</span><span style="color:#000000;">( name );</span></span>
<span class="line"><span style="color:#001080;">        response</span><span style="color:#000000;">.</span><span style="color:#795E26;">addCookie</span><span style="color:#000000;">( url );</span></span>
<span class="line"><span style="color:#000000;">        </span></span>
<span class="line"><span style="color:#000000;">        </span></span>
<span class="line"><span style="color:#008000;">        // 读取cookie</span></span>
<span class="line"><span style="color:#267F99;">        Cookie</span><span style="color:#001080;"> cookie</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">null</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#267F99;">        Cookie</span><span style="color:#000000;">[] </span><span style="color:#001080;">cookies</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">null</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#008000;">        // 获取与该域相关的 Cookie 的数组</span></span>
<span class="line"><span style="color:#000000;">        cookies = </span><span style="color:#001080;">request</span><span style="color:#000000;">.</span><span style="color:#795E26;">getCookies</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#000000;">        </span></span>
<span class="line"><span style="color:#008000;">        //删除cookie        </span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>servlet Session跟踪</p></blockquote><ul><li>http是一个无状态协议，不会记录上一次请求记录</li><li>httpSession接口，Servlet 容器使用这个接口来创建<code>一个 HTTP 客户端和 HTTP </code>服务器之间的 session 会话。</li><li>会话持续一个指定的时间段，跨多个连接或页面请求。</li><li>核心是客户端和服务器之间</li><li>生命周期是servlet容器</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">public</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> doGet</span><span style="color:#000000;">(</span><span style="color:#267F99;">HttpServletRequest</span><span style="color:#000000;"> request, </span><span style="color:#267F99;">HttpServletResponse</span><span style="color:#000000;"> response) throws ServletException, </span><span style="color:#267F99;">IOException</span></span>
<span class="line"><span style="color:#000000;">        {</span></span>
<span class="line"><span style="color:#008000;">        // 如果不存在 session 会话，则创建一个 session 对象</span></span>
<span class="line"><span style="color:#008000;">        //request.getSession(false)使用已有的会话对象</span></span>
<span class="line"><span style="color:#267F99;">        HttpSession</span><span style="color:#001080;"> session</span><span style="color:#000000;">=</span><span style="color:#001080;">request</span><span style="color:#000000;">.</span><span style="color:#795E26;">getSession</span><span style="color:#000000;">(</span><span style="color:#0000FF;">true</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#008000;">        // 获取 session 创建时间</span></span>
<span class="line"><span style="color:#267F99;">        Date</span><span style="color:#001080;"> createTime</span><span style="color:#000000;">=</span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> Date</span><span style="color:#000000;">(</span><span style="color:#001080;">session</span><span style="color:#000000;">.</span><span style="color:#795E26;">getCreationTime</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#008000;">        // 获取该网页的最后一次访问时间</span></span>
<span class="line"><span style="color:#267F99;">        Date</span><span style="color:#001080;"> lastAccessTime</span><span style="color:#000000;">=</span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> Date</span><span style="color:#000000;">(</span><span style="color:#001080;">session</span><span style="color:#000000;">.</span><span style="color:#795E26;">getLastAccessedTime</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#000000;">        </span></span>
<span class="line"><span style="color:#008000;">        // public void invalidate() 方法来丢弃整个 session 会话</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25),o=[p];function t(r,i){return n(),l("div",null,o)}const v=s(e,[["render",t],["__file","servlet与jsp.html.vue"]]),d=JSON.parse('{"path":"/note/web/servlet%E4%B8%8Ejsp.html","title":"servlet","lang":"zh-CN","frontmatter":{"category":["web"],"description":"servlet jsp java server pages,是一种基于可执行java代码的web技术，动态生成html 核心是生成 jsp servlet 需要在支持jsp servlet标准的服务器上运行，即需要jsp引擎或容器 jsp引擎 它将获取到的jsp页面，转化为jspServlet(包含生成html的代码) JSP 引擎将 Servlet ...","head":[["meta",{"property":"og:url","content":"https://wherywan.github.io/note/web/servlet%E4%B8%8Ejsp.html"}],["meta",{"property":"og:site_name","content":"HONG_JI"}],["meta",{"property":"og:title","content":"servlet"}],["meta",{"property":"og:description","content":"servlet jsp java server pages,是一种基于可执行java代码的web技术，动态生成html 核心是生成 jsp servlet 需要在支持jsp servlet标准的服务器上运行，即需要jsp引擎或容器 jsp引擎 它将获取到的jsp页面，转化为jspServlet(包含生成html的代码) JSP 引擎将 Servlet ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-08T03:26:07.000Z"}],["meta",{"property":"article:author","content":"wanhongji"}],["meta",{"property":"article:modified_time","content":"2023-09-08T03:26:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"servlet\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-08T03:26:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wanhongji\\"}]}"]]},"headers":[{"level":2,"title":"jsp","slug":"jsp","link":"#jsp","children":[]},{"level":2,"title":"servlet","slug":"servlet-1","link":"#servlet-1","children":[]}],"git":{"createdTime":1659879518000,"updatedTime":1694143567000,"contributors":[{"name":"wanhongji","email":"wherywan@163.com","commits":1}]},"readingTime":{"minutes":3.47,"words":1040},"filePathRelative":"note/web/servlet与jsp.md","localizedDate":"2022年8月7日","excerpt":"\\n<h2>jsp</h2>\\n<ul>\\n<li>java server pages,是一种基于可执行java代码的web技术，动态生成html</li>\\n<li>核心是生成 jsp servlet</li>\\n<li>需要在支持jsp servlet标准的服务器上运行，即需要jsp引擎或容器</li>\\n</ul>\\n<blockquote>\\n<p>jsp引擎</p>\\n</blockquote>\\n<ul>\\n<li>它将获取到的jsp页面，转化为jspServlet(包含生成html的代码)</li>\\n<li>JSP 引擎将 Servlet 编译成可执行类，并且将原始请求传递给 Servlet 引擎(容器)。</li>\\n<li>这里会判断jsp也i按对应的servlet是否已经生成</li>\\n</ul>","autoDesc":true}');export{v as comp,d as data};
