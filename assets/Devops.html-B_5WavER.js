import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as a,e as o}from"./app-hoN0JGLf.js";const n={},i=o('<h1 id="devops" tabindex="-1"><a class="header-anchor" href="#devops"><span>devops</span></a></h1><p><code>DevOps </code>强调的是高效组织团队之间如何通过自动化的工具协作和沟通来完成软件的生命周期管理， <code>从而更快、更频繁地交付更稳定的软件</code>。</p><ul><li>development</li><li>operation</li><li>quality assurance</li></ul><h2 id="ci-cd-流水线" tabindex="-1"><a class="header-anchor" href="#ci-cd-流水线"><span>ci/cd 流水线</span></a></h2><p>核心: 自动化</p><blockquote><p>持续集成</p></blockquote><p>自动编译、构建打包、部署、测试。 根据测试结果，我们可以确定新代码和原有代码能否正确地集成在⼀起。</p><blockquote><p>持续交付</p></blockquote><p>频繁地将软件的新版本，交付给质量团队或者⽤户，以供评审。如果评审通过，代码就进⼊⽣产阶段。</p><blockquote><p>持续部署</p></blockquote><p>代码在任何时刻都是可部署的，可以进⼊⽣产阶段。 评审结束后，部署到生产环境</p><h2 id="自动化工具" tabindex="-1"><a class="header-anchor" href="#自动化工具"><span>自动化工具</span></a></h2><h3 id="jenkins" tabindex="-1"><a class="header-anchor" href="#jenkins"><span>jenkins</span></a></h3><ul><li>拉取代码构建，打成jar包，构建镜像，推送到远程仓库(jenkinsFile实现持续集成)</li><li>svn拉取代码构建打jar包推送到gitlab仓库</li></ul><h3 id="gitlab" tabindex="-1"><a class="header-anchor" href="#gitlab"><span>gitlab</span></a></h3><p>根据提交记录自动触发 使用其内部集成的持续集成工具，构建镜像、部署、推送远程仓库</p><h3 id="docker-compose" tabindex="-1"><a class="header-anchor" href="#docker-compose"><span>docker-compose</span></a></h3><p>管理应用的多个容器，即应用容器化部署 启动，停止容器</p><h3 id="harbor" tabindex="-1"><a class="header-anchor" href="#harbor"><span>harbor</span></a></h3><p>远程镜像服务器 以项目形式管理镜像</p><h3 id="groovy-script" tabindex="-1"><a class="header-anchor" href="#groovy-script"><span>groovy script</span></a></h3><h3 id="jmeter压测" tabindex="-1"><a class="header-anchor" href="#jmeter压测"><span>jmeter压测</span></a></h3><h3 id="apifox" tabindex="-1"><a class="header-anchor" href="#apifox"><span>apiFox</span></a></h3>',23),r=[i];function l(p,c){return t(),a("div",null,r)}const h=e(n,[["render",l],["__file","Devops.html.vue"]]),m=JSON.parse('{"path":"/note/web/Devops.html","title":"devops","lang":"zh-CN","frontmatter":{"category":["web"],"description":"devops DevOps 强调的是高效组织团队之间如何通过自动化的工具协作和沟通来完成软件的生命周期管理， 从而更快、更频繁地交付更稳定的软件。 development operation quality assurance ci/cd 流水线 核心: 自动化 持续集成 自动编译、构建打包、部署、测试。 根据测试结果，我们可以确定新代码和原有代码能否...","head":[["meta",{"property":"og:url","content":"https://wherywan.github.io/note/web/Devops.html"}],["meta",{"property":"og:site_name","content":"HONG_JI"}],["meta",{"property":"og:title","content":"devops"}],["meta",{"property":"og:description","content":"devops DevOps 强调的是高效组织团队之间如何通过自动化的工具协作和沟通来完成软件的生命周期管理， 从而更快、更频繁地交付更稳定的软件。 development operation quality assurance ci/cd 流水线 核心: 自动化 持续集成 自动编译、构建打包、部署、测试。 根据测试结果，我们可以确定新代码和原有代码能否..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-08T03:26:07.000Z"}],["meta",{"property":"article:author","content":"wanhongji"}],["meta",{"property":"article:modified_time","content":"2023-09-08T03:26:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"devops\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-08T03:26:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wanhongji\\"}]}"]]},"headers":[{"level":2,"title":"ci/cd 流水线","slug":"ci-cd-流水线","link":"#ci-cd-流水线","children":[]},{"level":2,"title":"自动化工具","slug":"自动化工具","link":"#自动化工具","children":[{"level":3,"title":"jenkins","slug":"jenkins","link":"#jenkins","children":[]},{"level":3,"title":"gitlab","slug":"gitlab","link":"#gitlab","children":[]},{"level":3,"title":"docker-compose","slug":"docker-compose","link":"#docker-compose","children":[]},{"level":3,"title":"harbor","slug":"harbor","link":"#harbor","children":[]},{"level":3,"title":"groovy script","slug":"groovy-script","link":"#groovy-script","children":[]},{"level":3,"title":"jmeter压测","slug":"jmeter压测","link":"#jmeter压测","children":[]},{"level":3,"title":"apiFox","slug":"apifox","link":"#apifox","children":[]}]}],"git":{"createdTime":1660903843000,"updatedTime":1694143567000,"contributors":[{"name":"wanhongji","email":"wherywan@163.com","commits":1}]},"readingTime":{"minutes":1.09,"words":328},"filePathRelative":"note/web/Devops.md","localizedDate":"2022年8月19日","excerpt":"\\n<p><code>DevOps </code>强调的是高效组织团队之间如何通过自动化的工具协作和沟通来完成软件的生命周期管理，\\n<code>从而更快、更频繁地交付更稳定的软件</code>。</p>\\n<ul>\\n<li>development</li>\\n<li>operation</li>\\n<li>quality assurance</li>\\n</ul>\\n<h2>ci/cd 流水线</h2>\\n<p>核心: 自动化</p>\\n<blockquote>\\n<p>持续集成</p>\\n</blockquote>\\n<p>自动编译、构建打包、部署、测试。\\n根据测试结果，我们可以确定新代码和原有代码能否正确地集成在⼀起。</p>","autoDesc":true}');export{h as comp,m as data};
