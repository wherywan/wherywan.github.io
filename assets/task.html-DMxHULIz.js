import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as a,e as l}from"./app-hoN0JGLf.js";const e={},p=l(`<h1 id="task" tabindex="-1"><a class="header-anchor" href="#task"><span>task</span></a></h1><h2 id="实现方式" tabindex="-1"><a class="header-anchor" href="#实现方式"><span>实现方式</span></a></h2><ul><li>springboot方式</li><li>quartz</li><li>xxl-job</li></ul><h2 id="通配符" tabindex="-1"><a class="header-anchor" href="#通配符"><span>通配符</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>? 表示不指定值，即不关心某个字段的取值时使用。需要注意的是，月份中的日期和星期可能会起冲突，因此在配置时这两个得有一个是 ?</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>* 表示所有值，例如:在秒的字段上设置 *,表示每一秒都会触发</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>, 用来分开多个值，例如在周字段上设置 “MON,WED,FRI” 表示周一，周三和周五触发</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>- 表示区间，例如在秒上设置 “10-12”,表示 10,11,12秒都会触发</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>/ 用于递增触发，如在秒上面设置”5/15” 表示从5秒开始，每增15秒触发(5,20,35,50)</span></span>
<span class="line"><span> </span></span>
<span class="line"><span># 序号(表示每月的第几个周几)，例如在周字段上设置”6#3”表示在每月的第三个周六，(用 在母亲节和父亲节再合适不过了)</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>周字段的设置，若使用英文字母是不区分大小写的 ，即 MON 与mon相同</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>L 表示最后的意思。在日字段设置上，表示当月的最后一天(依据当前月份，如果是二月还会自动判断是否是润年), 在周字段上表示星期六，相当于”7”或”SAT”（注意周日算是第一天）。如果在”L”前加上数字，则表示该数据的最后一个。例如在周字段上设置”6L”这样的格式,则表示”本月最后一个星期五”</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>W 表示离指定日期的最近工作日(周一至周五)，例如在日字段上设置”15W”，表示离每月15号最近的那个工作日触发。如果15号正好是周六，则找最近的周五(14号)触发, 如果15号是周未，则找最近的下周一(16号)触发，如果15号正好在工作日(周一至周五)，则就在该天触发。如果指定格式为 “1W”,它则表示每月1号往后最近的工作日触发。如果1号正是周六，则将在3号下周一触发。(注，”W”前只能设置具体的数字,不允许区间”-“)</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>L 和 W 可以一组合使用。如果在日字段上设置”LW”,则表示在本月的最后一个工作日触发(一般指发工资 )</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>样例</p></blockquote><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>    &quot;0/10 * * * * ?&quot; 每10秒触发 </span></span>
<span class="line"><span> </span></span>
<span class="line"><span>    &quot;0 0/3 * * * ?&quot; 每隔1分钟执行一次 </span></span>
<span class="line"><span> </span></span>
<span class="line"><span>    &quot;0 0 08 * * ?&quot; 每天上午8点触发</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>    &quot;0 15 10 ? * *&quot; 每天上午10:15触发</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>    &quot;0 15 10 * * ?&quot; 每天上午10:15触发</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>    &quot;0 15 10 * * ? *&quot; 每天上午10:15触发</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>    &quot;0 15 10 * * ? 2005&quot; 2005年的每天上午10:15触发</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>    &quot;0 * 14 * * ?&quot; 在每天下午2点到下午2:59期间的每1分钟触发</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>    &quot;0 0/5 14 * * ?&quot; 在每天下午2点到下午2:55期间的每5分钟触发</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>    &quot;0 0/5 14-18 * * ?&quot; 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>    &quot;0 0-5 14 * * ?&quot; 在每天下午2点到下午2:05期间的每1分钟触发</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>    &quot;0 10,44 14 ? 3 WED&quot; 每年三月的星期三的下午2:10和2:44触发</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>    &quot;0 15 10 ? * MON-FRI&quot; 周一至周五的上午10:15触发</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>    &quot;0 15 10 15 * ?&quot; 每月15日上午10:15触发</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>    &quot;0 15 10 L * ?&quot; 每月最后一日的上午10:15触发</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>    &quot;0 15 10 ? * 6L&quot; 每月的最后一个星期五上午10:15触发</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>    &quot;0 15 10 ? * 6L 2009-2019&quot; 2009年至2019年的每月的最后一个星期五上午10:15触发</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>    &quot;0 15 10 ? * 6#3&quot; 每月的第三个星期五上午10:15触发 </span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="springboot方式" tabindex="-1"><a class="header-anchor" href="#springboot方式"><span>springboot方式</span></a></h3><blockquote><p>基于注解</p></blockquote><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>@Scheduled标注在方法上，并使用@EnableScheduling开启定时任务</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>基于接口，动态获取触发时间，可配置</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#008000;">/**</span></span>
<span class="line"><span style="color:#008000;"> * </span><span style="color:#0000FF;">@author</span><span style="color:#008000;"> wanhongji</span></span>
<span class="line"><span style="color:#008000;"> * </span><span style="color:#0000FF;">@since</span><span style="color:#008000;"> 2022/12/19</span></span>
<span class="line"><span style="color:#008000;"> * 可配置定时时间的定时任务</span></span>
<span class="line"><span style="color:#008000;"> */</span></span>
<span class="line"><span style="color:#000000;">@</span><span style="color:#267F99;">Configuration</span></span>
<span class="line"><span style="color:#000000;">@</span><span style="color:#267F99;">EnableScheduling</span></span>
<span class="line"><span style="color:#000000;">@</span><span style="color:#267F99;">Slf4j</span></span>
<span class="line"><span style="color:#0000FF;">public</span><span style="color:#0000FF;"> class</span><span style="color:#267F99;"> CustomScheduledTask</span><span style="color:#0000FF;"> implements</span><span style="color:#267F99;"> SchedulingConfigurer</span><span style="color:#000000;"> {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">    //cron表达式</span></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#267F99;"> String</span><span style="color:#795E26;"> getCron</span><span style="color:#000000;">() {</span></span>
<span class="line"><span style="color:#AF00DB;">        return</span><span style="color:#A31515;"> &quot;0 0/1 * * * ?&quot;</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">    @</span><span style="color:#267F99;">Override</span></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> configureTasks</span><span style="color:#000000;">(</span><span style="color:#267F99;">ScheduledTaskRegistrar</span><span style="color:#001080;"> taskRegistrar</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">        taskRegistrar</span><span style="color:#000000;">.</span><span style="color:#795E26;">addTriggerTask</span><span style="color:#000000;">(() </span><span style="color:#0000FF;">-&gt;</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#001080;">            log</span><span style="color:#000000;">.</span><span style="color:#795E26;">info</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;执行定时任务:{}&quot;</span><span style="color:#000000;">, </span><span style="color:#001080;">DateUtil</span><span style="color:#000000;">.</span><span style="color:#795E26;">formatDateTime</span><span style="color:#000000;">(</span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> Date</span><span style="color:#000000;">()));</span></span>
<span class="line"><span style="color:#001080;">            System</span><span style="color:#000000;">.</span><span style="color:#001080;">out</span><span style="color:#000000;">.</span><span style="color:#795E26;">println</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;df&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">        }, triggerContext </span><span style="color:#0000FF;">-&gt;</span><span style="color:#AF00DB;"> new</span><span style="color:#795E26;"> CronTrigger</span><span style="color:#000000;">(</span><span style="color:#795E26;">getCron</span><span style="color:#000000;">()).</span><span style="color:#795E26;">nextExecutionTime</span><span style="color:#000000;">(triggerContext));</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="quartz" tabindex="-1"><a class="header-anchor" href="#quartz"><span>Quartz</span></a></h3><blockquote><p>添加依赖</p></blockquote><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span> &lt;dependency&gt;</span></span>
<span class="line"><span>            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span>            &lt;artifactId&gt;spring-boot-starter-quartz&lt;/artifactId&gt;</span></span>
<span class="line"><span>        &lt;/dependency&gt;</span></span>
<span class="line"><span>#开启@EnableScheduling注解</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Quartz 在使用过程中，有两个关键概念，</p><ul><li>一个是 JobDetail（要做的事情），要定义 JobDetail，需要先自定义Job</li><li>一个是 Trigger触发器（什么时候做）</li></ul><blockquote><p>Job 的定义有两种方式：</p></blockquote><p>直接定义一个Bean，不支持传参。</p><p>定义一个Bean继承 QuartzJobBean类，并实现默认的方法，支持传参，任务启动时，executeInternal 方法将会被执行。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#000000;">@</span><span style="color:#267F99;">Component</span></span>
<span class="line"><span style="color:#0000FF;">public</span><span style="color:#0000FF;"> class</span><span style="color:#267F99;"> MyJob1</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> myTask1</span><span style="color:#000000;">() {</span></span>
<span class="line"><span style="color:#001080;">        System</span><span style="color:#000000;">.</span><span style="color:#001080;">out</span><span style="color:#000000;">.</span><span style="color:#795E26;">println</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;MyJob1 myTask1任务开始 : &quot;</span><span style="color:#000000;"> + </span><span style="color:#001080;">LocalDateTime</span><span style="color:#000000;">.</span><span style="color:#795E26;">now</span><span style="color:#000000;">().</span><span style="color:#795E26;">toLocalTime</span><span style="color:#000000;">() + </span><span style="color:#A31515;">&quot;，线程：&quot;</span><span style="color:#000000;"> + </span><span style="color:#001080;">Thread</span><span style="color:#000000;">.</span><span style="color:#795E26;">currentThread</span><span style="color:#000000;">().</span><span style="color:#795E26;">getName</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">@</span><span style="color:#267F99;">Component</span></span>
<span class="line"><span style="color:#0000FF;">public</span><span style="color:#0000FF;"> class</span><span style="color:#267F99;"> MyJob2</span><span style="color:#0000FF;"> extends</span><span style="color:#267F99;"> QuartzJobBean</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#008000;">    //    @Autowired  这里注入方式是不行的，报NPE</span></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#267F99;"> UserService</span><span style="color:#001080;"> userService</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#267F99;"> Long</span><span style="color:#001080;"> id</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">    @</span><span style="color:#267F99;">Override</span></span>
<span class="line"><span style="color:#0000FF;">    protected</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> executeInternal</span><span style="color:#000000;">(</span><span style="color:#267F99;">JobExecutionContext</span><span style="color:#001080;"> jobExecutionContext</span><span style="color:#000000;">) </span><span style="color:#0000FF;">throws</span><span style="color:#267F99;"> JobExecutionException</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#008000;">        // 处理相应的注入service业务</span></span>
<span class="line"><span style="color:#267F99;">        String</span><span style="color:#001080;"> data</span><span style="color:#000000;"> = </span><span style="color:#001080;">userService</span><span style="color:#000000;">.</span><span style="color:#795E26;">get</span><span style="color:#000000;">(id);</span></span>
<span class="line"><span style="color:#001080;">        System</span><span style="color:#000000;">.</span><span style="color:#001080;">out</span><span style="color:#000000;">.</span><span style="color:#795E26;">println</span><span style="color:#000000;">(data);</span></span>
<span class="line"><span style="color:#001080;">        System</span><span style="color:#000000;">.</span><span style="color:#001080;">out</span><span style="color:#000000;">.</span><span style="color:#795E26;">println</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;MyJob2 任务开始 : &quot;</span><span style="color:#000000;"> + </span><span style="color:#001080;">LocalDateTime</span><span style="color:#000000;">.</span><span style="color:#795E26;">now</span><span style="color:#000000;">().</span><span style="color:#795E26;">toLocalTime</span><span style="color:#000000;">() + </span><span style="color:#A31515;">&quot;，线程：&quot;</span><span style="color:#000000;"> + </span><span style="color:#001080;">Thread</span><span style="color:#000000;">.</span><span style="color:#795E26;">currentThread</span><span style="color:#000000;">().</span><span style="color:#795E26;">getName</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#267F99;"> UserService</span><span style="color:#795E26;"> getUserService</span><span style="color:#000000;">() {</span></span>
<span class="line"><span style="color:#AF00DB;">        return</span><span style="color:#000000;"> userService;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> setUserService</span><span style="color:#000000;">(</span><span style="color:#267F99;">UserService</span><span style="color:#001080;"> userService</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#0000FF;">        this</span><span style="color:#000000;">.</span><span style="color:#001080;">userService</span><span style="color:#000000;"> = userService;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#267F99;"> Long</span><span style="color:#795E26;"> getId</span><span style="color:#000000;">() {</span></span>
<span class="line"><span style="color:#AF00DB;">        return</span><span style="color:#000000;"> id;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> setId</span><span style="color:#000000;">(</span><span style="color:#267F99;">Long</span><span style="color:#001080;"> id</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#0000FF;">        this</span><span style="color:#000000;">.</span><span style="color:#001080;">id</span><span style="color:#000000;"> = id;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>创建配置类，配置 JobDetail， Trigger 触发器</p></blockquote><p>JobDetail 的配置有两种方式：</p><ol><li>MethodInvokingJobDetailFactoryBean：可以配置目标 Bean 的名字和目标方法的名字，这种方式不支持传参。</li><li>JobDetailFactoryBean：任务类继承自 QuartzJobBean ，这种方式支持传参，将参数封装在 JobDataMap 中进行传递。</li></ol><p>Quartz 中定义了多个 Trigger触发器，，这里使用下 SimpleTrigger 和 CronTrigger 。</p><ol><li>SimpleTrigger触发器： 有点类似于上面的 @Scheduled 的基本用法。</li><li>CronTrigger触发器：支持 cron 表达式来配置任务执行时间</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#000000;">@</span><span style="color:#267F99;">Configuration</span></span>
<span class="line"><span style="color:#0000FF;">public</span><span style="color:#0000FF;"> class</span><span style="color:#267F99;"> QuartzConfig</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#008000;">    // MyJob2 需要 userService， 这两个都可以注入</span></span>
<span class="line"><span style="color:#008000;">//    @Bean</span></span>
<span class="line"><span style="color:#008000;">//    UserService userService() {</span></span>
<span class="line"><span style="color:#008000;">//        return new UserService();</span></span>
<span class="line"><span style="color:#008000;">//    }</span></span>
<span class="line"><span style="color:#000000;">    @</span><span style="color:#267F99;">Autowired</span></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#267F99;"> UserService</span><span style="color:#001080;"> userService</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#008000;">    // MyJob1任务配置</span></span>
<span class="line"><span style="color:#000000;">    @</span><span style="color:#267F99;">Bean</span></span>
<span class="line"><span style="color:#267F99;">    MethodInvokingJobDetailFactoryBean</span><span style="color:#795E26;"> methodInvokingJobDetailFactoryBean</span><span style="color:#000000;">() {</span></span>
<span class="line"><span style="color:#267F99;">        MethodInvokingJobDetailFactoryBean</span><span style="color:#001080;"> bean</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> MethodInvokingJobDetailFactoryBean</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#001080;">        bean</span><span style="color:#000000;">.</span><span style="color:#795E26;">setTargetBeanName</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;myJob1&quot;</span><span style="color:#000000;">); </span><span style="color:#008000;">// 首字母小写</span></span>
<span class="line"><span style="color:#001080;">        bean</span><span style="color:#000000;">.</span><span style="color:#795E26;">setTargetMethod</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;myTask1&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#AF00DB;">        return</span><span style="color:#000000;"> bean;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#000000;">    @</span><span style="color:#267F99;">Bean</span></span>
<span class="line"><span style="color:#267F99;">    SimpleTriggerFactoryBean</span><span style="color:#795E26;"> simpleTriggerFactoryBean</span><span style="color:#000000;">() {</span></span>
<span class="line"><span style="color:#267F99;">        SimpleTriggerFactoryBean</span><span style="color:#001080;"> bean</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> SimpleTriggerFactoryBean</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#001080;">        bean</span><span style="color:#000000;">.</span><span style="color:#795E26;">setStartTime</span><span style="color:#000000;">(</span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> Date</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#001080;">        bean</span><span style="color:#000000;">.</span><span style="color:#795E26;">setRepeatCount</span><span style="color:#000000;">(</span><span style="color:#098658;">5</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#001080;">        bean</span><span style="color:#000000;">.</span><span style="color:#795E26;">setRepeatInterval</span><span style="color:#000000;">(</span><span style="color:#098658;">2000</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#001080;">        bean</span><span style="color:#000000;">.</span><span style="color:#795E26;">setJobDetail</span><span style="color:#000000;">(</span><span style="color:#795E26;">methodInvokingJobDetailFactoryBean</span><span style="color:#000000;">().</span><span style="color:#795E26;">getObject</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#AF00DB;">        return</span><span style="color:#000000;"> bean;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#008000;">    // MyJob2任务配置</span></span>
<span class="line"><span style="color:#008000;">    // 传参</span></span>
<span class="line"><span style="color:#000000;">    @</span><span style="color:#267F99;">Bean</span></span>
<span class="line"><span style="color:#267F99;">    JobDetailFactoryBean</span><span style="color:#795E26;"> jobDetailFactoryBean</span><span style="color:#000000;">() {</span></span>
<span class="line"><span style="color:#267F99;">        JobDetailFactoryBean</span><span style="color:#001080;"> bean</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> JobDetailFactoryBean</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#001080;">        bean</span><span style="color:#000000;">.</span><span style="color:#795E26;">setJobClass</span><span style="color:#000000;">(</span><span style="color:#001080;">MyJob2</span><span style="color:#000000;">.</span><span style="color:#001080;">class</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#267F99;">        JobDataMap</span><span style="color:#001080;"> map</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> JobDataMap</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#001080;">        map</span><span style="color:#000000;">.</span><span style="color:#795E26;">put</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;userService&quot;</span><span style="color:#000000;">, userService);</span></span>
<span class="line"><span style="color:#001080;">        map</span><span style="color:#000000;">.</span><span style="color:#795E26;">put</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;id&quot;</span><span style="color:#000000;">, </span><span style="color:#098658;">101</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#001080;">        bean</span><span style="color:#000000;">.</span><span style="color:#795E26;">setJobDataMap</span><span style="color:#000000;">(map);</span></span>
<span class="line"><span style="color:#AF00DB;">        return</span><span style="color:#000000;"> bean;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#000000;">    @</span><span style="color:#267F99;">Bean</span></span>
<span class="line"><span style="color:#267F99;">    CronTriggerFactoryBean</span><span style="color:#795E26;"> cronTriggerFactoryBean</span><span style="color:#000000;">() {</span></span>
<span class="line"><span style="color:#267F99;">        CronTriggerFactoryBean</span><span style="color:#001080;"> bean</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> CronTriggerFactoryBean</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#001080;">        bean</span><span style="color:#000000;">.</span><span style="color:#795E26;">setCronExpression</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;0/5 * * * * ?&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#001080;">        bean</span><span style="color:#000000;">.</span><span style="color:#795E26;">setJobDetail</span><span style="color:#000000;">(</span><span style="color:#795E26;">jobDetailFactoryBean</span><span style="color:#000000;">().</span><span style="color:#795E26;">getObject</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#AF00DB;">        return</span><span style="color:#000000;"> bean;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#008000;">    // 添加 MyJob1和MyJob2的触发器</span></span>
<span class="line"><span style="color:#000000;">    @</span><span style="color:#267F99;">Bean</span></span>
<span class="line"><span style="color:#267F99;">    SchedulerFactoryBean</span><span style="color:#795E26;"> schedulerFactoryBean</span><span style="color:#000000;">() {</span></span>
<span class="line"><span style="color:#267F99;">        SchedulerFactoryBean</span><span style="color:#001080;"> bean</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> SchedulerFactoryBean</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#001080;">        bean</span><span style="color:#000000;">.</span><span style="color:#795E26;">setTriggers</span><span style="color:#000000;">(</span><span style="color:#795E26;">cronTriggerFactoryBean</span><span style="color:#000000;">().</span><span style="color:#795E26;">getObject</span><span style="color:#000000;">(), </span><span style="color:#795E26;">simpleTriggerFactoryBean</span><span style="color:#000000;">().</span><span style="color:#795E26;">getObject</span><span style="color:#000000;">());</span></span>
<span class="line"><span style="color:#AF00DB;">        return</span><span style="color:#000000;"> bean;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27),o=[p];function i(c,r){return n(),a("div",null,o)}const v=s(e,[["render",i],["__file","task.html.vue"]]),y=JSON.parse('{"path":"/note/web/task.html","title":"task","lang":"zh-CN","frontmatter":{"category":["web"],"description":"task 实现方式 springboot方式 quartz xxl-job 通配符 样例 springboot方式 基于注解 基于接口，动态获取触发时间，可配置 Quartz 添加依赖 Quartz 在使用过程中，有两个关键概念， 一个是 JobDetail（要做的事情），要定义 JobDetail，需要先自定义Job 一个是 Trigger触发器（什...","head":[["meta",{"property":"og:url","content":"https://wherywan.github.io/note/web/task.html"}],["meta",{"property":"og:site_name","content":"HONG_JI"}],["meta",{"property":"og:title","content":"task"}],["meta",{"property":"og:description","content":"task 实现方式 springboot方式 quartz xxl-job 通配符 样例 springboot方式 基于注解 基于接口，动态获取触发时间，可配置 Quartz 添加依赖 Quartz 在使用过程中，有两个关键概念， 一个是 JobDetail（要做的事情），要定义 JobDetail，需要先自定义Job 一个是 Trigger触发器（什..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-08T03:26:07.000Z"}],["meta",{"property":"article:author","content":"wanhongji"}],["meta",{"property":"article:modified_time","content":"2023-09-08T03:26:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"task\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-08T03:26:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wanhongji\\"}]}"]]},"headers":[{"level":2,"title":"实现方式","slug":"实现方式","link":"#实现方式","children":[]},{"level":2,"title":"通配符","slug":"通配符","link":"#通配符","children":[{"level":3,"title":"springboot方式","slug":"springboot方式","link":"#springboot方式","children":[]},{"level":3,"title":"Quartz","slug":"quartz","link":"#quartz","children":[]}]}],"git":{"createdTime":1671420578000,"updatedTime":1694143567000,"contributors":[{"name":"wanhongji","email":"wherywan@163.com","commits":1}]},"readingTime":{"minutes":5.08,"words":1525},"filePathRelative":"note/web/task.md","localizedDate":"2022年12月19日","excerpt":"\\n<h2>实现方式</h2>\\n<ul>\\n<li>springboot方式</li>\\n<li>quartz</li>\\n<li>xxl-job</li>\\n</ul>\\n<h2>通配符</h2>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\" data-title=\\"text\\"><pre class=\\"shiki light-plus\\" style=\\"background-color:#FFFFFF;color:#000000\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span>? 表示不指定值，即不关心某个字段的取值时使用。需要注意的是，月份中的日期和星期可能会起冲突，因此在配置时这两个得有一个是 ?</span></span>\\n<span class=\\"line\\"><span> </span></span>\\n<span class=\\"line\\"><span>* 表示所有值，例如:在秒的字段上设置 *,表示每一秒都会触发</span></span>\\n<span class=\\"line\\"><span> </span></span>\\n<span class=\\"line\\"><span>, 用来分开多个值，例如在周字段上设置 “MON,WED,FRI” 表示周一，周三和周五触发</span></span>\\n<span class=\\"line\\"><span> </span></span>\\n<span class=\\"line\\"><span>- 表示区间，例如在秒上设置 “10-12”,表示 10,11,12秒都会触发</span></span>\\n<span class=\\"line\\"><span> </span></span>\\n<span class=\\"line\\"><span>/ 用于递增触发，如在秒上面设置”5/15” 表示从5秒开始，每增15秒触发(5,20,35,50)</span></span>\\n<span class=\\"line\\"><span> </span></span>\\n<span class=\\"line\\"><span># 序号(表示每月的第几个周几)，例如在周字段上设置”6#3”表示在每月的第三个周六，(用 在母亲节和父亲节再合适不过了)</span></span>\\n<span class=\\"line\\"><span> </span></span>\\n<span class=\\"line\\"><span>周字段的设置，若使用英文字母是不区分大小写的 ，即 MON 与mon相同</span></span>\\n<span class=\\"line\\"><span> </span></span>\\n<span class=\\"line\\"><span>L 表示最后的意思。在日字段设置上，表示当月的最后一天(依据当前月份，如果是二月还会自动判断是否是润年), 在周字段上表示星期六，相当于”7”或”SAT”（注意周日算是第一天）。如果在”L”前加上数字，则表示该数据的最后一个。例如在周字段上设置”6L”这样的格式,则表示”本月最后一个星期五”</span></span>\\n<span class=\\"line\\"><span> </span></span>\\n<span class=\\"line\\"><span>W 表示离指定日期的最近工作日(周一至周五)，例如在日字段上设置”15W”，表示离每月15号最近的那个工作日触发。如果15号正好是周六，则找最近的周五(14号)触发, 如果15号是周未，则找最近的下周一(16号)触发，如果15号正好在工作日(周一至周五)，则就在该天触发。如果指定格式为 “1W”,它则表示每月1号往后最近的工作日触发。如果1号正是周六，则将在3号下周一触发。(注，”W”前只能设置具体的数字,不允许区间”-“)</span></span>\\n<span class=\\"line\\"><span> </span></span>\\n<span class=\\"line\\"><span>L 和 W 可以一组合使用。如果在日字段上设置”LW”,则表示在本月的最后一个工作日触发(一般指发工资 )</span></span>\\n<span class=\\"line\\"><span></span></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{v as comp,y as data};
