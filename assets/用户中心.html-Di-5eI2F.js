import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as a,e as l}from"./app-hoN0JGLf.js";const e={},p=l(`<h1 id="用户中心" tabindex="-1"><a class="header-anchor" href="#用户中心"><span>用户中心</span></a></h1><h2 id="认证" tabindex="-1"><a class="header-anchor" href="#认证"><span>认证</span></a></h2><ol><li>客户端获取用户信息，角色，权限，</li><li>带着token，角色id,权限编码，用户id</li><li>校验token, 角色，api</li></ol><h2 id="网关" tabindex="-1"><a class="header-anchor" href="#网关"><span>网关</span></a></h2><ol><li>网关作为资源服务器，向auth服务发起token进行校验，</li><li>authorizeExchange对角色校验</li><li>用户中心进行服务调用获取角色对应api,使用缓存</li><li>根据服务名称查询拥有的api进行鉴权</li></ol><h2 id="角色聚合" tabindex="-1"><a class="header-anchor" href="#角色聚合"><span>角色聚合</span></a></h2><p>用户角色，同一客户端的两个客户端角色，角色的权限相交</p><h2 id="网关集成权限认证" tabindex="-1"><a class="header-anchor" href="#网关集成权限认证"><span>网关集成权限认证</span></a></h2><ul><li>作为资源服务器</li><li>opaqueToken，token提取</li><li>认证失败，访问被拒绝处理</li><li>使用默认token校验， 向auth服务发起oauth2/introspect请求</li><li>从auth服务获取jwkSource来对token进行校验,/oauth2/jwks</li><li>配置鉴权管理器进行鉴权</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#000000;">@</span><span style="color:#267F99;">Slf4j</span></span>
<span class="line"><span style="color:#000000;">@</span><span style="color:#267F99;">Configuration</span></span>
<span class="line"><span style="color:#000000;">@</span><span style="color:#267F99;">EnableWebFluxSecurity</span></span>
<span class="line"><span style="color:#000000;">@</span><span style="color:#267F99;">RequiredArgsConstructor</span></span>
<span class="line"><span style="color:#0000FF;">public</span><span style="color:#0000FF;"> class</span><span style="color:#267F99;"> CenterResourceServerConfig</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#0000FF;"> final</span><span style="color:#267F99;"> CenterTokenExtractor</span><span style="color:#001080;"> centerTokenExtractor</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#0000FF;"> final</span><span style="color:#267F99;"> CenterOpaqueTokenIntrospector</span><span style="color:#001080;"> centerOpaqueTokenIntrospector</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#0000FF;"> final</span><span style="color:#267F99;"> AuthorizationManager</span><span style="color:#001080;"> authorizationManager</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#0000FF;"> final</span><span style="color:#267F99;"> CenterAccessDeniedHandler</span><span style="color:#001080;"> centerAccessDeniedHandler</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#0000FF;"> final</span><span style="color:#267F99;"> CenterAuthenticationEntryPoint</span><span style="color:#001080;"> authenticationEntryPoint</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#0000FF;"> final</span><span style="color:#267F99;"> IgnoreUrlProperties</span><span style="color:#001080;"> ignoreUrlProperties</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">    @</span><span style="color:#267F99;">Bean</span></span>
<span class="line"><span style="color:#267F99;">    SecurityWebFilterChain</span><span style="color:#795E26;">  securityFilterChain</span><span style="color:#000000;">(</span><span style="color:#267F99;">ServerHttpSecurity</span><span style="color:#001080;"> httpSecurity</span><span style="color:#000000;">) </span><span style="color:#0000FF;">throws</span><span style="color:#267F99;"> Exception</span><span style="color:#000000;">{</span></span>
<span class="line"><span style="color:#001080;">        httpSecurity</span><span style="color:#000000;">.</span><span style="color:#795E26;">authorizeExchange</span><span style="color:#000000;">()</span></span>
<span class="line"><span style="color:#000000;">                        .</span><span style="color:#795E26;">pathMatchers</span><span style="color:#000000;">(</span><span style="color:#001080;">ArrayUtil</span><span style="color:#000000;">.</span><span style="color:#795E26;">toArray</span><span style="color:#000000;">(</span><span style="color:#001080;">ignoreUrlProperties</span><span style="color:#000000;">.</span><span style="color:#795E26;">getWhites</span><span style="color:#000000;">(),</span><span style="color:#001080;">String</span><span style="color:#000000;">.</span><span style="color:#001080;">class</span><span style="color:#000000;">)).</span><span style="color:#795E26;">permitAll</span><span style="color:#000000;">()</span></span>
<span class="line"><span style="color:#000000;">                        .</span><span style="color:#795E26;">anyExchange</span><span style="color:#000000;">().</span><span style="color:#795E26;">access</span><span style="color:#000000;">(authorizationManager)</span></span>
<span class="line"><span style="color:#000000;">                        .</span><span style="color:#795E26;">and</span><span style="color:#000000;">().</span><span style="color:#795E26;">exceptionHandling</span><span style="color:#000000;">()</span></span>
<span class="line"><span style="color:#008000;">                        //处理未授权</span></span>
<span class="line"><span style="color:#000000;">                        .</span><span style="color:#795E26;">accessDeniedHandler</span><span style="color:#000000;">(centerAccessDeniedHandler)</span></span>
<span class="line"><span style="color:#008000;">                        //未认证</span></span>
<span class="line"><span style="color:#000000;">                        .</span><span style="color:#795E26;">authenticationEntryPoint</span><span style="color:#000000;">(authenticationEntryPoint)</span></span>
<span class="line"><span style="color:#000000;">                        .</span><span style="color:#795E26;">and</span><span style="color:#000000;">().</span><span style="color:#795E26;">csrf</span><span style="color:#000000;">().</span><span style="color:#795E26;">disable</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#001080;">        httpSecurity</span><span style="color:#000000;">.</span><span style="color:#795E26;">oauth2ResourceServer</span><span style="color:#000000;">(oauth2 </span><span style="color:#0000FF;">-&gt;</span><span style="color:#001080;"> oauth2</span><span style="color:#000000;">.</span><span style="color:#795E26;">opaqueToken</span><span style="color:#000000;">(token</span><span style="color:#0000FF;">-&gt;</span><span style="color:#001080;">token</span><span style="color:#000000;">.</span><span style="color:#795E26;">introspector</span><span style="color:#000000;">(centerOpaqueTokenIntrospector))</span></span>
<span class="line"><span style="color:#000000;">                .</span><span style="color:#795E26;">bearerTokenConverter</span><span style="color:#000000;">(centerTokenExtractor)</span></span>
<span class="line"><span style="color:#000000;">                .</span><span style="color:#795E26;">authenticationEntryPoint</span><span style="color:#000000;">(authenticationEntryPoint)</span></span>
<span class="line"><span style="color:#000000;">                .</span><span style="color:#795E26;">accessDeniedHandler</span><span style="color:#000000;">(centerAccessDeniedHandler));</span></span>
<span class="line"><span style="color:#AF00DB;">        return</span><span style="color:#001080;"> httpSecurity</span><span style="color:#000000;">.</span><span style="color:#795E26;">build</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取所有接口url" tabindex="-1"><a class="header-anchor" href="#获取所有接口url"><span>获取所有接口url</span></a></h3><blockquote><p>方案</p></blockquote><ol><li>通过集成的swagger实现</li><li>通过类加载器加载类路径下的所有类对象，反射获取信息</li><li>通过spring上下文来实现</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">public</span><span style="color:#0000FF;"> class</span><span style="color:#267F99;"> SystemRunner</span><span style="color:#0000FF;"> implements</span><span style="color:#267F99;"> CommandLineRunner</span><span style="color:#000000;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">    @</span><span style="color:#267F99;">Value</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;\${spring.application.name}&quot;</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#267F99;"> String</span><span style="color:#001080;"> serviceName</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#0000FF;"> final</span><span style="color:#267F99;"> DocumentationCache</span><span style="color:#001080;"> documentationCache</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#0000FF;"> final</span><span style="color:#267F99;"> ServiceModelToOpenApiMapper</span><span style="color:#001080;"> mapper</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">    @</span><span style="color:#267F99;">Override</span></span>
<span class="line"><span style="color:#0000FF;">    public</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> run</span><span style="color:#000000;">(</span><span style="color:#267F99;">String</span><span style="color:#000000;">... </span><span style="color:#001080;">args</span><span style="color:#000000;">){</span></span>
<span class="line"><span style="color:#008000;">        /*String groupName =Docket.DEFAULT_GROUP_NAME;</span></span>
<span class="line"><span style="color:#008000;">        Documentation documentation = documentationCache.documentationByGroup(groupName);</span></span>
<span class="line"><span style="color:#008000;">        if (documentation == null) {</span></span>
<span class="line"><span style="color:#008000;">            log.info(&quot;接口初始化失败&quot;);</span></span>
<span class="line"><span style="color:#008000;">        }</span></span>
<span class="line"><span style="color:#008000;">        OpenAPI oas = mapper.mapDocumentation(documentation);</span></span>
<span class="line"><span style="color:#008000;">        if (CollectionUtil.isNotEmpty(oas.getPaths())) {</span></span>
<span class="line"><span style="color:#008000;">            Iterator&lt;Map.Entry&lt;String, PathItem&gt;&gt; iterator = oas.getPaths().entrySet().iterator();</span></span>
<span class="line"><span style="color:#008000;">            while (iterator.hasNext()) {</span></span>
<span class="line"><span style="color:#008000;">                Map.Entry&lt;String,PathItem&gt; entry = iterator.next();</span></span>
<span class="line"><span style="color:#008000;">                String pathName = entry.getKey();</span></span>
<span class="line"><span style="color:#008000;">                PathItem pathItem = entry.getValue();</span></span>
<span class="line"><span style="color:#008000;">                if (pathItem.getGet() != null) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">                }</span></span>
<span class="line"><span style="color:#008000;">            }</span></span>
<span class="line"><span style="color:#008000;">        }*/</span></span>
<span class="line"><span style="color:#008000;">        //获取controller包下的class</span></span>
<span class="line"><span style="color:#267F99;">        List</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">Class</span><span style="color:#000000;">&lt;</span><span style="color:#0000FF;">?</span><span style="color:#000000;">&gt;&gt; </span><span style="color:#001080;">classList</span><span style="color:#000000;">  = </span><span style="color:#795E26;">getAllClassByPackageName</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;com.techease.authcenter.system.controller&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#267F99;"> List</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">Class</span><span style="color:#000000;">&lt;</span><span style="color:#0000FF;">?</span><span style="color:#000000;">&gt;&gt; </span><span style="color:#795E26;">getAllClassByPackageName</span><span style="color:#000000;">(</span><span style="color:#267F99;">String</span><span style="color:#001080;"> packageName</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#267F99;">        List</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">Class</span><span style="color:#000000;">&lt;</span><span style="color:#0000FF;">?</span><span style="color:#000000;">&gt;&gt; </span><span style="color:#001080;">classes</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#267F99;"> ArrayList</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">Class</span><span style="color:#000000;">&lt;</span><span style="color:#0000FF;">?</span><span style="color:#000000;">&gt;&gt;();</span></span>
<span class="line"><span style="color:#267F99;">        String</span><span style="color:#001080;"> packageDirName</span><span style="color:#000000;"> = </span><span style="color:#001080;">packageName</span><span style="color:#000000;">.</span><span style="color:#795E26;">replace</span><span style="color:#000000;">(</span><span style="color:#A31515;">&#39;.&#39;</span><span style="color:#000000;">, </span><span style="color:#A31515;">&#39;/&#39;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#267F99;">        Enumeration</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">URL</span><span style="color:#000000;">&gt; </span><span style="color:#001080;">dirs</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#AF00DB;">        try</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#008000;">            //获取类路径下的资源</span></span>
<span class="line"><span style="color:#000000;">            dirs = </span><span style="color:#001080;">Thread</span><span style="color:#000000;">.</span><span style="color:#795E26;">currentThread</span><span style="color:#000000;">().</span><span style="color:#795E26;">getContextClassLoader</span><span style="color:#000000;">().</span><span style="color:#795E26;">getResources</span><span style="color:#000000;">(packageDirName);</span></span>
<span class="line"><span style="color:#AF00DB;">            while</span><span style="color:#000000;"> (</span><span style="color:#001080;">dirs</span><span style="color:#000000;">.</span><span style="color:#795E26;">hasMoreElements</span><span style="color:#000000;">()) {</span></span>
<span class="line"><span style="color:#267F99;">                URL</span><span style="color:#001080;"> url</span><span style="color:#000000;"> = </span><span style="color:#001080;">dirs</span><span style="color:#000000;">.</span><span style="color:#795E26;">nextElement</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#267F99;">                String</span><span style="color:#001080;"> protocol</span><span style="color:#000000;"> = </span><span style="color:#001080;">url</span><span style="color:#000000;">.</span><span style="color:#795E26;">getProtocol</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#AF00DB;">                if</span><span style="color:#000000;"> (</span><span style="color:#A31515;">&quot;file&quot;</span><span style="color:#000000;">.</span><span style="color:#795E26;">equals</span><span style="color:#000000;">(protocol)) {</span></span>
<span class="line"><span style="color:#008000;">                    // 获取包的物理路径</span></span>
<span class="line"><span style="color:#267F99;">                    String</span><span style="color:#001080;"> filePath</span><span style="color:#000000;"> = </span><span style="color:#001080;">URLDecoder</span><span style="color:#000000;">.</span><span style="color:#795E26;">decode</span><span style="color:#000000;">(</span><span style="color:#001080;">url</span><span style="color:#000000;">.</span><span style="color:#795E26;">getFile</span><span style="color:#000000;">(), </span><span style="color:#A31515;">&quot;UTF-8&quot;</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#008000;">                    // 以文件的方式扫描整个包下的文件 并添加到集合中</span></span>
<span class="line"><span style="color:#795E26;">                    findAndAddClassesInPackageByFile</span><span style="color:#000000;">(packageName, filePath, recursive, classes);</span></span>
<span class="line"><span style="color:#000000;">                }</span></span>
<span class="line"><span style="color:#000000;">            }</span></span>
<span class="line"><span style="color:#000000;">        } </span><span style="color:#AF00DB;">catch</span><span style="color:#000000;"> (</span><span style="color:#267F99;">IOException</span><span style="color:#001080;"> e</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">            e</span><span style="color:#000000;">.</span><span style="color:#795E26;">printStackTrace</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#AF00DB;">        return</span><span style="color:#000000;"> classes;</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">    </span></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#0000FF;"> static</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> findAndAddClassesInPackageByFile</span><span style="color:#000000;">(</span><span style="color:#267F99;">String</span><span style="color:#001080;"> packageName</span><span style="color:#000000;">, </span><span style="color:#267F99;">String</span><span style="color:#001080;"> packagePath</span><span style="color:#000000;">, </span><span style="color:#0000FF;">final</span><span style="color:#267F99;"> boolean</span><span style="color:#001080;"> recursive</span><span style="color:#000000;">, </span><span style="color:#267F99;">List</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">Class</span><span style="color:#000000;">&lt;</span><span style="color:#0000FF;">?</span><span style="color:#000000;">&gt;&gt; </span><span style="color:#001080;">classes</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#008000;">        // 获取此包的目录 建立一个File</span></span>
<span class="line"><span style="color:#267F99;">        File</span><span style="color:#001080;"> dir</span><span style="color:#000000;"> = </span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> File</span><span style="color:#000000;">(packagePath);</span></span>
<span class="line"><span style="color:#008000;">        // 如果不存在或者 也不是目录就直接返回</span></span>
<span class="line"><span style="color:#AF00DB;">        if</span><span style="color:#000000;"> (!</span><span style="color:#001080;">dir</span><span style="color:#000000;">.</span><span style="color:#795E26;">exists</span><span style="color:#000000;">() || !</span><span style="color:#001080;">dir</span><span style="color:#000000;">.</span><span style="color:#795E26;">isDirectory</span><span style="color:#000000;">()) {</span></span>
<span class="line"><span style="color:#AF00DB;">            return</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#008000;">        // 如果存在 就获取包下的所有文件 包括目录</span></span>
<span class="line"><span style="color:#267F99;">        File</span><span style="color:#000000;">[] </span><span style="color:#001080;">dirFiles</span><span style="color:#000000;"> = </span><span style="color:#001080;">dir</span><span style="color:#000000;">.</span><span style="color:#795E26;">listFiles</span><span style="color:#000000;">(</span><span style="color:#AF00DB;">new</span><span style="color:#795E26;"> FileFilter</span><span style="color:#000000;">() {</span></span>
<span class="line"><span style="color:#008000;">            // 自定义过滤规则 如果可以循环(包含子目录) 或则是以.class结尾的文件(编译好的java类文件)</span></span>
<span class="line"><span style="color:#0000FF;">            public</span><span style="color:#267F99;"> boolean</span><span style="color:#795E26;"> accept</span><span style="color:#000000;">(</span><span style="color:#267F99;">File</span><span style="color:#001080;"> file</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#AF00DB;">                return</span><span style="color:#000000;"> (recursive &amp;&amp; </span><span style="color:#001080;">file</span><span style="color:#000000;">.</span><span style="color:#795E26;">isDirectory</span><span style="color:#000000;">()) || (</span><span style="color:#001080;">file</span><span style="color:#000000;">.</span><span style="color:#795E26;">getName</span><span style="color:#000000;">().</span><span style="color:#795E26;">endsWith</span><span style="color:#000000;">(</span><span style="color:#A31515;">&quot;.class&quot;</span><span style="color:#000000;">));</span></span>
<span class="line"><span style="color:#000000;">            }</span></span>
<span class="line"><span style="color:#000000;">        });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AF00DB;">        assert</span><span style="color:#000000;"> dirFiles != </span><span style="color:#0000FF;">null</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#008000;">        // 循环所有文件</span></span>
<span class="line"><span style="color:#AF00DB;">        for</span><span style="color:#000000;"> (</span><span style="color:#267F99;">File</span><span style="color:#001080;"> file</span><span style="color:#AF00DB;"> :</span><span style="color:#000000;"> dirFiles) {</span></span>
<span class="line"><span style="color:#008000;">            // 如果是目录 则继续扫描</span></span>
<span class="line"><span style="color:#AF00DB;">            if</span><span style="color:#000000;"> (</span><span style="color:#001080;">file</span><span style="color:#000000;">.</span><span style="color:#795E26;">isDirectory</span><span style="color:#000000;">()) {</span></span>
<span class="line"><span style="color:#795E26;">                findAndAddClassesInPackageByFile</span><span style="color:#000000;">(packageName + </span><span style="color:#A31515;">&quot;.&quot;</span><span style="color:#000000;"> + </span><span style="color:#001080;">file</span><span style="color:#000000;">.</span><span style="color:#795E26;">getName</span><span style="color:#000000;">(), </span><span style="color:#001080;">file</span><span style="color:#000000;">.</span><span style="color:#795E26;">getAbsolutePath</span><span style="color:#000000;">(), recursive, classes);</span></span>
<span class="line"><span style="color:#000000;">            } </span><span style="color:#AF00DB;">else</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#008000;">                // 如果是java类文件 去掉后面的.class 只留下类名</span></span>
<span class="line"><span style="color:#267F99;">                String</span><span style="color:#001080;"> className</span><span style="color:#000000;"> = </span><span style="color:#001080;">file</span><span style="color:#000000;">.</span><span style="color:#795E26;">getName</span><span style="color:#000000;">().</span><span style="color:#795E26;">substring</span><span style="color:#000000;">(</span><span style="color:#098658;">0</span><span style="color:#000000;">, </span><span style="color:#001080;">file</span><span style="color:#000000;">.</span><span style="color:#795E26;">getName</span><span style="color:#000000;">().</span><span style="color:#795E26;">length</span><span style="color:#000000;">() - </span><span style="color:#098658;">6</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#AF00DB;">                try</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#008000;">                    // 添加到集合中去</span></span>
<span class="line"><span style="color:#001080;">                    classes</span><span style="color:#000000;">.</span><span style="color:#795E26;">add</span><span style="color:#000000;">(</span><span style="color:#001080;">Class</span><span style="color:#000000;">.</span><span style="color:#795E26;">forName</span><span style="color:#000000;">(packageName + </span><span style="color:#A31515;">&#39;.&#39;</span><span style="color:#000000;"> + className));</span></span>
<span class="line"><span style="color:#000000;">                } </span><span style="color:#AF00DB;">catch</span><span style="color:#000000;"> (</span><span style="color:#267F99;">ClassNotFoundException</span><span style="color:#001080;"> e</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#001080;">                    e</span><span style="color:#000000;">.</span><span style="color:#795E26;">printStackTrace</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#000000;">                }</span></span>
<span class="line"><span style="color:#000000;">            }</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),o=[p];function t(c,r){return n(),a("div",null,o)}const d=s(e,[["render",t],["__file","用户中心.html.vue"]]),v=JSON.parse('{"path":"/note/%E5%BA%94%E7%94%A8%E6%96%B9%E6%A1%88/%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83.html","title":"用户中心","lang":"zh-CN","frontmatter":{"description":"用户中心 认证 客户端获取用户信息，角色，权限， 带着token，角色id,权限编码，用户id 校验token, 角色，api 网关 网关作为资源服务器，向auth服务发起token进行校验， authorizeExchange对角色校验 用户中心进行服务调用获取角色对应api,使用缓存 根据服务名称查询拥有的api进行鉴权 角色聚合 用户角色，同一客...","head":[["meta",{"property":"og:url","content":"https://wherywan.github.io/note/%E5%BA%94%E7%94%A8%E6%96%B9%E6%A1%88/%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83.html"}],["meta",{"property":"og:site_name","content":"HONG_JI"}],["meta",{"property":"og:title","content":"用户中心"}],["meta",{"property":"og:description","content":"用户中心 认证 客户端获取用户信息，角色，权限， 带着token，角色id,权限编码，用户id 校验token, 角色，api 网关 网关作为资源服务器，向auth服务发起token进行校验， authorizeExchange对角色校验 用户中心进行服务调用获取角色对应api,使用缓存 根据服务名称查询拥有的api进行鉴权 角色聚合 用户角色，同一客..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-09-01T15:50:14.000Z"}],["meta",{"property":"article:author","content":"wanhongji"}],["meta",{"property":"article:modified_time","content":"2022-09-01T15:50:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"用户中心\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-09-01T15:50:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wanhongji\\"}]}"]]},"headers":[{"level":2,"title":"认证","slug":"认证","link":"#认证","children":[]},{"level":2,"title":"网关","slug":"网关","link":"#网关","children":[]},{"level":2,"title":"角色聚合","slug":"角色聚合","link":"#角色聚合","children":[]},{"level":2,"title":"网关集成权限认证","slug":"网关集成权限认证","link":"#网关集成权限认证","children":[{"level":3,"title":"获取所有接口url","slug":"获取所有接口url","link":"#获取所有接口url","children":[]}]}],"git":{"createdTime":1660131154000,"updatedTime":1662047414000,"contributors":[{"name":"wanhongji","email":"wan_hongji@163.com","commits":1}]},"readingTime":{"minutes":2.45,"words":736},"filePathRelative":"note/应用方案/用户中心.md","localizedDate":"2022年8月10日","excerpt":"\\n<h2>认证</h2>\\n<ol>\\n<li>客户端获取用户信息，角色，权限，</li>\\n<li>带着token，角色id,权限编码，用户id</li>\\n<li>校验token, 角色，api</li>\\n</ol>\\n<h2>网关</h2>\\n<ol>\\n<li>网关作为资源服务器，向auth服务发起token进行校验，</li>\\n<li>authorizeExchange对角色校验</li>\\n<li>用户中心进行服务调用获取角色对应api,使用缓存</li>\\n<li>根据服务名称查询拥有的api进行鉴权</li>\\n</ol>\\n<h2>角色聚合</h2>\\n<p>用户角色，同一客户端的两个客户端角色，角色的权限相交</p>","autoDesc":true}');export{d as comp,v as data};
