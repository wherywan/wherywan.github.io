import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as l,e as a}from"./app-hoN0JGLf.js";const e={},p=a(`<h1 id="菜单" tabindex="-1"><a class="header-anchor" href="#菜单"><span>菜单</span></a></h1><h2 id="菜单表" tabindex="-1"><a class="header-anchor" href="#菜单表"><span>菜单表</span></a></h2><blockquote><p>字段</p></blockquote><ul><li>id</li><li>code</li><li>name</li><li>parent_id</li><li>type 菜单，目录，功能(按钮)</li></ul><h2 id="删除菜单" tabindex="-1"><a class="header-anchor" href="#删除菜单"><span>删除菜单</span></a></h2><p>递归获取所有菜单id,进行删除</p><h2 id="buildtree构造菜单树" tabindex="-1"><a class="header-anchor" href="#buildtree构造菜单树"><span>buildTree构造菜单树</span></a></h2><blockquote><p>处理方式</p></blockquote><ul><li>多层循环处理，如果菜单层数适中，推荐使用</li><li>递归，多层时采用，但耗时</li><li>可以使用工具类进行树的构造 hutool的TreeUtil</li></ul><blockquote><p>tree工具数据结构</p></blockquote><ul><li>treeNode</li><li>treeNodeConfig</li><li>Tree 以map形式存储treeNode</li><li>TreeBuilder <ul><li>Tree root</li><li>Map&lt;id,Tree&gt; idTreeMap</li></ul></li></ul><blockquote><p>以map构建树</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">private</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> buildFromMap</span><span style="color:#000000;">() {</span></span>
<span class="line"><span style="color:#AF00DB;">		if</span><span style="color:#000000;"> (</span><span style="color:#001080;">MapUtil</span><span style="color:#000000;">.</span><span style="color:#795E26;">isEmpty</span><span style="color:#000000;">(</span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">idTreeMap</span><span style="color:#000000;">)) {</span></span>
<span class="line"><span style="color:#AF00DB;">			return</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">		final</span><span style="color:#267F99;"> Map</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">E</span><span style="color:#000000;">, </span><span style="color:#267F99;">Tree</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">E</span><span style="color:#000000;">&gt;&gt; </span><span style="color:#001080;">eTreeMap</span><span style="color:#000000;"> = </span><span style="color:#001080;">MapUtil</span><span style="color:#000000;">.</span><span style="color:#795E26;">sortByValue</span><span style="color:#000000;">(</span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">idTreeMap</span><span style="color:#000000;">, </span><span style="color:#0000FF;">false</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#267F99;">		E</span><span style="color:#001080;"> parentId</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#AF00DB;">		for</span><span style="color:#000000;"> (</span><span style="color:#267F99;">Tree</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">E</span><span style="color:#000000;">&gt; </span><span style="color:#001080;">node</span><span style="color:#AF00DB;"> :</span><span style="color:#001080;"> eTreeMap</span><span style="color:#000000;">.</span><span style="color:#795E26;">values</span><span style="color:#000000;">()) {</span></span>
<span class="line"><span style="color:#AF00DB;">			if</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">null</span><span style="color:#000000;"> == node) {</span></span>
<span class="line"><span style="color:#AF00DB;">				continue</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">			}</span></span>
<span class="line"><span style="color:#000000;">			parentId = </span><span style="color:#001080;">node</span><span style="color:#000000;">.</span><span style="color:#795E26;">getParentId</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#AF00DB;">			if</span><span style="color:#000000;"> (</span><span style="color:#001080;">ObjectUtil</span><span style="color:#000000;">.</span><span style="color:#795E26;">equals</span><span style="color:#000000;">(</span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">root</span><span style="color:#000000;">.</span><span style="color:#795E26;">getId</span><span style="color:#000000;">(), parentId)) {</span></span>
<span class="line"><span style="color:#0000FF;">				this</span><span style="color:#000000;">.</span><span style="color:#001080;">root</span><span style="color:#000000;">.</span><span style="color:#795E26;">addChildren</span><span style="color:#000000;">(node);</span></span>
<span class="line"><span style="color:#AF00DB;">				continue</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">			}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">			final</span><span style="color:#267F99;"> Tree</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">E</span><span style="color:#000000;">&gt; </span><span style="color:#001080;">parentNode</span><span style="color:#000000;"> = </span><span style="color:#001080;">eTreeMap</span><span style="color:#000000;">.</span><span style="color:#795E26;">get</span><span style="color:#000000;">(parentId);</span></span>
<span class="line"><span style="color:#AF00DB;">			if</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">null</span><span style="color:#000000;"> != parentNode) {</span></span>
<span class="line"><span style="color:#001080;">				parentNode</span><span style="color:#000000;">.</span><span style="color:#795E26;">addChildren</span><span style="color:#000000;">(node);</span></span>
<span class="line"><span style="color:#000000;">			}</span></span>
<span class="line"><span style="color:#000000;">		}</span></span>
<span class="line"><span style="color:#000000;">	}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>剪枝 根据节点配置树的深度进行剪枝</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#008000;">    /**</span></span>
<span class="line"><span style="color:#008000;">	 * 树剪枝叶</span></span>
<span class="line"><span style="color:#008000;">	 *</span></span>
<span class="line"><span style="color:#008000;">	 * </span><span style="color:#0000FF;">@param</span><span style="color:#001080;"> tree</span><span style="color:#008000;">        节点</span></span>
<span class="line"><span style="color:#008000;">	 * </span><span style="color:#0000FF;">@param</span><span style="color:#001080;"> currentDepp</span><span style="color:#008000;"> 当前层级</span></span>
<span class="line"><span style="color:#008000;">	 * </span><span style="color:#0000FF;">@param</span><span style="color:#001080;"> maxDeep</span><span style="color:#008000;">     最大层级</span></span>
<span class="line"><span style="color:#008000;">	 */</span></span>
<span class="line"><span style="color:#0000FF;">	private</span><span style="color:#267F99;"> void</span><span style="color:#795E26;"> cutTree</span><span style="color:#000000;">(</span><span style="color:#267F99;">Tree</span><span style="color:#000000;">&lt;E&gt; tree, </span><span style="color:#267F99;">int</span><span style="color:#000000;"> currentDepp, </span><span style="color:#267F99;">int</span><span style="color:#000000;"> maxDeep) {</span></span>
<span class="line"><span style="color:#AF00DB;">		if</span><span style="color:#000000;"> (</span><span style="color:#0000FF;">null</span><span style="color:#000000;"> == tree) {</span></span>
<span class="line"><span style="color:#AF00DB;">			return</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">		}</span></span>
<span class="line"><span style="color:#AF00DB;">		if</span><span style="color:#000000;"> (currentDepp == maxDeep) {</span></span>
<span class="line"><span style="color:#008000;">			// 剪枝</span></span>
<span class="line"><span style="color:#001080;">			tree</span><span style="color:#000000;">.</span><span style="color:#795E26;">setChildren</span><span style="color:#000000;">(</span><span style="color:#0000FF;">null</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#AF00DB;">			return</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">		final</span><span style="color:#267F99;"> List</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">Tree</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">E</span><span style="color:#000000;">&gt;&gt; </span><span style="color:#001080;">children</span><span style="color:#000000;"> = </span><span style="color:#001080;">tree</span><span style="color:#000000;">.</span><span style="color:#795E26;">getChildren</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#AF00DB;">		if</span><span style="color:#000000;"> (</span><span style="color:#001080;">CollUtil</span><span style="color:#000000;">.</span><span style="color:#795E26;">isNotEmpty</span><span style="color:#000000;">(children)) {</span></span>
<span class="line"><span style="color:#AF00DB;">			for</span><span style="color:#000000;"> (</span><span style="color:#267F99;">Tree</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">E</span><span style="color:#000000;">&gt; </span><span style="color:#001080;">child</span><span style="color:#AF00DB;"> :</span><span style="color:#000000;"> children) {</span></span>
<span class="line"><span style="color:#795E26;">				cutTree</span><span style="color:#000000;">(child, currentDepp + </span><span style="color:#098658;">1</span><span style="color:#000000;">, maxDeep);</span></span>
<span class="line"><span style="color:#000000;">			}</span></span>
<span class="line"><span style="color:#000000;">		}</span></span>
<span class="line"><span style="color:#000000;">	}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),o=[p];function t(r,i){return n(),l("div",null,o)}const y=s(e,[["render",t],["__file","菜单.html.vue"]]),u=JSON.parse('{"path":"/note/%E5%BA%94%E7%94%A8%E6%96%B9%E6%A1%88/%E8%8F%9C%E5%8D%95.html","title":"菜单","lang":"zh-CN","frontmatter":{"description":"菜单 菜单表 字段 id code name parent_id type 菜单，目录，功能(按钮) 删除菜单 递归获取所有菜单id,进行删除 buildTree构造菜单树 处理方式 多层循环处理，如果菜单层数适中，推荐使用 递归，多层时采用，但耗时 可以使用工具类进行树的构造 hutool的TreeUtil tree工具数据结构 treeNode t...","head":[["meta",{"property":"og:url","content":"https://wherywan.github.io/note/%E5%BA%94%E7%94%A8%E6%96%B9%E6%A1%88/%E8%8F%9C%E5%8D%95.html"}],["meta",{"property":"og:site_name","content":"HONG_JI"}],["meta",{"property":"og:title","content":"菜单"}],["meta",{"property":"og:description","content":"菜单 菜单表 字段 id code name parent_id type 菜单，目录，功能(按钮) 删除菜单 递归获取所有菜单id,进行删除 buildTree构造菜单树 处理方式 多层循环处理，如果菜单层数适中，推荐使用 递归，多层时采用，但耗时 可以使用工具类进行树的构造 hutool的TreeUtil tree工具数据结构 treeNode t..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-09-01T15:50:14.000Z"}],["meta",{"property":"article:author","content":"wanhongji"}],["meta",{"property":"article:modified_time","content":"2022-09-01T15:50:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"菜单\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-09-01T15:50:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wanhongji\\"}]}"]]},"headers":[{"level":2,"title":"菜单表","slug":"菜单表","link":"#菜单表","children":[]},{"level":2,"title":"删除菜单","slug":"删除菜单","link":"#删除菜单","children":[]},{"level":2,"title":"buildTree构造菜单树","slug":"buildtree构造菜单树","link":"#buildtree构造菜单树","children":[]}],"git":{"createdTime":1660131154000,"updatedTime":1662047414000,"contributors":[{"name":"wanhongji","email":"wan_hongji@163.com","commits":1}]},"readingTime":{"minutes":0.83,"words":249},"filePathRelative":"note/应用方案/菜单.md","localizedDate":"2022年8月10日","excerpt":"\\n<h2>菜单表</h2>\\n<blockquote>\\n<p>字段</p>\\n</blockquote>\\n<ul>\\n<li>id</li>\\n<li>code</li>\\n<li>name</li>\\n<li>parent_id</li>\\n<li>type 菜单，目录，功能(按钮)</li>\\n</ul>\\n<h2>删除菜单</h2>\\n<p>递归获取所有菜单id,进行删除</p>\\n<h2>buildTree构造菜单树</h2>\\n<blockquote>\\n<p>处理方式</p>\\n</blockquote>\\n<ul>\\n<li>多层循环处理，如果菜单层数适中，推荐使用</li>\\n<li>递归，多层时采用，但耗时</li>\\n<li>可以使用工具类进行树的构造 hutool的TreeUtil</li>\\n</ul>","autoDesc":true}');export{y as comp,u as data};
