import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o,c as i,e as s}from"./app-hoN0JGLf.js";const t={},l=s('<h1 id="登录" tabindex="-1"><a class="header-anchor" href="#登录"><span>登录</span></a></h1><blockquote><p>什么是session?</p></blockquote><p>session从字面意思来讲，是会话。它是一种会话技术。</p><blockquote><p>使用session方式</p></blockquote><ol><li>浏览器向服务器发起请求</li><li>服务器查询到用户信息后放在session中，并返回sessionId存放在cookie中</li><li>下次请求只需验证session中是否有用户信息，来避免重复登录</li></ol><blockquote><p>使用JWT的方式,采用较多</p></blockquote><ol><li>用户在登录成功，使用用户信息构造JWT token放在cookie中，或者保存到localStorage中</li><li>下一次登录将token放在cookie中或者请求头中携带到后端服务器</li><li>服务器端使用过滤器或拦截器进行校验处理，对token进行解析获取用户信息放在上下文中</li></ol><blockquote><p>为什么使用JWT?</p></blockquote><p>session存放于对应的服务器中，适用于单体应用，对于分布式应用来说，不适用。</p><h2 id="单点登录" tabindex="-1"><a class="header-anchor" href="#单点登录"><span>单点登录</span></a></h2><p>对应用的用户信息和菜单权限统一管理</p><blockquote><p>身份认证授权方式</p></blockquote><ul><li>credential</li><li>Authorization code</li><li>password</li><li>implicit</li></ul><blockquote><p>内部多个应用登录</p></blockquote><p>网关 -》 auth服务,业务服务A,B</p><ol><li>登录A,判断token是否存在，若不存在，携带信息重定向到auth登录页面</li><li>缓存前一次请求，登录成功后，携带授权码重定向到系统A</li><li>系统A拿着code获取token</li><li>下一次请求拿着token,在网关校验，再转到对应服务</li></ol><blockquote><p>第三方授权登录</p></blockquote><h3 id="session-redis-nginx" tabindex="-1"><a class="header-anchor" href="#session-redis-nginx"><span>session + redis + nginx</span></a></h3><ul><li>登录成功,用户信息存放到redis</li><li>nginx避免跨域</li><li>父子域名保证cookie在父子域名间共享</li></ul><h2 id="跨域请求" tabindex="-1"><a class="header-anchor" href="#跨域请求"><span>跨域请求</span></a></h2><ul><li><code>Access-Control-Allow-Origin</code>: 表明哪些源可以访问资源。</li><li><code>Access-Control-Allow-Methods</code>: 列出实际请求所允许使用的方法（如GET、POST等）。</li><li><code>Access-Control-Allow-Headers</code>: 允许的请求头字段列表。</li><li><code>Access-Control-Allow-Credentials</code>: 表示是否允许请求带有凭证（如Cookie）。</li><li><code>Access-Control-Max-Age</code>: 预检请求结果可缓存的时间，减少后续同类型请求的预检步骤。</li></ul><h2 id="jwt" tabindex="-1"><a class="header-anchor" href="#jwt"><span>JWT</span></a></h2><p>JWT token由三部分组成:</p><ul><li>header 头 包含格式和签名算法，常用rsa算法</li><li>payload 载荷 主体信息</li><li>signature 签名 header和payload使用base64加密，signature使用加密后的头和载荷以及密钥加密形成</li></ul>',24),n=[l];function a(c,r){return o(),i("div",null,n)}const h=e(t,[["render",a],["__file","登录.html.vue"]]),u=JSON.parse('{"path":"/note/web/%E7%99%BB%E5%BD%95.html","title":"登录","lang":"zh-CN","frontmatter":{"category":["web"],"description":"登录 什么是session? session从字面意思来讲，是会话。它是一种会话技术。 使用session方式 浏览器向服务器发起请求 服务器查询到用户信息后放在session中，并返回sessionId存放在cookie中 下次请求只需验证session中是否有用户信息，来避免重复登录 使用JWT的方式,采用较多 用户在登录成功，使用用户信息构造JW...","head":[["meta",{"property":"og:url","content":"https://wherywan.github.io/note/web/%E7%99%BB%E5%BD%95.html"}],["meta",{"property":"og:site_name","content":"HONG_JI"}],["meta",{"property":"og:title","content":"登录"}],["meta",{"property":"og:description","content":"登录 什么是session? session从字面意思来讲，是会话。它是一种会话技术。 使用session方式 浏览器向服务器发起请求 服务器查询到用户信息后放在session中，并返回sessionId存放在cookie中 下次请求只需验证session中是否有用户信息，来避免重复登录 使用JWT的方式,采用较多 用户在登录成功，使用用户信息构造JW..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-07T02:44:31.000Z"}],["meta",{"property":"article:author","content":"wanhongji"}],["meta",{"property":"article:modified_time","content":"2024-05-07T02:44:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"登录\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-07T02:44:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wanhongji\\"}]}"]]},"headers":[{"level":2,"title":"单点登录","slug":"单点登录","link":"#单点登录","children":[{"level":3,"title":"session + redis + nginx","slug":"session-redis-nginx","link":"#session-redis-nginx","children":[]}]},{"level":2,"title":"跨域请求","slug":"跨域请求","link":"#跨域请求","children":[]},{"level":2,"title":"JWT","slug":"jwt","link":"#jwt","children":[]}],"git":{"createdTime":1659879518000,"updatedTime":1715049871000,"contributors":[{"name":"wanhongji","email":"wherywan@163.com","commits":1}]},"readingTime":{"minutes":1.92,"words":577},"filePathRelative":"note/web/登录.md","localizedDate":"2022年8月7日","excerpt":"\\n<blockquote>\\n<p>什么是session?</p>\\n</blockquote>\\n<p>session从字面意思来讲，是会话。它是一种会话技术。</p>\\n<blockquote>\\n<p>使用session方式</p>\\n</blockquote>\\n<ol>\\n<li>浏览器向服务器发起请求</li>\\n<li>服务器查询到用户信息后放在session中，并返回sessionId存放在cookie中</li>\\n<li>下次请求只需验证session中是否有用户信息，来避免重复登录</li>\\n</ol>\\n<blockquote>\\n<p>使用JWT的方式,采用较多</p>\\n</blockquote>","autoDesc":true}');export{h as comp,u as data};
