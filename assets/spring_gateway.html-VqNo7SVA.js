import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as a,e}from"./app-hoN0JGLf.js";const l={},p=e(`<h1 id="gateway" tabindex="-1"><a class="header-anchor" href="#gateway"><span>gateway</span></a></h1><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><p>网关作为资源服务器对token进行校验，获取认证对象，对权限等进行校验。</p><h3 id="security配置" tabindex="-1"><a class="header-anchor" href="#security配置"><span>security配置</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span style="color:#0000FF;">public</span><span style="color:#0000FF;"> class</span><span style="color:#267F99;"> CenterResourceServerConfig</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#0000FF;"> final</span><span style="color:#267F99;"> CenterTokenExtractor</span><span style="color:#001080;"> centerTokenExtractor</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#0000FF;"> final</span><span style="color:#267F99;"> CenterOpaqueTokenIntrospector</span><span style="color:#001080;"> centerOpaqueTokenIntrospector</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#0000FF;"> final</span><span style="color:#267F99;"> AuthorizationManager</span><span style="color:#001080;"> authorizationManager</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#0000FF;"> final</span><span style="color:#267F99;"> CenterAccessDeniedHandler</span><span style="color:#001080;"> centerAccessDeniedHandler</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#0000FF;"> final</span><span style="color:#267F99;"> CenterAuthenticationEntryPoint</span><span style="color:#001080;"> authenticationEntryPoint</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#0000FF;"> final</span><span style="color:#267F99;"> IgnoreUrlProperties</span><span style="color:#001080;"> ignoreUrlProperties</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#0000FF;"> final</span><span style="color:#267F99;"> WhiteListAuthorizationFilter</span><span style="color:#001080;"> whiteListAuthorizationFilter</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#0000FF;"> final</span><span style="color:#0000FF;"> static</span><span style="color:#267F99;"> String</span><span style="color:#001080;"> SYS_API_SAVE_URI</span><span style="color:#000000;"> = </span><span style="color:#A31515;">&quot;/admin/sysApi/*/batch&quot;</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">    private</span><span style="color:#0000FF;"> final</span><span style="color:#0000FF;"> static</span><span style="color:#267F99;"> String</span><span style="color:#001080;"> SCOPE_SYS_API_SAVE</span><span style="color:#000000;"> = </span><span style="color:#A31515;">&quot;api-save&quot;</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">    @</span><span style="color:#267F99;">Bean</span></span>
<span class="line"><span style="color:#267F99;">    SecurityWebFilterChain</span><span style="color:#795E26;">  securityFilterChain</span><span style="color:#000000;">(</span><span style="color:#267F99;">ServerHttpSecurity</span><span style="color:#001080;"> httpSecurity</span><span style="color:#000000;">) </span><span style="color:#0000FF;">throws</span><span style="color:#267F99;"> Exception</span><span style="color:#000000;">{</span></span>
<span class="line"><span style="color:#001080;">        httpSecurity</span><span style="color:#000000;">.</span><span style="color:#795E26;">authorizeExchange</span><span style="color:#000000;">()</span></span>
<span class="line"><span style="color:#008000;">                        //构造一个路径及授权判断的映射的Entry对象</span></span>
<span class="line"><span style="color:#000000;">                        .</span><span style="color:#795E26;">pathMatchers</span><span style="color:#000000;">(</span><span style="color:#001080;">ArrayUtil</span><span style="color:#000000;">.</span><span style="color:#795E26;">toArray</span><span style="color:#000000;">(</span><span style="color:#001080;">ignoreUrlProperties</span><span style="color:#000000;">.</span><span style="color:#795E26;">getWhites</span><span style="color:#000000;">(),</span><span style="color:#001080;">String</span><span style="color:#000000;">.</span><span style="color:#001080;">class</span><span style="color:#000000;">)).</span><span style="color:#795E26;">permitAll</span><span style="color:#000000;">()</span></span>
<span class="line"><span style="color:#000000;">                        .</span><span style="color:#795E26;">pathMatchers</span><span style="color:#000000;">(SYS_API_SAVE_URI).</span><span style="color:#795E26;">hasAnyAuthority</span><span style="color:#000000;">(SCOPE_SYS_API_SAVE)</span></span>
<span class="line"><span style="color:#000000;">                        .</span><span style="color:#795E26;">anyExchange</span><span style="color:#000000;">().</span><span style="color:#795E26;">access</span><span style="color:#000000;">(authorizationManager)</span></span>
<span class="line"><span style="color:#000000;">                        .</span><span style="color:#795E26;">and</span><span style="color:#000000;">().</span><span style="color:#795E26;">exceptionHandling</span><span style="color:#000000;">()</span></span>
<span class="line"><span style="color:#008000;">                        //处理未授权</span></span>
<span class="line"><span style="color:#000000;">                        .</span><span style="color:#795E26;">accessDeniedHandler</span><span style="color:#000000;">(centerAccessDeniedHandler)</span></span>
<span class="line"><span style="color:#008000;">                        //未认证</span></span>
<span class="line"><span style="color:#000000;">                        .</span><span style="color:#795E26;">authenticationEntryPoint</span><span style="color:#000000;">(authenticationEntryPoint)</span></span>
<span class="line"><span style="color:#000000;">                        .</span><span style="color:#795E26;">and</span><span style="color:#000000;">().</span><span style="color:#795E26;">csrf</span><span style="color:#000000;">().</span><span style="color:#795E26;">disable</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#001080;">        httpSecurity</span><span style="color:#000000;">.</span><span style="color:#795E26;">addFilterBefore</span><span style="color:#000000;">(whiteListAuthorizationFilter, </span><span style="color:#001080;">SecurityWebFiltersOrder</span><span style="color:#000000;">.</span><span style="color:#001080;">AUTHENTICATION</span><span style="color:#000000;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">        //资源服务器配置，获取token，校验token，及封装被认证的对象</span></span>
<span class="line"><span style="color:#001080;">        httpSecurity</span><span style="color:#000000;">.</span><span style="color:#795E26;">oauth2ResourceServer</span><span style="color:#000000;">(oauth2 </span><span style="color:#0000FF;">-&gt;</span><span style="color:#001080;"> oauth2</span><span style="color:#000000;">.</span><span style="color:#795E26;">opaqueToken</span><span style="color:#000000;">(token</span><span style="color:#0000FF;">-&gt;</span><span style="color:#001080;">token</span><span style="color:#000000;">.</span><span style="color:#795E26;">introspector</span><span style="color:#000000;">(centerOpaqueTokenIntrospector))</span></span>
<span class="line"><span style="color:#000000;">                .</span><span style="color:#795E26;">bearerTokenConverter</span><span style="color:#000000;">(centerTokenExtractor)</span></span>
<span class="line"><span style="color:#000000;">                .</span><span style="color:#795E26;">authenticationEntryPoint</span><span style="color:#000000;">(authenticationEntryPoint)</span></span>
<span class="line"><span style="color:#000000;">                .</span><span style="color:#795E26;">accessDeniedHandler</span><span style="color:#000000;">(centerAccessDeniedHandler));</span></span>
<span class="line"><span style="color:#AF00DB;">        return</span><span style="color:#001080;"> httpSecurity</span><span style="color:#000000;">.</span><span style="color:#795E26;">build</span><span style="color:#000000;">();</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="动态路由配置" tabindex="-1"><a class="header-anchor" href="#动态路由配置"><span>动态路由配置</span></a></h3><ul><li>核心@Configuration的配置类gateConfig类，过滤器注册器bean注册过滤器（xssFilter跨站脚本攻击过滤器）,注册路由配置类到spring的ioc容器中</li><li>路由配置类：</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>1、注入redisTemplate（使用spring-boot-starter-data-redis操作redis数据库,核心redisTemplate的opsForValue()获取操作对象），从redis中获取网关路由配置信息的json格式，将其转为内部类集合List&lt;ZuulRouteVO&gt;遍历</span></span>
<span class="line"><span>2、实现RouteDefinitionRepository接口，重写getRouteDefinitions()，对路由进行java代码形式自定义配置，组成RouteDefinition（predicateDefinition（路由匹配）,filterDefinition（配置使用的过滤器如StripPrefix路径截取））集合，Flux.fromIterable(routeDefinitions)方法返回Flux&lt;RouteDefinition&gt;对象 </span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取和校验token的时机" tabindex="-1"><a class="header-anchor" href="#获取和校验token的时机"><span>获取和校验token的时机</span></a></h3><h4 id="在spring-securityfilterchain中处理" tabindex="-1"><a class="header-anchor" href="#在spring-securityfilterchain中处理"><span>在spring securityFilterChain中处理</span></a></h4><h4 id="在dispatchhandler分发之后的网关过滤器中处理" tabindex="-1"><a class="header-anchor" href="#在dispatchhandler分发之后的网关过滤器中处理"><span>在dispatchHandler分发之后的网关过滤器中处理</span></a></h4><ul><li>网关token验证：使用adminAccessFilter全局过滤器，登录token检查,每个服务在容器启动初始化时就做了如下操作:</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>1、通过实现CommandLineRunner的AuthClientRunner开启定时任务获取服务公钥和用户公钥存放在UserAuthConfig和ServiceAuthConfig中,使用密钥对token解密</span></span>
<span class="line"><span>2、服务调用和网关调用时要先获取请求服务端token放在请求头中，被调用服务端对服务端token验证，获取被允许客户端</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>认证服务使用AuthServerRunner implements CommandLineRunner初始化用户和服务的公私密钥，放在KeyConfiguration</p></li><li><p>adminAccessFilter全局过滤器:</p></li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>1. 实现globalFilter接口，配置忽略鉴权的路径@value注解的startWith</span></span>
<span class="line"><span>2. 核心serverWebChange(要过滤的数据),gatewayFilterChain（包含了过滤器集，以及下一个过滤器的索引）</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>样例</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>  LinkedHashSet requiredAttribute =</span></span>
<span class="line"><span>              serverWebExchange.getRequiredAttribute(ServerWebExchangeUtils.GATEWAY_ORIGINAL_REQUEST_URL_ATTR);</span></span>
<span class="line"><span>          ServerHttpRequest request = serverWebExchange.getRequest();</span></span>
<span class="line"><span>          String requestUri = request.getPath().pathWithinApplication().value();</span></span>
<span class="line"><span>          log.info(&quot;check token and user permission url:{},{}&quot;, requestUri,request.getMethod());</span></span>
<span class="line"><span>          if (requiredAttribute != null)</span></span>
<span class="line"><span>          {</span></span>
<span class="line"><span>              Iterator&lt;URI&gt; iterator = requiredAttribute.iterator();</span></span>
<span class="line"><span>              while (iterator.hasNext())</span></span>
<span class="line"><span>              {</span></span>
<span class="line"><span>                  URI next = iterator.next();</span></span>
<span class="line"><span>                  if (next.getPath().startsWith(zuulPrefix))</span></span>
<span class="line"><span>                  {</span></span>
<span class="line"><span>                      requestUri = next.getPath().substring(zuulPrefix.length());</span></span>
<span class="line"><span>                  }</span></span>
<span class="line"><span>              }</span></span>
<span class="line"><span>          }</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>从serverWebChange获取路径信息进行判断是否需鉴权，若不需要则转到下一个过滤器gatewayFilterChain.filter（），根据索引找到过滤器，创建下一个过滤器链对象，执行过滤器方法（传入要过滤的数据，下一个过滤器链）</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>  要有建造者模式的思想</span></span>
<span class="line"><span>  ServerHttpRequest.Builder mutate = request.mutate();//获取ServerHttpRequest的建造器</span></span>
<span class="line"><span>  // 不进行拦截的地址</span></span>
<span class="line"><span>  if (isStartWith(requestUri))</span></span>
<span class="line"><span>  {</span></span>
<span class="line"><span>      ServerHttpRequest build = mutate.build();//使用request建造器构建ServerHttpRequest</span></span>
<span class="line"><span>      return gatewayFilterChain.filter(serverWebExchange.mutate().request(build).build());</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>判断请求头中的token是否合法，公钥加密，私钥解密，私钥加密则用于身份认证</p></li><li><p>最后gatewayFilterChain的filter()返回Mono</p></li></ul><h3 id="全局和局部过滤器" tabindex="-1"><a class="header-anchor" href="#全局和局部过滤器"><span>全局和局部过滤器</span></a></h3><h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理"><span>原理</span></a></h2><p>核心serverWebchange是springgateway中的上下文,过滤器适配器，过滤器链，过滤器web处理器(gateway)，过滤器处理器适配器 派发处理器 默认web过滤器链 过滤器web处理器(server) webhander装饰器(ExceptionHandlingWebHandler异常处理) httpwebhandlerAdapter webserverManager</p><p>FilteringWebHandler是过滤器的核心,它实现了webhandler接口，重写了handle方法</p><ul><li><p>它在实例化时会传入全局过滤器集初始化，loadFilters(globalFilters);使用过滤器适配器GatewayFilterAdapter进行过滤器包装，若实现了ordered接口使用OrderedGatewayFilter包装</p></li><li><p>它内部有一个DefaultGatewayFilterChain静态内部类用于构建过滤器链对象</p></li><li><p>重要的是handle方法，它传入ServerWebExchange，局部过滤器和全局过滤器加入到List集合排序，构建过滤器链过滤</p></li><li><p>全局和局部过滤器按排序后的顺序执行</p></li><li><p>样例</p></li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki light-plus" style="background-color:#FFFFFF;color:#000000;" tabindex="0"><code><span class="line"><span>  @Override</span></span>
<span class="line"><span>  	public Mono&lt;Void&gt; handle(ServerWebExchange exchange) {</span></span>
<span class="line"><span>  		Route route = exchange.getRequiredAttribute(GATEWAY_ROUTE_ATTR);</span></span>
<span class="line"><span>  		List&lt;GatewayFilter&gt; gatewayFilters = route.getFilters();</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  		List&lt;GatewayFilter&gt; combined = new ArrayList&lt;&gt;(this.globalFilters);</span></span>
<span class="line"><span>  		combined.addAll(gatewayFilters);</span></span>
<span class="line"><span>  		// TODO: needed or cached?</span></span>
<span class="line"><span>  		AnnotationAwareOrderComparator.sort(combined);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  		if (logger.isDebugEnabled()) {</span></span>
<span class="line"><span>  			logger.debug(&quot;Sorted gatewayFilterFactories: &quot; + combined);</span></span>
<span class="line"><span>  		}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  		return new DefaultGatewayFilterChain(combined).filter(exchange);</span></span>
<span class="line"><span>  	}</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>WebHttpHandlerBuilder构造httpWebHandlerAdapter
</code></pre><p>httpWebHandlerAdapter是FilteringWebHandler上层类</p><p>webhttpHandlerBuilder的build构建httpWebHandlerAdapter(包含filterWebhandler(dispatchhandler)(server),Exceptionwebhandler包装filterWebhandler)</p><p>dispatchhandler找到RoutePredicateHandlerMapping，调用getHandlerInternal------&gt;lookuproute，filterWebhandler(gateway)</p><p>网关的入口ReactorHttpHandlerAdapter的apply方法：</p><p>调用httpWebHandlerAdapter的handle方法：</p><ul><li>创建serverWebchange上下文</li></ul>`,33),t=[p];function i(r,o){return n(),a("div",null,t)}const y=s(l,[["render",i],["__file","spring_gateway.html.vue"]]),u=JSON.parse('{"path":"/note/spring/spring_gateway.html","title":"gateway","lang":"zh-CN","frontmatter":{"category":["spring"],"description":"gateway 使用 网关作为资源服务器对token进行校验，获取认证对象，对权限等进行校验。 security配置 动态路由配置 核心@Configuration的配置类gateConfig类，过滤器注册器bean注册过滤器（xssFilter跨站脚本攻击过滤器）,注册路由配置类到spring的ioc容器中 路由配置类： 获取和校验token的时机 ...","head":[["meta",{"property":"og:url","content":"https://wherywan.github.io/note/spring/spring_gateway.html"}],["meta",{"property":"og:site_name","content":"HONG_JI"}],["meta",{"property":"og:title","content":"gateway"}],["meta",{"property":"og:description","content":"gateway 使用 网关作为资源服务器对token进行校验，获取认证对象，对权限等进行校验。 security配置 动态路由配置 核心@Configuration的配置类gateConfig类，过滤器注册器bean注册过滤器（xssFilter跨站脚本攻击过滤器）,注册路由配置类到spring的ioc容器中 路由配置类： 获取和校验token的时机 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-26T14:16:06.000Z"}],["meta",{"property":"article:author","content":"wanhongji"}],["meta",{"property":"article:modified_time","content":"2023-03-26T14:16:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"gateway\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-26T14:16:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wanhongji\\"}]}"]]},"headers":[{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[{"level":3,"title":"security配置","slug":"security配置","link":"#security配置","children":[]},{"level":3,"title":"动态路由配置","slug":"动态路由配置","link":"#动态路由配置","children":[]},{"level":3,"title":"获取和校验token的时机","slug":"获取和校验token的时机","link":"#获取和校验token的时机","children":[]},{"level":3,"title":"全局和局部过滤器","slug":"全局和局部过滤器","link":"#全局和局部过滤器","children":[]}]},{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]}],"git":{"createdTime":1651994001000,"updatedTime":1679840166000,"contributors":[{"name":"wanhongji","email":"wherywan@163.com","commits":4},{"name":"wanhongji","email":"wan_hongji@163.com","commits":1}]},"readingTime":{"minutes":3.75,"words":1124},"filePathRelative":"note/spring/spring_gateway.md","localizedDate":"2022年5月8日","excerpt":"\\n<h2>使用</h2>\\n<p>网关作为资源服务器对token进行校验，获取认证对象，对权限等进行校验。</p>\\n<h3>security配置</h3>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"shiki light-plus\\" style=\\"background-color:#FFFFFF;color:#000000\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#0000FF\\">public</span><span style=\\"color:#0000FF\\"> class</span><span style=\\"color:#267F99\\"> CenterResourceServerConfig</span><span style=\\"color:#000000\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#0000FF\\">    private</span><span style=\\"color:#0000FF\\"> final</span><span style=\\"color:#267F99\\"> CenterTokenExtractor</span><span style=\\"color:#001080\\"> centerTokenExtractor</span><span style=\\"color:#000000\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#0000FF\\">    private</span><span style=\\"color:#0000FF\\"> final</span><span style=\\"color:#267F99\\"> CenterOpaqueTokenIntrospector</span><span style=\\"color:#001080\\"> centerOpaqueTokenIntrospector</span><span style=\\"color:#000000\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#0000FF\\">    private</span><span style=\\"color:#0000FF\\"> final</span><span style=\\"color:#267F99\\"> AuthorizationManager</span><span style=\\"color:#001080\\"> authorizationManager</span><span style=\\"color:#000000\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#0000FF\\">    private</span><span style=\\"color:#0000FF\\"> final</span><span style=\\"color:#267F99\\"> CenterAccessDeniedHandler</span><span style=\\"color:#001080\\"> centerAccessDeniedHandler</span><span style=\\"color:#000000\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#0000FF\\">    private</span><span style=\\"color:#0000FF\\"> final</span><span style=\\"color:#267F99\\"> CenterAuthenticationEntryPoint</span><span style=\\"color:#001080\\"> authenticationEntryPoint</span><span style=\\"color:#000000\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#0000FF\\">    private</span><span style=\\"color:#0000FF\\"> final</span><span style=\\"color:#267F99\\"> IgnoreUrlProperties</span><span style=\\"color:#001080\\"> ignoreUrlProperties</span><span style=\\"color:#000000\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#0000FF\\">    private</span><span style=\\"color:#0000FF\\"> final</span><span style=\\"color:#267F99\\"> WhiteListAuthorizationFilter</span><span style=\\"color:#001080\\"> whiteListAuthorizationFilter</span><span style=\\"color:#000000\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#0000FF\\">    private</span><span style=\\"color:#0000FF\\"> final</span><span style=\\"color:#0000FF\\"> static</span><span style=\\"color:#267F99\\"> String</span><span style=\\"color:#001080\\"> SYS_API_SAVE_URI</span><span style=\\"color:#000000\\"> = </span><span style=\\"color:#A31515\\">\\"/admin/sysApi/*/batch\\"</span><span style=\\"color:#000000\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#0000FF\\">    private</span><span style=\\"color:#0000FF\\"> final</span><span style=\\"color:#0000FF\\"> static</span><span style=\\"color:#267F99\\"> String</span><span style=\\"color:#001080\\"> SCOPE_SYS_API_SAVE</span><span style=\\"color:#000000\\"> = </span><span style=\\"color:#A31515\\">\\"api-save\\"</span><span style=\\"color:#000000\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#000000\\">    @</span><span style=\\"color:#267F99\\">Bean</span></span>\\n<span class=\\"line\\"><span style=\\"color:#267F99\\">    SecurityWebFilterChain</span><span style=\\"color:#795E26\\">  securityFilterChain</span><span style=\\"color:#000000\\">(</span><span style=\\"color:#267F99\\">ServerHttpSecurity</span><span style=\\"color:#001080\\"> httpSecurity</span><span style=\\"color:#000000\\">) </span><span style=\\"color:#0000FF\\">throws</span><span style=\\"color:#267F99\\"> Exception</span><span style=\\"color:#000000\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color:#001080\\">        httpSecurity</span><span style=\\"color:#000000\\">.</span><span style=\\"color:#795E26\\">authorizeExchange</span><span style=\\"color:#000000\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color:#008000\\">                        //构造一个路径及授权判断的映射的Entry对象</span></span>\\n<span class=\\"line\\"><span style=\\"color:#000000\\">                        .</span><span style=\\"color:#795E26\\">pathMatchers</span><span style=\\"color:#000000\\">(</span><span style=\\"color:#001080\\">ArrayUtil</span><span style=\\"color:#000000\\">.</span><span style=\\"color:#795E26\\">toArray</span><span style=\\"color:#000000\\">(</span><span style=\\"color:#001080\\">ignoreUrlProperties</span><span style=\\"color:#000000\\">.</span><span style=\\"color:#795E26\\">getWhites</span><span style=\\"color:#000000\\">(),</span><span style=\\"color:#001080\\">String</span><span style=\\"color:#000000\\">.</span><span style=\\"color:#001080\\">class</span><span style=\\"color:#000000\\">)).</span><span style=\\"color:#795E26\\">permitAll</span><span style=\\"color:#000000\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color:#000000\\">                        .</span><span style=\\"color:#795E26\\">pathMatchers</span><span style=\\"color:#000000\\">(SYS_API_SAVE_URI).</span><span style=\\"color:#795E26\\">hasAnyAuthority</span><span style=\\"color:#000000\\">(SCOPE_SYS_API_SAVE)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#000000\\">                        .</span><span style=\\"color:#795E26\\">anyExchange</span><span style=\\"color:#000000\\">().</span><span style=\\"color:#795E26\\">access</span><span style=\\"color:#000000\\">(authorizationManager)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#000000\\">                        .</span><span style=\\"color:#795E26\\">and</span><span style=\\"color:#000000\\">().</span><span style=\\"color:#795E26\\">exceptionHandling</span><span style=\\"color:#000000\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color:#008000\\">                        //处理未授权</span></span>\\n<span class=\\"line\\"><span style=\\"color:#000000\\">                        .</span><span style=\\"color:#795E26\\">accessDeniedHandler</span><span style=\\"color:#000000\\">(centerAccessDeniedHandler)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#008000\\">                        //未认证</span></span>\\n<span class=\\"line\\"><span style=\\"color:#000000\\">                        .</span><span style=\\"color:#795E26\\">authenticationEntryPoint</span><span style=\\"color:#000000\\">(authenticationEntryPoint)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#000000\\">                        .</span><span style=\\"color:#795E26\\">and</span><span style=\\"color:#000000\\">().</span><span style=\\"color:#795E26\\">csrf</span><span style=\\"color:#000000\\">().</span><span style=\\"color:#795E26\\">disable</span><span style=\\"color:#000000\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color:#001080\\">        httpSecurity</span><span style=\\"color:#000000\\">.</span><span style=\\"color:#795E26\\">addFilterBefore</span><span style=\\"color:#000000\\">(whiteListAuthorizationFilter, </span><span style=\\"color:#001080\\">SecurityWebFiltersOrder</span><span style=\\"color:#000000\\">.</span><span style=\\"color:#001080\\">AUTHENTICATION</span><span style=\\"color:#000000\\">);</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#008000\\">        //资源服务器配置，获取token，校验token，及封装被认证的对象</span></span>\\n<span class=\\"line\\"><span style=\\"color:#001080\\">        httpSecurity</span><span style=\\"color:#000000\\">.</span><span style=\\"color:#795E26\\">oauth2ResourceServer</span><span style=\\"color:#000000\\">(oauth2 </span><span style=\\"color:#0000FF\\">-&gt;</span><span style=\\"color:#001080\\"> oauth2</span><span style=\\"color:#000000\\">.</span><span style=\\"color:#795E26\\">opaqueToken</span><span style=\\"color:#000000\\">(token</span><span style=\\"color:#0000FF\\">-&gt;</span><span style=\\"color:#001080\\">token</span><span style=\\"color:#000000\\">.</span><span style=\\"color:#795E26\\">introspector</span><span style=\\"color:#000000\\">(centerOpaqueTokenIntrospector))</span></span>\\n<span class=\\"line\\"><span style=\\"color:#000000\\">                .</span><span style=\\"color:#795E26\\">bearerTokenConverter</span><span style=\\"color:#000000\\">(centerTokenExtractor)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#000000\\">                .</span><span style=\\"color:#795E26\\">authenticationEntryPoint</span><span style=\\"color:#000000\\">(authenticationEntryPoint)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#000000\\">                .</span><span style=\\"color:#795E26\\">accessDeniedHandler</span><span style=\\"color:#000000\\">(centerAccessDeniedHandler));</span></span>\\n<span class=\\"line\\"><span style=\\"color:#AF00DB\\">        return</span><span style=\\"color:#001080\\"> httpSecurity</span><span style=\\"color:#000000\\">.</span><span style=\\"color:#795E26\\">build</span><span style=\\"color:#000000\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color:#000000\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"color:#000000\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{y as comp,u as data};
